"use strict";(self["webpackChunkramp_website"]=self["webpackChunkramp_website"]||[]).push([[2951],{904:function(e,t,n){n.d(t,{d:function(){return a}});var o,r=n(98503),i=n(98089);const s=new r.ax({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let l=o=class extends r.v{constructor(e){super(e),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(e,t){const n=r.B.fromJSON(t.spatialReference),o=[];for(let i=0;i<e.length;i++){const t=e[i],s=r.b1.fromJSON(t),l=t.geometry?.spatialReference;null==s.geometry||l||(s.geometry.spatialReference=n);const a=t.aggregateGeometries,f=s.aggregateGeometries;if(a&&null!=f)for(const e in f){const t=f[e],o=a[e],r=o?.spatialReference;null==t||r||(t.spatialReference=n)}o.push(s)}return o}writeGeometryType(e,t,n,o){if(e)return void s.write(e,t,n,o);const{features:r}=this;if(r)for(const i of r)if(null!=i?.geometry)return void s.write(i.geometry.type,t,n,o)}readQueryGeometry(e,t){if(!e)return null;const n=!!e.spatialReference,o=(0,r.b3)(e);return o&&!n&&t.spatialReference&&(o.spatialReference=r.B.fromJSON(t.spatialReference)),o}writeSpatialReference(e,t){if(e)return void(t.spatialReference=e.toJSON());const{features:n}=this;if(n)for(const o of n)if(o&&null!=o.geometry&&o.geometry.spatialReference)return void(t.spatialReference=o.geometry.spatialReference.toJSON())}clone(){return new o(this.cloneProperties())}cloneProperties(){return(0,r.f)({displayFieldName:this.displayFieldName,exceededTransferLimit:this.exceededTransferLimit,features:this.features,fields:this.fields,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,queryGeometry:this.queryGeometry,spatialReference:this.spatialReference,transform:this.transform})}toJSON(e){const t=this.write();if(t.features&&Array.isArray(e)&&e.length>0)for(let n=0;n<t.features.length;n++){const o=t.features[n];if(o.geometry){const t=e?.[n];o.geometry=t?.toJSON()||o.geometry}}return t}quantize(e){const{scale:[t,n],translate:[o,r]}=e,i=e=>Math.round((e-o)/t),s=e=>Math.round((r-e)/n),l=this.features,a=this._getQuantizationFunction(this.geometryType,i,s);for(let f=0,u=l.length;f<u;f++)a?.(l[f].geometry)||(l.splice(f,1),f--,u--);return this.transform=e,this}unquantize(){const{geometryType:e,features:t,transform:n}=this;if(!n)return this;const{translate:[o,r],scale:[i,s]}=n,l=e=>e*i+o,a=e=>r-e*s;let f=null,u=null;if(this.hasZ&&null!=n?.scale?.[2]){const{translate:[,,e],scale:[,,t]}=n;f=n=>n*t+e}if(this.hasM&&null!=n?.scale?.[3]){const{translate:[,,,e],scale:[,,,t]}=n;u=n=>null==n?n:n*t+e}const p=this._getHydrationFunction(e,l,a,f,u);for(const{geometry:c}of t)null!=c&&p&&p(c);return this.transform=null,this}_quantizePoints(e,t,n){let o,r;const i=[];for(let s=0,l=e.length;s<l;s++){const l=e[s];if(s>0){const e=t(l[0]),s=n(l[1]);e===o&&s===r||(i.push([e-o,s-r]),o=e,r=s)}else o=t(l[0]),r=n(l[1]),i.push([o,r])}return i.length>0?i:null}_getQuantizationFunction(e,t,n){return"point"===e?e=>(e.x=t(e.x),e.y=n(e.y),e):"polyline"===e||"polygon"===e?e=>{const o=(0,r.a9)(e)?e.rings:e.paths,i=[];for(let r=0,s=o.length;r<s;r++){const e=o[r],s=this._quantizePoints(e,t,n);s&&i.push(s)}return i.length>0?((0,r.a9)(e)?e.rings=i:e.paths=i,e):null}:"multipoint"===e?e=>{const o=this._quantizePoints(e.points,t,n);return o&&o.length>0?(e.points=o,e):null}:"extent"===e?e=>e:null}_getHydrationFunction(e,t,n,o,i){return"point"===e?e=>{e.x=t(e.x),e.y=n(e.y),o&&(e.z=o(e.z))}:"polyline"===e||"polygon"===e?e=>{const s=(0,r.a9)(e)?e.rings:e.paths;let l,a;for(let o=0,r=s.length;o<r;o++){const e=s[o];for(let o=0,r=e.length;o<r;o++){const r=e[o];o>0?(l+=r[0],a+=r[1]):(l=r[0],a=r[1]),r[0]=t(l),r[1]=n(a)}}if(o&&i)for(let t=0,n=s.length;t<n;t++){const e=s[t];for(let t=0,n=e.length;t<n;t++){const n=e[t];n[2]=o(n[2]),n[3]=i(n[3])}}else if(o)for(let t=0,n=s.length;t<n;t++){const e=s[t];for(let t=0,n=e.length;t<n;t++){const n=e[t];n[2]=o(n[2])}}else if(i)for(let t=0,n=s.length;t<n;t++){const e=s[t];for(let t=0,n=e.length;t<n;t++){const n=e[t];n[2]=i(n[2])}}}:"extent"===e?e=>{e.xmin=t(e.xmin),e.ymin=n(e.ymin),e.xmax=t(e.xmax),e.ymax=n(e.ymax),o&&null!=e.zmax&&null!=e.zmin&&(e.zmax=o(e.zmax),e.zmin=o(e.zmin)),i&&null!=e.mmax&&null!=e.mmin&&(e.mmax=i(e.mmax),e.mmin=i(e.mmin))}:"multipoint"===e?e=>{const r=e.points;let s,l;for(let o=0,i=r.length;o<i;o++){const e=r[o];o>0?(s+=e[0],l+=e[1]):(s=e[0],l=e[1]),e[0]=t(s),e[1]=n(l)}if(o&&i)for(let t=0,n=r.length;t<n;t++){const e=r[t];e[2]=o(e[2]),e[3]=i(e[3])}else if(o)for(let t=0,n=r.length;t<n;t++){const e=r[t];e[2]=o(e[2])}else if(i)for(let t=0,n=r.length;t<n;t++){const e=r[t];e[2]=i(e[2])}}:null}};(0,r.k)([(0,r.o)({type:String,json:{write:!0}})],l.prototype,"displayFieldName",void 0),(0,r.k)([(0,r.o)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],l.prototype,"exceededTransferLimit",void 0),(0,r.k)([(0,r.o)({type:[r.b1],json:{write:!0}})],l.prototype,"features",void 0),(0,r.k)([(0,r.u)("features")],l.prototype,"readFeatures",null),(0,r.k)([(0,r.o)({type:[i.y],json:{write:!0}})],l.prototype,"fields",void 0),(0,r.k)([(0,r.o)({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:s.read}}})],l.prototype,"geometryType",void 0),(0,r.k)([(0,r.q)("geometryType")],l.prototype,"writeGeometryType",null),(0,r.k)([(0,r.o)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],l.prototype,"hasM",void 0),(0,r.k)([(0,r.o)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],l.prototype,"hasZ",void 0),(0,r.k)([(0,r.o)({types:r.b2,json:{write:!0}})],l.prototype,"queryGeometry",void 0),(0,r.k)([(0,r.u)("queryGeometry")],l.prototype,"readQueryGeometry",null),(0,r.k)([(0,r.o)({type:r.B,json:{write:!0}})],l.prototype,"spatialReference",void 0),(0,r.k)([(0,r.q)("spatialReference")],l.prototype,"writeSpatialReference",null),(0,r.k)([(0,r.o)({json:{write:!0}})],l.prototype,"transform",void 0),l=o=(0,r.k)([(0,r.A)("esri.rest.support.FeatureSet")],l),l.prototype.toJSON.isDefaultToJSON=!0;const a=l},41051:function(e,t,n){n.d(t,{i:function(){return i}});var o=n(98503);function r(e,t,n){if(null==e.hasM||e.hasZ)for(const o of t)for(const e of o)e.length>2&&(e[2]*=n)}function i(e,t,n){if(!e&&!t||!n)return;const r=(0,o.bg)(n);s(e,n,r),s(t,n,r)}function s(e,t,n){if(e)for(const o of e)l(o.geometry,t,n)}function l(e,t,n){if(!e?.spatialReference||(0,o.bh)(e.spatialReference,t))return;const i=(0,o.bg)(e.spatialReference)/n;if(1!==i)if("x"in e)null!=e.z&&(e.z*=i);else if("rings"in e)r(e,e.rings,i);else if("paths"in e)r(e,e.paths,i);else if("points"in e&&(null==e.hasM||e.hasZ))for(const o of e.points)o.length>2&&(o[2]*=i)}},6488:function(e,t,n){n.d(t,{t:function(){return r}});var o=n(49555);function r(e,t,n){if(!n?.features||!n.hasZ)return;const r=(0,o.o)(n.geometryType,t,e.outSpatialReference);if(null!=r)for(const o of n.features)r(o.geometry)}}}]);
//# sourceMappingURL=2951.87043b9f.js.map