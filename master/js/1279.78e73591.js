"use strict";(self["webpackChunkramp_website"]=self["webpackChunkramp_website"]||[]).push([[1279],{87743:function(t,e,n){n.d(e,{T:function(){return dr},a:function(){return Ir},c:function(){return jr},h:function(){return Pe},l:function(){return Se},w:function(){return fr},y:function(){return Dr}});var s=n(76173),r=n(98503),o=n(40879),i=n(47308),a=n(38020),u=n(99665),l=n(98089);let c=class extends r.v{constructor(){super(...arguments),this.raster=void 0}};(0,r.k)([(0,r.o)({json:{write:!0}})],c.prototype,"raster",void 0),c=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.BaseFunctionArguments")],c);const p=c;var h;let m=h=class extends p{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new h({raster:this.raster,raster2:this.raster2,operation:this.operation})}};(0,r.k)([(0,r.o)({json:{write:!0}})],m.prototype,"operation",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],m.prototype,"raster2",void 0),(0,r.k)([(0,r.o)({readOnly:!0})],m.prototype,"rasters",null),m=h=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],m);const f=m,d=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let g=class extends r.v{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:n}=t;let s=n.rasters||n.raster&&[n.raster];for(;s?.length;){e.unshift(...s);const t=[];for(let e=0;e<s.length;e++){const{parameters:n}=s[e],r=n.rasters||n.raster&&[n.raster];r?.length&&t.push(...r)}s=t}for(let a=e.length-1;a>=0;a--)e[a].isNoopProcess&&e.splice(a,1);let r=!1;for(let a=0;a<e.length;a++){const t=e[a];t.id=e.length-a-1;const{rasters:n}=t.parameters;r=r||null!=n&&n.length>1}const o=e.some((({name:t})=>d.has(t.toLowerCase()))),{rawSourceRasterInfos:i}=this;return{functions:e,hasBranches:r,hasFocalFunction:o,isSourceSingleBand:1===i?.[0]?.bandCount}}bind(t,e=!1,n=-1){this.id=n+1;const s=this._getRasterValues();let r=!0;for(let o=0;o<s.length;o++){const n=s[o];if(null!=n&&this._isRasterFunctionValue(n)){const s=n.bind(t,e,this.id+o);if(!s.success)return this._bindingResult=s,s;r=r&&s.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=r&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),n=0===e.length?t.pixelBlocks??t.primaryPixelBlocks:e.map((e=>this._readRasterValue(e,t)));return this._processPixels({...t,pixelBlocks:n})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const e=t.map((t=>t.processInputBandIds()[0]));this.rawInputBandIds=e,this.isInputBandIdsSwizzled=this.rawInputBandIds.some(((t,e)=>t!==e));const n=t.filter((t=>"ExtractBand"===t.functionName));return n.length&&n.forEach(((t,e)=>{t.isInputBandIdsSwizzled=!0,t.swizzledBandSelection=[e,e,e]})),this.rawInputBandIds}const n=t[0];if(n){if(e=n.processInputBandIds(),n.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:t}=this.sourceRasterInfos[0];for(let n=0;n<t;n++)e.push(n)}const s=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=s.some(((t,e)=>t!==e)),this.rawInputBandIds=s,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:n}=this.functionArguments;return n&&Array.isArray(n)&&n.length?(t.rasters=n.map((t=>this._isRasterFunctionValue(t)?t.getWebGLProcessorDefinition():"number"==typeof t?{name:"Constant",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1})),t.rasters.some((t=>null!=t))||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];"Clip"===this.functionName&&t.push(this.functionArguments);const{raster:e,rasters:n}=this.functionArguments;if(n&&Array.isArray(n)&&n.length)n.forEach((e=>{if(this._isRasterFunctionValue(e)){const n=e.getClippingGeometries();t.push(...n)}}));else if(this._isRasterFunctionValue(e)){const n=e.getClippingGeometries();t.push(...n)}return t}_getOutputPixelType(t){return"unknown"===this.outputPixelType?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_removeStatsHistColormapVAT(t){t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.multidimensionalInfo?.variables.forEach((t=>{t.statistics=void 0,t.histograms=void 0}))}_getRasterValues(){const{rasterArgumentNames:t}=this;return"rasters"===t[0]?this.functionArguments.rasters??[]:t.flatMap((t=>this.functionArguments[t]))}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:n,rasterIds:s}=t;if(0===e.length)return n;const r=e.map((t=>t&&"object"==typeof t&&"bind"in t&&t.rasterInfo?t.rasterInfo:"string"==typeof t&&s.includes(t)?n[s.indexOf(t)]:"number"!=typeof t?n[0]:void 0)),o=r.find((t=>t))??n[0];return r.forEach(((t,e)=>{void 0===t&&(r[e]=o)})),r}_getPrimaryRasterId(t){return t?.rasterId}_getPrimaryRasters(t,e=[],n=[]){for(let s=0;s<t.sourceRasters.length;s++){const r=t.sourceRasters[s];if("number"!=typeof r)if("bind"in r)this._getPrimaryRasters(r,e,n);else{const t=r,s=this._getPrimaryRasterId(t);if(null==s)continue;n.includes(s)||(this.mainPrimaryRasterId===s?(e.unshift(t),n.unshift(s)):(e.push(t),n.push(s)))}}}_isRasterFunctionValue(t){return null!=t&&"object"==typeof t&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:n}=e;if(null==t||"$$"===t){const t=n[0];return null==t?null:t.clone()}if("string"==typeof t){const s=e.primaryRasterIds.indexOf(t);return-1===s?null:n[s]}if("number"==typeof t){const e=n[0];if(null==e)return null;const{width:s,height:r,pixelType:i}=e,a=new Float32Array(s*r);a.fill(t);const u=this.sourceRasterInfos[0].bandCount,l=new Array(u).fill(a);return new o.g({width:s,height:r,pixelType:i,pixels:l})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:e,keyProperties:n,statistics:s,histograms:r}=t,o=n.BandProperties;o&&o.length!==e&&(t.keyProperties={...n,BandProperties:void 0}),s&&s.length!==e&&(t.statistics=s.length>e?s.slice(0,e):null),r&&r.length!==e&&(t.histograms=r.length>e?r.slice(0,e):null),n.BAND_COUNT&&Number(n.BAND_COUNT)!==e&&(t.keyProperties={...n,BAND_COUNT:"string"==typeof n.BAND_COUNT?String(e):e})}};(0,r.k)([(0,r.o)({json:{write:!0}})],g.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],g.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],g.prototype,"rasterArgumentNames",void 0),(0,r.k)([(0,r.o)({json:{write:!0}}),(0,r.by)((t=>t?.toLowerCase()))],g.prototype,"outputPixelType",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],g.prototype,"mainPrimaryRasterId",void 0),(0,r.k)([(0,r.o)()],g.prototype,"sourceRasters",void 0),(0,r.k)([(0,r.o)({type:[i.a],json:{write:!0}})],g.prototype,"sourceRasterInfos",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],g.prototype,"rasterInfo",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],g.prototype,"readingBufferSize",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],g.prototype,"id",void 0),(0,r.k)([(0,r.o)()],g.prototype,"isNoopProcess",void 0),(0,r.k)([(0,r.o)()],g.prototype,"supportsGPU",null),(0,r.k)([(0,r.o)()],g.prototype,"rawInputBandIds",void 0),(0,r.k)([(0,r.o)()],g.prototype,"rawSourceRasterInfos",void 0),(0,r.k)([(0,r.o)()],g.prototype,"isInputBandIdsSwizzled",void 0),(0,r.k)([(0,r.o)()],g.prototype,"swizzledBandSelection",void 0),(0,r.k)([(0,r.o)()],g.prototype,"isBranch",void 0),(0,r.k)([(0,r.o)({readOnly:!0})],g.prototype,"flatWebGLFunctionChain",null),(0,r.k)([(0,r.o)()],g.prototype,"_bindingResult",void 0),g=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.BaseRasterFunction")],g);const y=g,x={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},w={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},b={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},k={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},v={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},A={setNull:50,conditional:78},T={...w,...b,...k,...v,...A},P=new Map([[k.acos,{domain:[0,Math.PI],isInteger:!1}],[k.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[k.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[k.cos,{domain:[-1,1],isInteger:!1}],[k.sin,{domain:[-1,1],isInteger:!1}],[b.booleanAnd,{domain:[0,1],isInteger:!0}],[b.booleanNot,{domain:[0,1],isInteger:!0}],[b.booleanOr,{domain:[0,1],isInteger:!0}],[b.booleanXOr,{domain:[0,1],isInteger:!0}],[b.equalTo,{domain:[0,1],isInteger:!0}],[b.notEqual,{domain:[0,1],isInteger:!0}],[b.greaterThan,{domain:[0,1],isInteger:!0}],[b.greaterThanEqual,{domain:[0,1],isInteger:!0}],[b.lessThan,{domain:[0,1],isInteger:!0}],[b.lessThanEqual,{domain:[0,1],isInteger:!0}],[b.isNull,{domain:[0,1],isInteger:!0}]]);function R(t){return P.get(t)}const N=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function F(t,e=!1){const n=t.map((t=>t.mask)),s=n.filter((t=>null!=t)),r=t[0].pixels[0].length;if(0===s.length||e&&s.length!==n.length)return new Uint8Array(r).fill(255);const o=s[0],i=new Uint8Array(o);if(1===s.length)return i;if(!e){for(let t=1;t<s.length;t++){const e=s[t];for(let t=0;t<i.length;t++)i[t]&&(i[t]=e[t]?255:0)}return i}for(let a=1;a<s.length;a++){const t=s[a];for(let e=0;e<i.length;e++)0===i[e]&&(i[e]=t[e]?255:0)}return i}function C(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]+r[o]);return a}function S(t,e,n){const[s]=t,r=s.length,i=o.g.createEmptyBand("f32",r);return i.set(s),i}function I(t,e,n){const[s]=t,r=s.length,i=o.g.createEmptyBand(n,r);for(let o=0;o<r;o++)e&&!e[o]||(i[o]=s[o]*s[o]);return i}function M(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]-r[o]);return a}function _(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]*r[o]);return a}function j(t,e,n){const[s]=t,r=s.length,i=o.g.createEmptyBand(n,r);for(let o=0;o<r;o++)e&&!e[o]||(i[o]=Math.sign(s[o])*Math.floor(Math.abs(s[o])));return i}function B(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]/r[o]);return a}function G(t,e,n){return B(t,e,"f32")}function z(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=Math.floor(s[o]/r[o]));return a}function O(t,e,n,s){const r=t[0],i=r.length,a=o.g.createEmptyBand(n,i);if(s===k.atanh){for(let t=0;t<i;t++)if(e[t]){const n=r[t];Math.abs(n)>=1?e[t]=0:a[t]=Math.atanh(n)}return a}const u=s===k.asin?Math.asin:Math.acos;for(let o=0;o<i;o++)if(e[o]){const t=r[o];Math.abs(t)>1?e[o]=0:a[o]=u(t)}return a}function E(t,e,n,s){const[r]=t,i=r.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s(r[o]));return a}function D(t,e,n,s){const[r,i]=t,a=r.length,u=o.g.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(u[o]=s(r[o],i[o]));return u}function U(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]&r[o]);return a}function V(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]<<r[o]);return a}function L(t,e,n){const[s]=t,r=s.length,i=o.g.createEmptyBand(n,r);for(let o=0;o<r;o++)e&&!e[o]||(i[o]=~s[o]);return i}function W(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]|r[o]);return a}function q(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]>>r[o]);return a}function H(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]^r[o]);return a}function K(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]&&r[o]?1:0);return a}function J(t,e,n){const[s]=t,r=s.length,i=o.g.createEmptyBand(n,r);for(let o=0;o<r;o++)e&&!e[o]||(i[o]=s[o]?0:1);return i}function $(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]||r[o]?1:0);return a}function X(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=(s[o]?1:0)^(r[o]?1:0));return a}function Y(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]===r[o]?1:0);return a}function Z(t,e,n,s){const[r]=t,i=r.length,a=o.g.createEmptyBand(n,i),u=s===Math.E;for(let o=0;o<i;o++)e&&!e[o]||(a[o]=u?Math.exp(r[o]):s**r[o]);return a}function Q(t,e,n){return Z(t,e,n,10)}function tt(t,e,n){return Z(t,e,n,2)}function et(t,e,n){return Z(t,e,n,Math.E)}function nt(t,e,n,s){const[r]=t,i=r.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(r[o]<=0?e[o]=0:a[o]=s(r[o]));return a}function st(t,e,n){return nt(t,e,n,Math.log10)}function rt(t,e,n){return nt(t,e,n,Math.log2)}function ot(t,e,n){return nt(t,e,n,Math.log)}function it(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]>r[o]?1:0);return a}function at(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]>=r[o]?1:0);return a}function ut(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]<r[o]?1:0);return a}function lt(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]<=r[o]?1:0);return a}function ct(t,e,n){const[s]=t,r=s.length,i=o.g.createEmptyBand(n,r);if(!e)return i;for(let o=0;o<r;o++)i[o]=e[o]?0:1;return i}function pt(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]%r[o]);return a}function ht(t,e,n){const[s]=t,r=s.length,i=o.g.createEmptyBand(n,r);for(let o=0;o<r;o++)e&&!e[o]||(i[o]=-s[o]);return i}function mt(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]===r[o]?0:1);return a}function ft(t,e,n){const[s,r]=t,i=s.length,a=o.g.createEmptyBand(n,i),u=new Uint8Array(i);for(let o=0;o<i;o++)null!=e&&!e[o]||0!==s[o]||(a[o]=r[o],u[o]=255);return{band:a,mask:u}}function dt(t,e,n){const[s,r,i]=t,a=s.length,u=o.g.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(u[o]=s[o]?r[o]:i[o]);return u}function gt(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)if(!e||e[o]){let e=r[o];for(let n=1;n<s;n++){const s=t[n][o];e<s&&(e=s)}a[o]=e}return a}function yt(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)if(!e||e[o]){let e=r[o];for(let n=1;n<s;n++){const s=t[n][o];e>s&&(e=s)}a[o]=e}return a}function xt(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)if(!e||e[o]){let e=r[o],n=e;for(let r=1;r<s;r++){const s=t[r][o];n<s?n=s:e>s&&(e=s)}a[o]=n-e}return a}function wt(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)if(!e||e[o]){let e=0;for(let n=0;n<s;n++)e+=t[n][o];a[o]=e/s}return a}function bt(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)if(!e||e[o])for(let e=0;e<s;e++){const n=t[e];a[o]+=n[o]}return a}function kt(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)if(!e||e[o]){const e=new Float32Array(s);let n=0;for(let i=0;i<s;i++){const s=t[i];n+=s[o],e[i]=s[o]}n/=s;let r=0;for(let t=0;t<s;t++)r+=(e[t]-n)**2;a[o]=Math.sqrt(r/s)}return a}function vt(t,e,n){const s=t.length;if(s<2)return t[0];const r=Math.floor(s/2),[i]=t,a=i.length,u=o.g.createEmptyBand(n,a),l=new Float32Array(s),c=s%2==1;for(let o=0;o<a;o++)if(!e||e[o]){for(let e=0;e<s;e++)l[e]=t[e][o];l.sort(),u[o]=c?l[r]:(l[r]+l[r-1])/2}return u}function At(t,e,n){const[s,r]=t;if(null==r)return s;const i=s.length,a=o.g.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]<r[o]?s[o]:r[o]);return a}function Tt(t,e,n){const s=t.length;if(s<=2)return At(t,e,n);const r=t[0].length,i=o.g.createEmptyBand(n,r),a=new Map;for(let o=0;o<r;o++)if(!e||e[o]){a.clear();for(let i=0;i<s;i++){const e=t[i][o];a.set(e,a.has(e)?a.get(e)+1:1)}let e=0,n=0;const r=[];for(const t of a.keys())e=a.get(t),e>n?(n=e,r.length=0,r.push(t)):e===n&&r.push(t);r.length>1&&r.sort(((t,e)=>t-e)),i[o]=r[0]}return i}function Pt(t,e,n){const s=t.length;if(s<=2)return At(t,e,n);const r=t[0].length,i=o.g.createEmptyBand(n,r),a=new Map;for(let o=0;o<r;o++)if(!e||e[o]){a.clear();for(let i=0;i<s;i++){const e=t[i][o];a.set(e,a.has(e)?a.get(e)+1:1)}let e=0,n=t.length;const r=[];for(const t of a.keys())e=a.get(t),e<n?(n=e,r.length=0,r.push(t)):e===n&&r.push(t);r.length>1&&r.sort(((t,e)=>t-e)),i[o]=r[0]}return i}function Rt(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=o.g.createEmptyBand(n,i),u=new Set;for(let o=0;o<i;o++)if(!e||e[o]){let e;u.clear();for(let n=0;n<s;n++)e=t[n][o],u.add(e);a[o]=u.size}return a}const Nt=new Map,Ft=new Map,Ct=new Map,St=new Map;function It(){Nt.size||(Nt.set(4,Math.sqrt),Nt.set(6,Math.acos),Nt.set(7,Math.asin),Nt.set(8,Math.atan),Nt.set(9,Math.atanh),Nt.set(10,Math.abs),Nt.set(21,Math.cos),Nt.set(22,Math.cosh),Nt.set(48,Math.floor),Nt.set(49,Math.ceil),Nt.set(51,Math.sin),Nt.set(52,Math.sinh),Nt.set(56,Math.tan),Nt.set(57,Math.tanh),Nt.set(59,Math.acosh),Nt.set(60,Math.asinh),Nt.set(65,Math.floor),Ft.set(5,Math.pow),Ft.set(61,Math.atan2),Ct.set(1,C),Ct.set(2,M),Ct.set(3,_),Ct.set(11,U),Ct.set(12,V),Ct.set(13,L),Ct.set(14,W),Ct.set(15,q),Ct.set(16,H),Ct.set(17,K),Ct.set(18,J),Ct.set(19,$),Ct.set(20,X),Ct.set(23,B),Ct.set(24,Y),Ct.set(25,et),Ct.set(26,Q),Ct.set(27,tt),Ct.set(28,it),Ct.set(29,at),Ct.set(30,j),Ct.set(31,ct),Ct.set(32,S),Ct.set(33,ut),Ct.set(34,lt),Ct.set(35,ot),Ct.set(36,st),Ct.set(37,rt),Ct.set(44,pt),Ct.set(45,ht),Ct.set(46,mt),Ct.set(53,I),Ct.set(64,G),Ct.set(65,z),Ct.set(76,dt),Ct.set(78,dt),St.set(38,Tt),St.set(39,gt),St.set(40,wt),St.set(41,vt),St.set(42,yt),St.set(43,Pt),St.set(47,xt),St.set(54,kt),St.set(55,bt),St.set(58,Rt),St.set(66,Tt),St.set(67,gt),St.set(68,wt),St.set(69,vt),St.set(70,yt),St.set(71,Pt),St.set(72,xt),St.set(73,kt),St.set(74,bt),St.set(75,Rt))}function Mt(t,e,n={}){It();let s=F(t,e>=66&&e<=75);const{outputPixelType:r="f32"}=n,i=!St.has(e)||n.processAsMultiband,a=i?t[0].pixels.length:1,u=[];for(let c=0;c<a;c++){const n=St.has(e)&&!i?t.flatMap((t=>t.pixels)):t.map((t=>t.pixels[c]));let a,l=!0;if(e===A.setNull){const t=ft(n,s,r);a=t.band,s=t.mask,l=!1}else Ct.has(e)?a=Ct.get(e)(n,s,"f64"):Nt.has(e)?a=e===k.asin||e===k.acos||e===k.atanh?O(n,s,"f64",e):E(n,s,"f64",Nt.get(e)):Ft.has(e)?a=D(n,s,"f64",Ft.get(e)):St.has(e)?a=St.get(e)(n,s,"f64"):(a=n[0],l=!1);if(l&&e!==b.isNull&&!P.has(e)){const t=o.g.createEmptyBand(r,a.length);s||(s=new Uint8Array(a.length).fill(255)),(0,o.t)(a,s),(0,o.v)(a,s,r,t),a=t}u.push(a)}const l=t[0];return new o.g({width:l.width,height:l.height,pixelType:r,mask:e===b.isNull?null:s,pixels:u})}function _t(t,e,n){return Mt(t,e=[null,1,2,3,23,5,44][e]??1,{outputPixelType:n})}let jt=class extends y{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return null==e?.[0]||null==e?.[1]?null:_t(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],n=this.outputPixelType??"f32";let[s,r]=(0,o.j)(n);const i=(0,o.w)(n);return i&&(s-=1e-4,r+=1e-4),{imageCount:2,operationName:e,domainRange:[s,r],isOutputRounded:i}}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],jt.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:f,json:{write:!0,name:"rasterFunctionArguments"}})],jt.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],jt.prototype,"rasterArgumentNames",void 0),jt=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.ArithmeticFunction")],jt);const Bt=jt;var Gt;let zt=Gt=class extends p{clone(){return new Gt({raster:this.raster})}};zt=Gt=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.AspectFunctionArguments")],zt);const Ot=zt;let Et=class extends y{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{extent:n,primaryPixelSizes:s}=t,r=s?.[0],o=r??(n?{x:n.width/e.width,y:n.height/e.height}:{x:1,y:1});return(0,i.v)(e,{resolution:o})}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],Et.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:Ot,json:{write:!0,name:"rasterFunctionArguments"}})],Et.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],Et.prototype,"rasterArgumentNames",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],Et.prototype,"isGCS",void 0),Et=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.AspectFunction")],Et);const Dt=Et,Ut=new Set(["+","-","*","/","(",")"]);function Vt(t,e){(t=t.replaceAll(" ","")).startsWith("-")&&(t="0"+t),t.startsWith("+")&&(t=t.slice(1));const n=t.split(""),s=[],r=[];let o="";for(let i=0;i<n.length;i++){const t=n[i];Ut.has(t)?(o.length&&r.push(Lt(o,e)),s.push(t),o=""):o=o.concat(t)}return o.length&&r.push(Lt(o,e)),{ops:s,nums:r}}function Lt(t,e){return t.toLowerCase().startsWith("b")?e[parseInt(t.slice(1),10)-1]:parseFloat(t)}function Wt(t,e,n,s){if("number"==typeof n&&"number"==typeof s)return n+s;let r,o,i;"number"==typeof n?(i=s,r=i.length,o=new Float32Array(r),o.fill(n)):(r=n.length,o=n,s.constructor===Number?(i=new Float32Array(r),i.fill(s)):i=s);const a=new Float32Array(r);switch(e){case"+":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]+i[e]);break;case"-":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]-i[e]);break;case"*":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]*i[e]);break;case"/":for(let e=0;e<r;e++)(null==t||t[e])&&i[e]&&(a[e]=o[e]/i[e]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return a}function qt(t,e){t.splice(e,1);let n=0,s=0;do{n=0,s=0;for(let e=0;e<t.length;e++)if("("===t[e])n=e;else if(")"===t[e]){s=e;break}s===n+1&&t.splice(n,2)}while(s===n+1);return t}function Ht(t){if(1===t.length)return{opIndex:0,numIndex:0};let e=0,n=0;for(let i=0;i<t.length;i++)if("("===t[i])e=i;else if(")"===t[i]){n=i;break}const s=0===n?t:t.slice(e+1,n);let r=-1;for(let i=0;i<s.length;i++)if("*"===s[i]||"/"===s[i]){r=i;break}if(r>-1)n>0&&(r+=e+1);else{for(let t=0;t<s.length;t++)if("+"===s[t]||"-"===s[t]){r=t;break}n>0&&(r+=e+1)}let o=0;for(let i=0;i<r;i++)"("===t[i]&&o++;return{opIndex:r,numIndex:r-o}}function Kt(t,e,n){let s,{ops:r,nums:o}=Vt(n,e);if(0===r.length){const t=1===o.length?o[0]:e[0];if(t instanceof Float32Array)return[t];const n=new Float32Array(e[0].length);return"number"==typeof t?n.fill(t):n.set(t),[n]}for(;r.length>0;){const{numIndex:e,opIndex:n}=Ht(r);if(s=Wt(t,r[n],o[e],o[e+1]),1===r.length)break;r=qt(r,n),o.splice(e,2,s)}return[s]}const Jt=new r.ax({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function $t(t,e){if(!(0,o.o)(t))return t;const{equation:n,method:s}=e,r=e.bandIndexes.map((t=>t-1)),{pixels:i,mask:a}=t;let u;switch(s){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":u=Zt(a,i[r[0]],i[r[1]]);break;case"ndwi":u=Zt(a,i[r[1]],i[r[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":u=Qt(a,i[r[0]],i[r[1]]);break;case"ci-g":case"ci-re":u=te(a,i[r[0]],i[r[1]]);break;case"savi":u=ee(a,i[r[0]],i[r[1]],r[2]+1);break;case"tsavi":u=ne(a,i[r[0]],i[r[1]],r[2]+1,r[3]+1,r[4]+1);break;case"msavi":u=se(a,i[r[0]],i[r[1]]);break;case"gemi":u=re(a,i[r[0]],i[r[1]]);break;case"pvi":u=oe(a,i[r[0]],i[r[1]],r[2]+1,r[3]+1);break;case"gvitm":u=ie(a,[i[r[0]],i[r[1]],i[r[2]],i[r[3]],i[r[4]],i[r[5]]]);break;case"sultan":u=ae(a,[i[r[0]],i[r[1]],i[r[2]],i[r[3]],i[r[4]]]);break;case"vari":u=ue(a,[i[r[0]],i[r[1]],i[r[2]]]);break;case"mtvi2":u=le(a,[i[r[0]],i[r[1]],i[r[2]]]);break;case"rtvi-core":u=ce(a,[i[r[0]],i[r[1]],i[r[2]]]);break;case"evi":u=pe(a,[i[r[0]],i[r[1]],i[r[2]]]);break;case"wndwi":u=he(a,[i[r[0]],i[r[1]],i[r[2]]],r[3]?r[3]+1:.5);break;case"bai":u=me(a,i[r[0]],i[r[1]]);break;case"custom":u=Kt(a,i,n);break;default:return t}const{outputPixelType:l="f32"}=e,c=null!=l&&(0,o.w)(l);let p;a?(p=new Uint8Array(t.width*t.height),p.set(a)):c&&(p=new Uint8Array(t.width*t.height).fill(255)),c&&(u=u.map((t=>{const e=o.g.createEmptyBand(l,t.length);return(0,o.v)(t,p,l,e),e})));const h=new o.g({width:t.width,height:t.height,pixelType:l,pixels:u,mask:p});return h.updateStatistics(),h}function Xt(t,e,n,s){const{mask:r,pixels:i,width:a,height:u}=t,l=i[n],c=i[e],p=c.length,h=s?new Uint8Array(p):new Float32Array(p),m=s?100:1,f=s?100.5:0;for(let o=0;o<p;o++)if(null==r||r[o]){const t=l[o],e=c[o],n=t+e;n&&(h[o]=(t-e)/n*m+f)}const d=new o.g({width:a,height:u,mask:r,pixelType:s?"u8":"f32",pixels:[h]});return d.updateStatistics(),d}function Yt(t){const e=new Float32Array(9);return e[3*t[0]]=1,e[3*t[1]+1]=1,e[3*t[2]+2]=1,e}function Zt(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=e[o],s=n[o],i=t+s;i&&(r[o]=(t-s)/i)}return[r]}function Qt(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=e[o],s=n[o];s&&(r[o]=t/s)}return[r]}function te(t,e,n){const s=e.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=e[o],s=n[o];s&&(r[o]=t/s-1)}return[r]}function ee(t,e,n,s){const r=n.length,o=new Float32Array(r);for(let i=0;i<r;i++)if(null==t||t[i]){const t=n[i],r=e[i],a=r+t+s;a&&(o[i]=(r-t)/a*(1+s))}return[o]}function ne(t,e,n,s,r,o){const i=n.length,a=new Float32Array(i),u=-r*s+o*(1+s*s);for(let l=0;l<i;l++)if(null==t||t[l]){const t=n[l],o=e[l],i=r*o+t+u;i&&(a[l]=s*(o-s*t-r)/i)}return[a]}function se(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=n[o],s=e[o],i=2*s+1;r[o]=.5*(i-Math.sqrt(i*i-8*(s-t)))}return[r]}function re(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o]){const t=n[o],s=e[o];if(1!==t&&s+t+.5!==0){const e=(2*(s*s-t*t)+1.5*s+.5*t)/(s+t+.5);r[o]=e*(1-.25*e)-(t-.125)/(1-t)}}return[r]}function oe(t,e,n,s,r){const o=n.length,i=new Float32Array(o),a=1/Math.sqrt(1+s*s);for(let u=0;u<o;u++)if(null==t||t[u]){const t=n[u],o=e[u];i[u]=(o-s*t-r)*a}return[i]}function ie(t,e){const[n,s,r,o,i,a]=e,u=n.length,l=new Float32Array(u);for(let c=0;c<u;c++)(null==t||t[c])&&(l[c]=-.2848*n[c]-.2435*s[c]-.5436*r[c]+.7243*o[c]+.084*i[c]-.18*a[c]);return[l]}function ae(t,e){const[n,s,r,o,i]=e,a=n.length,u=new Float32Array(a),l=new Float32Array(a),c=new Float32Array(a);for(let p=0;p<a;p++)(null==t||t[p])&&(u[p]=i[p]?o[p]/i[p]*100:0,l[p]=n[p]?o[p]/n[p]*100:0,c[p]=r[p]?s[p]/r[p]*(o[p]/r[p])*100:0);return[u,l,c]}function ue(t,e){const[n,s,r]=e,o=n.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=n[a],e=s[a],o=e+t-r[a];o&&(i[a]=(e-t)/o)}return[i]}function le(t,e){const[n,s,r]=e,o=n.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=n[a],e=s[a],o=r[a],u=Math.sqrt((2*t+1)**2-(6*t-5*Math.sqrt(e))-.5);if(u){const n=1.5*(1.2*(t-o)-2.5*(e-o));i[a]=n/u}}return[i]}function ce(t,e){const[n,s,r]=e,o=n.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=n[a],e=s[a],o=r[a];i[a]=100*(t-e)-10*(t-o)}return[i]}function pe(t,e){const[n,s,r]=e,o=n.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(null==t||t[a])for(a=0;a<o;a++){const t=n[a],e=s[a],o=t+6*e-7.5*r[a]+1;o&&(i[a]=2.5*(t-e)/o)}return[i]}function he(t,e,n=.5){const[s,r,o]=e,i=r.length,a=new Float32Array(i);for(let u=0;u<i;u++)if(null==t||t[u])for(u=0;u<i;u++){const t=s[u],e=r[u],i=o[u],l=t+n*e+(1-n)*i;l&&(a[u]=(t-n*e-(1-n)*i)/l)}return[a]}function me(t,e,n){const s=n.length,r=new Float32Array(s);for(let o=0;o<s;o++)if(null==t||t[o])for(o=0;o<s;o++){const t=(.1-e[o])**2+(.06-n[o])**2;t&&(r[o]=1/t)}return[r]}var fe;let de=fe=class extends p{constructor(){super(...arguments),this.method="custom"}clone(){return new fe({method:this.method,bandIndexes:this.bandIndexes,raster:(0,r.f)(this.raster)})}};(0,r.k)([(0,r.o)({json:{type:String,write:!0}})],de.prototype,"bandIndexes",void 0),(0,r.k)([(0,r.bk)(Jt)],de.prototype,"method",void 0),de=fe=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],de);const ge=de,ye=new Set(["vari","mtvi2","rtvi-core","evi"]);let xe=class extends y{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.bandCount="sultan"===this.functionArguments.method?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{method:n,bandIndexes:s}=this.functionArguments,r=s.split(" ").map((t=>parseFloat(t)));return $t(e,{method:n,bandIndexes:r,equation:s,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1));2===t.length&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let n,s;const r=new Float32Array(3),{method:i}=this.functionArguments;switch(i){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":n=Yt([e[0],e[1],0]),s="ndxi";break;case"ndwi":n=Yt([e[1],e[0],0]),s="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":n=Yt([e[0],e[1],0]),s="sr";break;case"ci-g":case"ci-re":n=Yt([e[0],e[1],0]),s="ci";break;case"savi":n=Yt([e[0],e[1],0]),s="savi",r[0]=t[2]+1;break;case"tsavi":n=Yt([e[0],e[1],0]),s="tsavi",r[0]=t[2]+1,r[1]=t[3]+1,r[2]=t[4]+1;break;case"msavi":n=Yt([e[0],e[1],0]),s="msavi";break;case"gemi":n=Yt([e[0],e[1],0]),s="gemi";break;case"pvi":n=Yt([e[0],e[1],0]),s="tsavi",r[0]=t[2]+1,r[1]=t[3]+1;break;case"vari":n=Yt([e[0],e[1],e[2]]),s="vari";break;case"mtvi2":n=Yt([e[0],e[1],e[2]]),s="mtvi";break;case"rtvi-core":n=Yt([e[0],e[1],e[2]]),s="rtvicore";break;case"evi":n=Yt([e[0],e[1],e[2]]),s="evi";break;case"wndwi":n=Yt([e[0],e[1],0]),s="wndwi",r[0]=t[3]?t[3]+1:.5;break;case"bai":n=Yt([e[1],e[0],0]),s="bai";break;default:n=Yt([0,1,2]),s="custom"}return{bandIndexMat3:n,indexType:s,adjustments:r,isOutputRounded:(0,o.w)(this.outputPixelType)}}_getInputBandIds(t){if("custom"===this.functionArguments.method)return t;const e=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1)),n=t.length,s=e.map((t=>t>=n?n-1:t)),r=ye.has(this.functionArguments.method)?3:2,o=s.slice(0,r).map((e=>t[e]));return 2===o.length&&o.push(0),o}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],xe.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:ge,json:{write:!0,name:"rasterFunctionArguments"}})],xe.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],xe.prototype,"rasterArgumentNames",void 0),xe=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.BandArithmeticFunction")],xe);const we=xe;var be;const ke=new r.ax({1:"outside",2:"inside"},{useNumericKeys:!0});let ve=be=class extends p{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new be({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};(0,r.k)([(0,r.o)({types:r.b2,json:{read:r.b3,write:!0}})],ve.prototype,"clippingGeometry",void 0),(0,r.k)([(0,r.o)({json:{read:ke.read,write:ke.write}})],ve.prototype,"clippingType",void 0),ve=be=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.ClipFunctionArguments")],ve);const Ae=ve;function Te(t,e){if(t.spatialReference.equals(e))return t;const n=(0,r.bq)(t.spatialReference),s=(0,r.bq)(e);if(n===s)return t;const o=n/s;return{x:t.x*o,y:t.y*o}}async function Pe(t,e,s){if("extent"===s.type)return Ne(t,e,s);const{width:r,height:i}=t,a=new Uint8Array(r*i),{contains:u,intersects:l}=await Promise.all([n.e(916),n.e(5498)]).then(n.bind(n,5498));return l(e,s)?"polyline"===s.type?Fe(t,e,s):u(s,e)?t:Re(t,e,s):new o.g({pixelType:t.pixelType,width:r,height:i,mask:a,maskIsAlpha:!1,pixels:[...t.pixels]})}function Re(t,e,n){if(!t)return t;const{width:s,height:r}=t,i=e.width/s,a=e.height/r,{xmin:u,ymax:l}=e;let c;if("extent"===n.type){const t=(n.xmin-u)/i,e=(n.xmax-u)/i,s=(l-n.ymax)/a,r=(l-n.ymin)/a;c=[[[t,s],[t,r],[e,r],[e,s],[t,s]]]}else c=n.rings.map((t=>t.map((([t,e])=>[(t-u)/i,(l-e)/a]))));const p=document.createElement("canvas");p.width=s,p.height=r;const h=p.getContext("2d");h.fillStyle="#f00",h.beginPath(),c.forEach((t=>{h.moveTo(t[0][0],t[0][1]);for(let e=0;e<t.length;e++)h.lineTo(t[e][0],t[e][1]);h.closePath()})),h.fill();const m=h.getImageData(0,0,s,r).data,f=t.mask,d=s*r,g=new Uint8Array(d);for(let o=0;o<d;o++)f&&!f[o]||(g[o]=m[4*o+3]>127?255:0);return new o.g({pixelType:t.pixelType,width:s,height:r,mask:g,maskIsAlpha:!1,pixels:[...t.pixels]})}function Ne(t,e,n){const{width:s,height:r}=t,i=new Uint8Array(s*r),a=e.width/s,u=e.height/r;if(n.width/a<.5||n.height/u<.5)return new o.g({pixelType:t.pixelType,width:s,height:r,mask:i,pixels:[...t.pixels]});const{xmin:l,xmax:c,ymin:p,ymax:h}=e,{xmin:m,xmax:f,ymin:d,ymax:g}=n,y=Math.max(l,m),x=Math.min(c,f),w=Math.max(p,d),b=Math.min(h,g),k=.5*a,v=.5*u;if(x-y<k||b-w<v||x<l+k||y>c-k||w>h-v||b<p+v)return new o.g({pixelType:t.pixelType,width:s,height:r,mask:i,pixels:[...t.pixels]});const A=Math.max(0,(y-l)/a),T=Math.min(s,Math.max(0,(x-l)/a)),P=Math.max(0,(h-b)/u),R=Math.min(r,Math.max(0,(h-w)/u)),N=Math.round(A),F=Math.round(T)-1,C=Math.round(P),S=Math.round(R)-1;if(N===F&&A%1>.5&&T%1<.5||C===S&&P%1>.5&&R%1<.5)return new o.g({pixelType:t.pixelType,width:s,height:r,mask:i,pixels:[...t.pixels]});if(0===N&&0===C&&F===s&&S===r)return t;const I=t.mask;for(let o=C;o<=S;o++)for(let t=N;t<=F;t++){const e=o*s+t;i[e]=I?I[e]:255}return new o.g({pixelType:t.pixelType,width:s,height:r,mask:i,pixels:[...t.pixels]})}function Fe(t,e,n){const{width:s,height:r}=t,i=new Uint8Array(s*r),a=e.width/s,u=e.height/r,{xmin:l,ymax:c}=e,{paths:p}=n,h=t.mask;for(let o=0;o<p.length;o++){const t=p[o];for(let e=0;e<t.length-1;e++){const[n,o]=t[e],[p,m]=t[e+1];let f=Math.floor((c-o)/u),d=Math.floor((c-m)/u);if(d<f){const t=f;f=d,d=t}f=Math.max(0,f),d=Math.min(r-1,d);const g=(p-n)/(m-o);for(let t=f;t<=d;t++){const e=t===f?Math.max(o,m):(r+1-t)*u,c=t===d?Math.min(o,m):e-u;let y=Math.floor(m===o?(n-l)/a:(g*(e-o)+n-l)/a),x=Math.floor(m===o?(p-l)/a:(g*(c-o)+n-l)/a);if(x<y){const t=y;y=x,x=t}const w=t*s;y=Math.max(0,y),x=Math.min(s-1,x);for(let t=w+y;t<=w+x;t++)i[t]=h?h[t]:255}}}return new o.g({pixelType:t.pixelType,width:s,height:r,mask:i,pixels:[...t.pixels]})}function Ce(t,e){const{extent:n}=Se(t,e,new r.bv({x:t.pixelSize.x,y:t.pixelSize.y,spatialReference:t.spatialReference})),{extent:s}=t.extent;if(n.xmax=Math.min(n.xmax,s.xmax),n.ymax=Math.min(n.ymax,s.ymax),n.xmin<n.xmax&&n.ymin<n.ymax){const{x:e,y:s}=t.pixelSize,r=Math.round(n.width/e),o=Math.round(n.height/s);t.extent=n,t.width=r,t.height=o}}function Se(t,e,n,s=!0){const{spatialReference:o}=t,{x:i,y:a}=Te(n,o);let u,l,c;const p="extent"===e.type?e:e.extent;let{xmin:h,xmax:m,ymax:f,ymin:d}=p;const{xmin:g,ymax:y}=t.extent;return s?(h=g+(h>g?i*Math.round((h-g)/i):0),f=y-(f<y?a*Math.round((y-f)/a):0),m=g+(m>g?i*Math.round((m-g)/i):0),d=y-(d<y?a*Math.round((y-d)/a):0),u=new r.au({xmin:h,ymax:f,xmax:m,ymin:d,spatialReference:o}),l=Math.round(u.width/i),c=Math.round(u.height/a)):(l=Math.floor((m-h)/i+.8),c=Math.floor((f-d)/a+.8),h=g+(h>g?i*Math.floor((h-g)/i+.1):0),f=y-(f<y?a*Math.floor((y-f)/a+.1):0),m=h+l*i,d=f-c*a,u=new r.au({xmin:h,ymax:f,xmax:m,ymin:d,spatialReference:o})),{extent:u,width:l,height:c}}let Ie=class extends y{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{functionArguments:e}=this,{clippingGeometry:n,clippingType:s}=e;if(!n)return{success:!1,supportsGPU:!1,error:"missing clipping geometry"};if("outside"===s)try{const{spatialReference:e}=t,s="extent"===n.type?(0,a.K)(n,e):(0,a.D)(n,e).extent;s&&Ce(t,s)}catch{}return{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],Ie.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:Ae,json:{write:!0,name:"rasterFunctionArguments"}})],Ie.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],Ie.prototype,"rasterArgumentNames",void 0),(0,r.k)([(0,r.o)()],Ie.prototype,"isNoopProcess",void 0),Ie=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.ClipFunction")],Ie);const Me=Ie;var _e;let je=_e=class extends p{castColormapName(t){if(!t)return null;const e=t.toLowerCase();return i.C.includes(e)?e:null}readColorRamp(t){return(0,u.p)(t)}readColorRampName(t,e){if(!t)return null;const n=i.w.jsonValues.find((e=>e.toLowerCase()===t.toLowerCase()));return n?i.w.fromJSON(n):null}clone(){return new _e({colormap:(0,r.f)(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};(0,r.k)([(0,r.o)({type:[[Number]],json:{write:!0}})],je.prototype,"colormap",void 0),(0,r.k)([(0,r.o)({type:String,json:{write:!0}})],je.prototype,"colormapName",void 0),(0,r.k)([(0,r.by)("colormapName")],je.prototype,"castColormapName",null),(0,r.k)([(0,r.o)({types:u.m,json:{write:!0}})],je.prototype,"colorRamp",void 0),(0,r.k)([(0,r.u)("colorRamp")],je.prototype,"readColorRamp",null),(0,r.k)([(0,r.o)({type:i.w.apiValues,json:{type:i.w.jsonValues,write:i.w.write}})],je.prototype,"colorRampName",void 0),(0,r.k)([(0,r.u)("colorRampName")],je.prototype,"readColorRampName",null),je=_e=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],je);const Be=je,Ge=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],ze=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function Oe(t,e){const n=[],s=[];for(let o=0;o<t.length-1;o++)n.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:t[o].slice(1),toColor:t[o+1].slice(1)}),s.push(t[o+1][0]-t[o][0]);const r=t[t.length-1][0];return(0,i.x)({type:"multipart",colorRamps:n},{numColors:r,weights:e=e??s})}function Ee(){return Oe([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]])}function De(){const t=Oe([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let e=t.length;e<256;e++)t.push([6,27,7]);return t}function Ue(){return(0,i.x)({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}function Ve(){const t=[];for(let e=0;e<256;e++){const e=[];for(let t=0;t<3;t++)e.push(Math.round(255*Math.random()));t.push(e)}return t}function Le(){return Oe([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495])}function We(t){let e;switch(t){case"elevation":e=Ee();break;case"gray":e=Ue();break;case"hillshade":e=Le();break;case"ndvi":e=Ge;break;case"ndvi2":e=De();break;case"ndvi3":e=ze;break;case"random":e=Ve()}return e?(e=e.map(((t,e)=>[e,...t])),e):null}let qe=class extends y{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:n,colorRamp:s,colorRampName:r}=this.functionArguments;if(!e?.length)if(s)this.colorRamp=s,e=(0,i.d)(s,{interpolateAlpha:!0});else if(r){const t=(0,i.y)(r);t&&(e=(0,i.d)(t),this.colorRamp=(0,u.p)(t))}else n&&(e=We(n));if(!e?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const o=this._getOutputPixelType(t.pixelType);this.outputPixelType=o.startsWith("f")?"s32":o;const a=t.clone();return a.pixelType=this.outputPixelType,a.colormap=e,a.bandCount=1,this.rasterInfo=a,{success:!0,supportsGPU:!0}}_processPixels(t){let e=t.pixelBlocks?.[0];return!e||(0,o.w)(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],qe.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:Be,json:{write:!0,name:"rasterFunctionArguments"}})],qe.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],qe.prototype,"rasterArgumentNames",void 0),(0,r.k)([(0,r.o)()],qe.prototype,"isNoopProcess",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],qe.prototype,"indexedColormap",void 0),(0,r.k)([(0,r.o)()],qe.prototype,"colorRamp",void 0),qe=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.ColormapFunction")],qe);const He=qe;var Ke;let Je=Ke=class extends p{clone(){return new Ke({raster:this.raster})}};Je=Ke=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.ColormapToRGBFunctionArguments")],Je);const $e=Je;let Xe=class extends y{constructor(){super(...arguments),this.functionName="ColormapToRGB",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||!t.colormap?.length)return{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: source data must be single band with a colormap"};const e=t.clone();e.pixelType=this.outputPixelType=this._getOutputPixelType("u8"),this._removeStatsHistColormapVAT(e),e.bandCount=3,e.statistics=[{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20}],this.rasterInfo=e;const n=[...t.colormap].sort(((t,e)=>t[0]-e[0])),{indexedColormap:s,offset:r}=(0,o.r)({colormap:n});return s?(this.lookup={indexedColormap:s,offset:r},{success:!0,supportsGPU:(0,i.z)(s)}):{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: the colormap is not supported"}}_processPixels(t){let e=t.pixelBlocks?.[0];if(!e||!this.lookup)return e;e=e.clone();const n=e.pixels[0],s=e.mask??new Uint8Array(n.length).fill(255),r=new Uint8Array(n.length),i=new Uint8Array(n.length),a=new Uint8Array(n.length),{indexedColormap:u,offset:l}=this.lookup,c=u.length;for(let o=0;o<n.length;o++)if(s[o]){let t=4*(n[o]-l);t<0||t>c-4?s[o]=0:(r[o]=u[t++],i[o]=u[t++],a[o]=u[t++])}return e.pixels=[r,i,a],e.statistics=[new o.i(0,255),new o.i(0,255),new o.i(0,255)],e.pixelType=this.outputPixelType,e}_getWebGLParameters(){return this.lookup}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],Xe.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:$e,json:{write:!0,name:"rasterFunctionArguments"}})],Xe.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],Xe.prototype,"rasterArgumentNames",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],Xe.prototype,"lookup",void 0),Xe=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.ColormapToRGBFunction")],Xe);const Ye=Xe;var Ze;let Qe=Ze=class extends p{constructor(){super(...arguments),this.rasters=[]}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new Ze({rasters:(0,r.f)(this.rasters)})}};(0,r.k)([(0,r.o)({json:{write:!0}})],Qe.prototype,"rasters",void 0),(0,r.k)([(0,r.q)("rasters")],Qe.prototype,"writeRasters",null),Qe=Ze=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],Qe);const tn=Qe;let en=class extends y{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const n=e.clone();if(n.attributeTable=null,n.colormap=null,n.pixelType=this.outputPixelType,n.bandCount=t.map((({bandCount:t})=>t)).reduce(((t,e)=>t+e)),t.every((({statistics:t})=>null!=t&&t.length))){const e=[];t.forEach((({statistics:t})=>null!=t&&e.push(...t))),n.statistics=e}if(t.every((({histograms:t})=>null!=t&&t.length))){const e=[];t.forEach((({histograms:t})=>null!=t&&e.push(...t))),n.histograms=e}n.multidimensionalInfo&&n.multidimensionalInfo.variables.forEach((e=>{const n=t.map((t=>t.multidimensionalInfo?.variables.find((({name:t})=>t===e.name)))),s=n.map((t=>t?.statistics?.length?t.statistics:null)),r=n.map((t=>t?.histograms?.length?t.histograms:null));e.statistics=s.every((t=>null!=t))?s.flat():null,e.histograms=r.every((t=>null!=t))?r.flat():null})),n.bandCount>1&&(n.colormap=null,n.attributeTable=null);const s=t.every((t=>t.keyProperties.BandProperties?.length))?t.flatMap((t=>t.keyProperties.BandProperties)):void 0;return n.keyProperties={...n.keyProperties,BandProperties:s},this.rasterInfo=n,{success:!0,supportsGPU:n.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?null==e?.[0]?null:(0,o.x)(e):null}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],en.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:tn,json:{write:!0,name:"rasterFunctionArguments"}})],en.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],en.prototype,"rasterArgumentNames",void 0),en=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.CompositeBandFunction")],en);const nn=en,sn=new r.ax({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),rn=new r.ax({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});function on(t,e,n,s){const[r,i]=t,a=(0,o.w)(n)&&!(0,o.w)(r.pixelType)&&!(0,o.w)(i.pixelType),u=[r.mask,i.mask].filter((t=>t)),l=o.g.combineBandMasks(u),c=t.map((t=>t.pixels[0])),{width:p,height:h}=r,m=o.g.createEmptyBand(n,p*h);switch(e){case"difference":case"relative-difference":an({bands:c,mask:l,outBand:m,isRoundingNeeded:a,isRelative:"relative-difference"===e});break;case"categorical":un({bands:c,mask:l,outBand:m,...s});break;case"euclidean-distance":ln({pixels:t.map((t=>t.pixels)),mask:l,outBand:m});break;case"angle-difference":cn({pixels:t.map((t=>t.pixels)),mask:l,outBand:m});break;case"band-with-most-change":pn({pixels:t.map((t=>t.pixels)),mask:l,outBand:m})}const f=new o.g({width:p,height:h,pixels:[m],pixelType:n,mask:l});return f.updateStatistics(),f}function an(t){const{bands:[e,n],mask:s,isRelative:r,isRoundingNeeded:o,outBand:i}=t,a=e.length;for(let u=0;u<a;u++)if(!s||s[u]){let t=e[u]-n[u];if(r){const s=Math.max(Math.abs(e[u])-Math.abs(n[u]));t=s>0?t/s:0}i[u]=o?Math.round(t):t}}function un(t){const{bands:[e,n],categoryIndexLookups:[s,r],classNames:[o,i],mask:a,keepMethod:u,outBand:l}=t,c=e.length,p=o.length,h=i.length,m=p*h,f=m+1,d=m+2;for(let g=0;g<c;g++)if(!a||a[g]){const t=e[g],a=n[g],c=s[t],p=r[a],y=o[c],x=i[p];l[g]=null==c||null==p?m:"changed"===u&&y===x?f:"unchanged"===u&&y!==x?d:c*h+p}}function ln(t){const{pixels:[e,n],mask:s,outBand:r}=t,o=e[0].length,i=e.length;for(let a=0;a<o;a++)if(!s||s[a]){let t=0;for(let s=0;s<i;s++){const r=e[s][a]-n[s][a];t+=r*r}r[a]=Math.sqrt(t)}}function cn(t){const{pixels:[e,n],mask:s,outBand:r}=t,o=e[0].length,i=e.length;for(let a=0;a<o;a++)if(!s||s[a]){let t=0,s=0,o=0;for(let r=0;r<i;r++){const i=e[r][a],u=n[r][a];t+=i*u,s+=i*i,o+=u*u}const u=Math.sqrt(s*o);r[a]=u?Math.acos(t/u):1.5707963267948966}}function pn(t){const{pixels:[e,n],mask:s,outBand:r}=t,o=e[0].length,i=e.length;for(let a=0;a<o;a++)if(!s||s[a]){let t=0,s=0;for(let r=0;r<i;r++){const o=Math.abs(e[r][a]-n[r][a]);o>t&&(t=o,s=r)}r[a]=s}}var hn;let mn=hn=class extends p{constructor(){super(...arguments),this.method="difference",this.keepMethod="all",this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new hn({raster:this.raster,raster2:this.raster2,method:this.method,keepMethod:this.keepMethod})}};(0,r.k)([(0,r.bk)(sn)],mn.prototype,"method",void 0),(0,r.k)([(0,r.bk)(rn)],mn.prototype,"keepMethod",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],mn.prototype,"raster2",void 0),(0,r.k)([(0,r.o)({readOnly:!0})],mn.prototype,"rasters",null),mn=hn=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.ComputeChangeFunctionArguments")],mn);const fn=mn;let dn=class extends y{constructor(){super(...arguments),this.functionName="ComputeChange",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{method:t}=this.functionArguments,e=this.sourceRasterInfos[0].clone();if(this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),"categorical"===t){const t=this.sourceRasterInfos.map((t=>t.attributeTable)),n=this._getFieldNames(t,"value"),s=t.map((t=>this._getClassFieldName(t)));if(null==n[0]||null==n[1]||null==s[0]||null==s[1])return{success:!1,supportsGPU:!1,error:"both inputs must have proper attribute table with value and class fields"};this._updateAttributeTable(e,n,s)}return e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:"difference"===t||"relative-difference"===t}}_processPixels(t){const{pixelBlocks:e}=t;if(null==e?.[0]||null==e?.[1])return null;const{method:n}=this.functionArguments;return on(e,n,this.outputPixelType,this._categoryConfig)}_getWebGLParameters(){const t=this.outputPixelType??"f32";let[e,n]=(0,o.j)(t);const s=(0,o.w)(t);return s&&(e-=1e-4,n+=1e-4),{method:this.functionArguments.method,domainRange:[e,n],isOutputRounded:s}}_updateAttributeTable(t,e,n){const s=this.sourceRasterInfos.map((t=>t.attributeTable)),r=s.map(((t,n)=>t.features.map((t=>t.attributes[e[n]])))),o=s.map(((t,e)=>t.features.map((t=>t.attributes[n[e]])))),i=r.map((t=>{const e=[];return t.forEach(((t,n)=>e[t]=n)),e})),{keepMethod:a}=this.functionArguments;this._categoryConfig={categoryIndexLookups:i,classNames:o,keepMethod:a};const u=s[0].clone();u.fields=[new l.y({name:"OID",type:"oid"}),new l.y({name:"Value",type:"integer"}),new l.y({name:"ClassName",type:"string"}),new l.y({name:"Class_From",type:"string"}),new l.y({name:"Class_To",type:"string"})];const c=this._getFieldNames(s,"red"),p=this._getFieldNames(s,"green"),h=this._getFieldNames(s,"blue"),m=[],f=2===c.length&&2===p.length&&2===h.length;f&&(m.push(...s.map(((t,e)=>t.features.map((t=>[t.attributes[c[e]],t.attributes[p[e]],t.attributes[h[e]]]))))),u.fields.push(new l.y({name:"Red",type:"integer"}),new l.y({name:"Green",type:"integer"}),new l.y({name:"Blue",type:"integer"})));const d=u.features[0].clone();d.geometry=null;const g=[],[y,x]=r.map((t=>t.length));let w=1;for(let l=0;l<y;l++){const t=o[0][l];for(let e=0;e<x;e++){const n=o[1][e];if("changed"===a&&t===n||"unchanged"===a&&t!==n)continue;const s=d.clone();s.attributes={OID:w++,Value:l*x+e,ClassName:t===n?t:`${t} -> ${n}`,Class_From:t,Class_To:n},f&&(s.attributes.Red=m[0][l][0]+m[1][e][0]>>1,s.attributes.Green=m[0][l][1]+m[1][e][1]>>1,s.attributes.Blue=m[0][l][2]+m[1][e][2]>>1),g.push(s)}}if("changed"===a){const t=d.clone();t.attributes={OID:w++,Value:y*x+1,ClassName:"No Change",Class_From:"Same",Class_To:"Same"},g.push(t)}else if("unchanged"===a){const t=d.clone();t.attributes={OID:w++,Value:y*x+2,ClassName:"Changed",Class_From:"Any",Class_To:"Any"},g.push(t)}u.features=g,t.attributeTable=u}_getFieldNames(t,e){return t.map((({fields:t})=>t.find((t=>t.name.toLowerCase()===e))?.name)).filter((t=>t))}_getClassFieldName(t){return(t.fields.find((t=>"string"===t.type&&t.name.toLowerCase().startsWith("class")))??t.fields.find((t=>"string"===t.type&&t.name.toLowerCase().includes("class")||t.name.toLowerCase().includes("type")||t.name.toLowerCase().includes("name")))??t.fields.find((t=>"string"===t.type)))?.name}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],dn.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:fn,json:{write:!0,name:"rasterFunctionArguments"}})],dn.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],dn.prototype,"rasterArgumentNames",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],dn.prototype,"_categoryConfig",void 0),dn=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.ComputeChangeFunction")],dn);const gn=dn;var yn;let xn=yn=class extends p{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new yn({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};(0,r.k)([(0,r.o)({json:{write:!0}})],xn.prototype,"contrastOffset",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],xn.prototype,"brightnessOffset",void 0),xn=yn=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],xn);const wn=xn;let bn=class extends y{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if("u8"!==e.pixelType)return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const n=e.clone();this._removeStatsHistColormapVAT(n),this.rasterInfo=n;const{contrastOffset:s,brightnessOffset:r}=this.functionArguments;return this.lookup=(0,i.E)(s,r),{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:(0,o.q)(e,{lut:e.pixels.map((()=>this.lookup)),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],bn.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:wn,json:{write:!0,name:"rasterFunctionArguments"}})],bn.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],bn.prototype,"rasterArgumentNames",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],bn.prototype,"lookup",void 0),bn=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],bn);const kn=bn;function vn(t,e,n,s,r){const o=Math.floor(s/2);for(let a=0;a<o;a++)for(let s=0;s<e;s++)t[a*e+s]=t[(r-1-a)*e+s],t[(n-1-a)*e+s]=t[(n-r+a)*e+s];const i=Math.floor(r/2);for(let a=0;a<n;a++){const n=a*e;for(let s=0;s<i;s++)t[n+s]=t[n+r-1-s],t[n+e-s-1]=t[n+e+s-r]}}const An=new Map;function Tn(t){const e=Math.sqrt(t.length),n=t.slice(0,e),s=[1];for(let r=1;r<e;r++){let n=null;for(let s=0;s<e;s++){const o=t[s+r*e],i=t[s];if(null==n)if(0===i){if(o)return{separable:!1,row:null,col:null}}else n=o/i;else if(o/i!==n)return{separable:!1,row:null,col:null}}if(null==n)return{separable:!1,row:null,col:null};s.push(n)}return{separable:!0,row:n,col:s}}function Pn(t,e,n,s,r,o,i){const a=new Float32Array(e*n),u=o.length,l=i?0:s,c=i?s:0,p=i?1:e;for(let h=l;h<n-l;h++){const n=h*e;for(let i=c;i<e-c;i++){if(r&&!r[n+i])continue;let e=0;for(let r=0;r<u;r++)e+=t[n+i+(r-s)*p]*o[r];a[n+i]=e}}return a}function Rn(t,e,n,s,r,o,i){const a=new Float32Array(e*n),u=Math.floor(s/2),l=Math.floor(r/2);for(let c=u;c<n-u;c++){const n=c*e;for(let c=l;c<e-l;c++){if(o&&!o[n+c])continue;let p=0;for(let o=0;o<s;o++)for(let s=0;s<r;s++)p+=t[n+c+(o-u)*e+s-l]*i[o*r+s];a[n+c]=p}}return a}function Nn(t,e,n=!0){const{pixels:s,width:r,height:i,pixelType:a,mask:u}=t,l=s.length,c=[],{kernel:p,rows:h,cols:m}=e;for(let o=0;o<l;o++){const t=Rn(s[o],r,i,h,m,u,p);n&&vn(t,r,i,h,m),c.push(t)}return new o.g({width:r,height:i,pixelType:a,pixels:c,mask:u})}function Fn(t,e,n,s=!0){const{pixels:r,width:i,height:a,pixelType:u,mask:l}=t,c=r.length,p=[],h=e.length,m=n.length,f=Math.floor(h/2),d=Math.floor(m/2);for(let o=0;o<c;o++){let t=Pn(r[o],i,a,f,l,e,!0);t=Pn(t,i,a,d,l,n,!1),s&&vn(t,i,a,h,m),p.push(t)}return new o.g({width:i,height:a,pixelType:u,pixels:p,mask:l})}function Cn(t,e){const n=Tn(e.kernel),s=!1!==e.mirrorEdges,r=n.separable?Fn(t,n.row,n.col,s):Nn(t,e,s),{outputPixelType:o}=e;return o&&r.clamp(o),r}var Sn;An.set(x.none,[0,0,0,0,1,0,0,0,0]),An.set(x.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),An.set(x.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),An.set(x.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),An.set(x.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),An.set(x.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),An.set(x.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),An.set(x.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),An.set(x.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),An.set(x.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),An.set(x.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),An.set(x.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),An.set(x.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),An.set(x.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),An.set(x.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),An.set(x.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),An.set(x.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),An.set(x.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),An.set(x.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),An.set(x.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),An.set(x.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),An.set(x.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),An.set(x.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);let In=Sn=class extends p{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(t){this._set("convolutionType",t);const e=An.get(t);if(!e||t===x.userDefined||t===x.none)return;const n=Math.sqrt(e.length);this._set("kernel",e),this._set("cols",n),this._set("rows",n)}clone(){return new Sn({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:(0,r.f)(this.raster)})}};(0,r.k)([(0,r.o)({json:{type:Number,write:!0}})],In.prototype,"rows",void 0),(0,r.k)([(0,r.o)({json:{type:Number,write:!0}})],In.prototype,"cols",void 0),(0,r.k)([(0,r.o)({json:{name:"type",type:Number,write:!0}})],In.prototype,"convolutionType",null),(0,r.k)([(0,r.o)({json:{type:[Number],write:!0}})],In.prototype,"kernel",void 0),In=Sn=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],In);const Mn=In,_n=25;let jn=class extends y{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,n=t.reduce(((t,e)=>t+e));return-1===e||0===n||1===n?t:t.map((t=>t/n))}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:n,kernel:s}=this.functionArguments;if(!Object.values(x).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==x.none&&e*n!==s.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const r=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const o=r.clone();o.pixelType=this.outputPixelType;const i=[x.none,x.sharpen,x.sharpen2,x.sharpening3x3,x.sharpening5x5];return(-1===t||"u8"!==this.outputPixelType&&!i.includes(t))&&(o.statistics=null,o.histograms=null),o.colormap=null,o.attributeTable=null,this.rasterInfo=o,{success:!0,supportsGPU:s.length<=_n}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e||this.functionArguments.convolutionType===x.none)return e;const{rows:n,cols:s}=this.functionArguments,{_normalizedKernel:r}=this;return Cn(e,{kernel:r,rows:n,cols:s,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(_n);return t.set(this._normalizedKernel),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:t,clampRange:(0,o.j)(this.outputPixelType)}}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],jn.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:Mn,json:{write:!0,name:"rasterFunctionArguments"}})],jn.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],jn.prototype,"rasterArgumentNames",void 0),(0,r.k)([(0,r.o)()],jn.prototype,"_normalizedKernel",null),jn=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.ConvolutionFunction")],jn);const Bn=jn;var Gn;const zn=new r.ax({0:"standard",1:"planform",2:"profile"},{useNumericKeys:!0});let On=Gn=class extends p{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(t,e){return zn.fromJSON(e.type??e.curvatureType??0)}clone(){return new Gn({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};(0,r.k)([(0,r.o)({json:{write:{target:"type"}}}),(0,r.bk)(zn)],On.prototype,"curvatureType",void 0),(0,r.k)([(0,r.u)("curvatureType",["type","curvatureType"])],On.prototype,"readCurvatureType",null),(0,r.k)([(0,r.o)({type:Number,json:{write:!0}})],On.prototype,"zFactor",void 0),On=Gn=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],On);const En=On;let Dn=class extends y{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:n,curvatureType:s}=this.functionArguments,{extent:r,primaryPixelSizes:o}=t,a=o?.[0],u=a??(r?{x:r.width/e.width,y:r.height/e.height}:{x:1,y:1}),l=this.isGCS&&n>=1?n*i.G:n;return(0,i.H)(e,{zFactor:l,curvatureType:s,resolution:u})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*i.G:t}}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],Dn.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:En,json:{write:!0,name:"rasterFunctionArguments"}})],Dn.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],Dn.prototype,"rasterArgumentNames",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],Dn.prototype,"isGCS",void 0),Dn=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.CurvatureFunction")],Dn);const Un=Dn;var Vn;let Ln=Vn=class extends p{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=o.y.bestMatch}clone(){return new Vn({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};(0,r.k)([(0,r.o)({json:{write:!0}})],Ln.prototype,"bandIds",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],Ln.prototype,"bandNames",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],Ln.prototype,"bandWavelengths",void 0),(0,r.k)([(0,r.bk)({0:"name",1:"wavelength",2:"id"})],Ln.prototype,"method",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],Ln.prototype,"missingBandAction",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],Ln.prototype,"wavelengthMatchTolerance",void 0),Ln=Vn=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],Ln);const Wn=Ln;let qn=class extends y{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{functionArguments:t,sourceRasterInfos:e}=this,n=e[0],{method:s,bandNames:r,bandWavelengths:i,bandIds:a,missingBandAction:u}=t,l=r?.length&&("name"===s||"id"!==s&&!a?.length),c=i?.length&&("wavelength"===s||"id"!==s&&!a?.length),p=u===o.y.fail,h=l?Kn(n,r):c?$n(n,i,this.functionArguments,p):Jn(n,a,p);if(null==h)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${l?"band names":c?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=h,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const m=n.clone();m.pixelType=this.outputPixelType,m.bandCount=h.length;const{statistics:f,histograms:d}=m;null!=f&&f.length&&(m.statistics=h.map((t=>f[t]||f[f.length-1]))),null!=d&&d.length&&(m.histograms=h.map((t=>d[t]||d[d.length-1]))),m.multidimensionalInfo&&m.multidimensionalInfo.variables.forEach((t=>{const{statistics:e,histograms:n}=t;null!=e&&e.length&&(t.statistics=h.map((t=>e[t]||e[e.length-1]))),null!=n&&n.length&&(t.histograms=h.map((t=>n[t]||n[n.length-1])))}));let g=m.keyProperties?.BandProperties;return g?.length&&(g=h.map((t=>t>=g.length?g[g.length-1]:g[t])),m.keyProperties={...m.keyProperties,BandProperties:g}),this.rasterInfo=m,{success:!0,supportsGPU:m.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const n=e.pixels.length,s=this.functionArguments.bandIds.map((t=>t>=n?n-1:t));return e.extractBands(s)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],0===t.length?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:Yt(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map((t=>t>=e?e-1:t)).map((e=>t[e]))}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],qn.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:Wn,json:{write:!0,name:"rasterFunctionArguments"}})],qn.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],qn.prototype,"rasterArgumentNames",void 0),qn=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.ExtractBandFunction")],qn);const Hn=qn;function Kn(t,e){const n=t.bandInfos.map((({name:t})=>t.toLowerCase())),s=[];for(let r=0;r<e.length;r++){const t=e[r].toLowerCase();let o=n.indexOf(t);if(-1===o&&"nearinfrared"===t&&(o=n.findIndex((t=>t.startsWith("nearinfrared_1"))),-1===o&&(o=n.findIndex((t=>t.startsWith("nearinfrared"))))),-1===o)return null;s.push(o)}return s}function Jn(t,e,n){const{bandCount:s}=t;return!e?.length||n&&e.some((t=>t<0||t>=s))?null:e}function $n(t,e,{wavelengthMatchTolerance:n},s){const{bandInfos:r}=t,o=[];for(let a=0;a<r.length;a++){const{minWavelength:t,maxWavelength:e}=r[a];if(!t||!e)return null;o.push({minWavelength:t,maxWavelength:e})}const i=[];for(let a=0;a<e.length;a++){const t=e[a];let r=!1,u=-1,l=Number.MAX_VALUE;for(let e=0;e<o.length;e++){const n=o[e],s=t>=n.minWavelength&&t<=n.maxWavelength,i=Math.abs(t-(n.minWavelength+n.maxWavelength)/2);s?i<l&&(r=!0,u=e,l=i):!r&&i<l&&(u=e,l=i)}if(!r&&n&&l<n&&(r=!0),!r&&s)return null;i.push(u)}return i}function Xn(t,e,n){const{pixels:s,width:r,height:i,mask:a,bandMasks:u}=t,l=r*i,c=u?.length?o.g.combineBandMasks(u):a,p=Math.min(e.length,s.length),h=n.startsWith("f"),m=!h&&n!==t.pixelType,[f,d]=(0,o.j)(n),g=o.g.createEmptyBand(n,l);for(let o=0;o<i;o++){let t=o*r;for(let n=0;n<r;n++,t++)if(!c||c[t]){let n=0;for(let r=0;r<p;r++)n+=e[r]*s[r][t];h||(n=Math.round(n),m&&(n=n>d?d:n<f?f:n)),g[t]=n}}const y=new o.g({width:r,height:i,pixels:[g],pixelType:n,mask:c});return y.updateStatistics(),y}var Yn;let Zn=Yn=class extends p{clone(){return new Yn({conversionParameters:[...this.conversionParameters],raster:this.raster})}};(0,r.k)([(0,r.o)({type:[Number],json:{write:!0}})],Zn.prototype,"conversionParameters",void 0),Zn=Yn=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],Zn);const Qn=Zn;let ts=class extends y{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce(((t,e)=>t+e));return t.map((t=>t/e))}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!t?.length)return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const n=3===t.length||3===e.bandCount&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:n}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:Xn(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],ts.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:Qn,json:{write:!0,name:"rasterFunctionArguments"}})],ts.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],ts.prototype,"rasterArgumentNames",void 0),(0,r.k)([(0,r.o)()],ts.prototype,"_normalizedWeights",null),ts=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.GrayscaleFunction")],ts);const es=ts;var ns;const ss=new r.ax({0:"traditional",1:"multi-directional"},{useNumericKeys:!0}),rs=new r.ax({1:"degree",2:"percent-rise",3:"scaled"},{useNumericKeys:!0});let os=ns=class extends p{constructor(){super(...arguments),this.altitude=45,this.azimuth=315,this.hillshadeType="traditional",this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.slopeType="degree",this.zFactor=1,this.removeEdgeEffect=!1}clone(){return new ns({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};(0,r.k)([(0,r.o)({type:Number,json:{write:!0}})],os.prototype,"altitude",void 0),(0,r.k)([(0,r.o)({type:Number,json:{write:!0}})],os.prototype,"azimuth",void 0),(0,r.k)([(0,r.o)(),(0,r.bk)(ss)],os.prototype,"hillshadeType",void 0),(0,r.k)([(0,r.o)({type:Number,json:{write:!0,name:"psPower"}})],os.prototype,"pixelSizePower",void 0),(0,r.k)([(0,r.o)({type:Number,json:{write:!0,name:"psZFactor"}})],os.prototype,"pixelSizeFactor",void 0),(0,r.k)([(0,r.o)(),(0,r.bk)(rs)],os.prototype,"slopeType",void 0),(0,r.k)([(0,r.o)({type:Number,json:{write:!0}})],os.prototype,"zFactor",void 0),(0,r.k)([(0,r.o)({type:Boolean,json:{write:!0}})],os.prototype,"removeEdgeEffect",void 0),os=ns=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.HillshadeFunctionArguments")],os);const is=os;let as=class extends y{constructor(){super(...arguments),this.functionName="Hillshade",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"hillshade-function: source data must be single band"};this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone();return this._removeStatsHistColormapVAT(e),e.pixelType=this.outputPixelType,e.bandCount=1,e.statistics=[{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=e,this.isGCS=e.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(!e)return null;const{extent:n,primaryPixelSizes:s}=t,r=s?.[0],o=r??(n?{x:n.width/e.width,y:n.height/e.height}:{x:1,y:1}),a=(0,i.I)(this.functionArguments,o,this.isGCS),u=(0,i.J)(e,a);return u.pixelType=this.outputPixelType,u}_getWebGLParameters(){const t=(0,i.I)(this.functionArguments,{x:1,y:1},this.isGCS),e=(0,i.K)(t),{slopeType:n,zFactor:s,pixelSizeFactor:r,pixelSizePower:a}=this.functionArguments,u="scaled"===n,l=(0,o.w)(this.outputPixelType);return{...e,zFactor:s,gcsFactor:this.isGCS?i.G:1,pixelSizeFactor:u?r:0,pixelSizePower:u?a:0,isOutputRounded:l}}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],as.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:is,json:{write:!0,name:"rasterFunctionArguments"}})],as.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],as.prototype,"rasterArgumentNames",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],as.prototype,"isGCS",void 0),as=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.HillshadeFunction")],as);const us=as;var ls;let cs=ls=class extends p{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new ls({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:(0,r.f)(this.rasters)})}};(0,r.k)([(0,r.o)({json:{write:!0}})],cs.prototype,"operation",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],cs.prototype,"rasters",void 0),(0,r.k)([(0,r.q)("rasters")],cs.prototype,"writeRasters",null),(0,r.k)([(0,r.o)({json:{write:!0}})],cs.prototype,"processAsMultiband",void 0),cs=ls=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.LocalFunctionArguments")],cs);const ps=cs;let hs=class extends y{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:n}=e,{processAsMultiband:s}=this.functionArguments;if(t.some((t=>t.bandCount!==n)))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:o}=this.functionArguments,i=N[r];if(!(999===i||o.length===i||o.length<=1&&1===i))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${i}`};const a=e.clone();return a.bandCount=999!==i||s?n:1,this._removeStatsHistColormapVAT(a),this._updateStatistics(a),this._updatePixelType(a),this.rasterInfo=a,{success:!0,supportsGPU:1===a.bandCount&&i<=3}}_processPixels(t){const{pixelBlocks:e}=t;return null==e||e.some((t=>null==t))?null:Mt(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=N[t],n=Object.keys(T).find((e=>T[e]===t))?.toLowerCase()??"undefined",s=this.outputPixelType??"f32";let[r,i]=(0,o.j)(s);const a=(0,o.w)(s);return a&&(r-=1e-4,i+=1e-4),{imageCount:e,operationName:n,domainRange:[r,i],isOutputRounded:a}}_updateStatistics(t){const e=this.sourceRasterInfos[0],{operation:n}=this.functionArguments,s=R(n)?.domain;if(s){t.statistics=[];for(let e=0;e<t.bandCount;e++)t.statistics[e]={min:s[0],max:s[1],avg:(s[0]+s[1])/2,stddev:(s[0]+s[1])/10}}else 45===n&&e.statistics?.length&&(t.statistics=e.statistics.map((t=>({min:-t.max,max:-t.min,avg:null!=t.avg?-t.avg:void 0,stddev:null!=t.stddev?-t.stddev:void 0}))))}_updatePixelType(t){const{statistics:e,pixelType:n}=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,{domain:r,isInteger:i}=R(s)??{domain:null,isInteger:!1};let a="f32";if(r&&i)a=(0,o.d)(r[0],r[1]);else if(30===s){const t=e?.[0];a=t?(0,o.d)(t.min,t.max):(0,o.w)(n)?n:"s32"}else if(45===s&&(0,o.w)(n)){const t=e?.map((({max:t})=>-t)),s=e?.map((({min:t})=>-t)),r=t?.length?Math.min(...t):null,i=s?.length?Math.min(...s):null;a=null!=r&&null!=i?(0,o.d)(r,i):n.startsWith("s")?n.replace("s","u"):"u1"===n||"u2"===n||"u4"===n?"s8":"u8"===n?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(a)}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],hs.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:ps,json:{write:!0,name:"rasterFunctionArguments"}})],hs.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],hs.prototype,"rasterArgumentNames",void 0),hs=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.LocalFunction")],hs);const ms=hs;var fs;let ds=fs=class extends p{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=o.z.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!t?.length)return null;let e=!1;const n=t.map((t=>{if("number"==typeof t)return e=!0,[t];if("string"==typeof t){const n=t.trim().split(" ").filter((t=>""!==t.trim())).map((t=>Number(t)));return e=e||n.length>0,0===n.length?null:n}return null}));return e?n:null}clone(){return new fs({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};(0,r.k)([(0,r.o)({json:{write:!0}})],ds.prototype,"includedRanges",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],ds.prototype,"noDataValues",void 0),(0,r.k)([(0,r.o)()],ds.prototype,"normalizedNoDataValues",null),(0,r.k)([(0,r.o)({json:{write:!0}})],ds.prototype,"noDataInterpretation",void 0),ds=fs=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.MaskFunctionArguments")],ds);const gs=ds;let ys=class extends y{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:n,normalizedNoDataValues:s}=this.functionArguments;if(!n?.length&&!s?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let r=[];for(let a=0;a<t.bandCount;a++){const t=(0,o.A)(e,n?.slice(2*a,2*a+2),s?.[a]);if(null==t){r=null;break}r.push(t)}this.lookups=r;const i=null!=s&&s.every((t=>t?.length===s[0]?.length));return{success:!0,supportsGPU:(!n||n.length<=2*o.B)&&(!s||i&&s[0].length<=o.B)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{outputPixelType:n,lookups:s}=this,{includedRanges:r,noDataInterpretation:i,normalizedNoDataValues:a}=this.functionArguments,u=i===o.z.matchAll;return(0,o.C)(e,{includedRanges:r,noDataValues:a,outputPixelType:n,matchAll:u,lookups:s})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,n=new Float32Array(o.B);n.fill(r.jn),e?.[0]?.length&&n.set(e[0]);const s=new Float32Array(o.B);for(let o=0;o<s.length;o+=2)s[o]=t?.[o]??-r.jn,s[o+1]=t?.[o+1]??r.jn;return t?.length&&s.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:n,includedRanges:s}}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],ys.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:gs,json:{write:!0,name:"rasterFunctionArguments"}})],ys.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],ys.prototype,"rasterArgumentNames",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],ys.prototype,"lookups",void 0),ys=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.MaskFunction")],ys);const xs=ys;var ws;let bs=ws=class extends p{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:t,infraredBandID:e,scientificOutput:n}=this;return new ws({visibleBandID:t,infraredBandID:e,scientificOutput:n})}};(0,r.k)([(0,r.o)({json:{write:!0}})],bs.prototype,"visibleBandID",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],bs.prototype,"infraredBandID",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],bs.prototype,"scientificOutput",void 0),bs=ws=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],bs);const ks=bs;let vs=class extends y{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:n}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const s=this.sourceRasterInfos[0],r=Math.max(e,n);if(s.bandCount<2||r>=s.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};const o=s.clone();o.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(o),o.bandCount=1,o.keyProperties={...o.keyProperties,BandProperties:void 0};const[i,a,u,l]=t?[-1,1,0,.1]:[0,200,100,10];return o.statistics=[{min:i,max:a,avg:u,stddev:l}],this.rasterInfo=o,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{visibleBandID:n,infraredBandID:s,scientificOutput:r}=this.functionArguments;return Xt(e,n,s,!r)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:n}=this.functionArguments,s=this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0];return{bandIndexMat3:Yt(s),scaled:!n}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:n}=this.functionArguments;return[n,e,0].map((e=>t[e]))}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],vs.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:ks,json:{write:!0,name:"rasterFunctionArguments"}})],vs.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],vs.prototype,"rasterArgumentNames",void 0),vs=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.NDVIFunction")],vs);const As=vs;var Ts;let Ps=Ts=class extends p{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new Ts({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};(0,r.k)([(0,r.o)({json:{write:!0}})],Ps.prototype,"inputRanges",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],Ps.prototype,"outputValues",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],Ps.prototype,"noDataRanges",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],Ps.prototype,"allowUnmatched",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],Ps.prototype,"isLastInputRangeInclusive",void 0),Ps=Ts=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.RemapFunctionArguments")],Ps);const Rs=Ps;let Ns=class extends y{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.bandCount=1;const{statistics:n}=t;this._removeStatsHistColormapVAT(t);const{allowUnmatched:s,outputValues:r,inputRanges:i,noDataRanges:a,isLastInputRangeInclusive:u}=this.functionArguments;if(null!=n&&n.length&&r?.length)if(s){const e=Math.min.apply(null,[...r,n[0].min]),s=Math.max.apply(null,[...r,n[0].max]);t.statistics=[{...n[0],min:e,max:s}]}else{let e=r[0],s=e;for(let t=0;t<r.length;t++)e=e>r[t]?r[t]:e,s=s>r[t]?s:r[t];t.statistics=[{...n[0],min:e,max:s}]}return this.rasterInfo=t,this.lookup=s?null:(0,o.F)({srcPixelType:e,inputRanges:i,outputValues:r,noDataRanges:a,allowUnmatched:s,isLastInputRangeInclusive:u,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!r||r.length<=o.B)&&(!a||a.length<=o.B)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{lookup:n,outputPixelType:s}=this;if(n){const t=(0,o.q)(e,{lut:[n.lut],offset:n.offset,outputPixelType:s});return null!=t&&n.mask&&(t.mask=(0,o.G)(e.pixels[0],e.mask,n.mask,n.offset,"u8")),t}const{inputRanges:r,outputValues:i,noDataRanges:a,allowUnmatched:u,isLastInputRangeInclusive:l}=this.functionArguments;return(0,o.H)(e,{inputRanges:r,outputValues:i,noDataRanges:a,outputPixelType:s,allowUnmatched:u,isLastInputRangeInclusive:l})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:n}=this.functionArguments,s=new Float32Array(3*o.B),i=1e-5,a=this.functionArguments.inputRanges??[],u=this.functionArguments.outputValues??[],l=u.length;for(let p=0;p<o.B;p++)s[3*p]=a[2*p]??r.jn-1,s[3*p+1]=a[2*p+1]??r.jn,s[3*p+2]=u[p]??0,p<l&&(p>0&&(s[3*p]-=i),(p<l-1||!n)&&(s[3*p+1]-=i));const c=new Float32Array(2*o.B);return c.fill(r.jn),e?.length&&c.set(e),{allowUnmatched:t,rangeMaps:s,noDataRanges:c,clampRange:(0,o.j)(this.outputPixelType)}}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],Ns.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:Rs,json:{write:!0,name:"rasterFunctionArguments"}})],Ns.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],Ns.prototype,"rasterArgumentNames",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],Ns.prototype,"lookup",void 0),Ns=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.RemapFunction")],Ns);const Fs=Ns;var Cs;let Ss=Cs=class extends is{readColorRamp(t){if("string"==typeof t){const e=i.w.jsonValues.find((e=>e.toLowerCase()===t.toLowerCase()));return e?(0,i.y)(i.w.fromJSON(e)):null}return"toJSON"in t?t.toJSON():t}clone(){return new Cs({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,colorRamp:this.colorRamp,colormap:this.colormap,raster:this.raster})}};(0,r.k)([(0,r.o)({json:{write:!0}})],Ss.prototype,"colorRamp",void 0),(0,r.k)([(0,r.u)("colorRamp")],Ss.prototype,"readColorRamp",null),(0,r.k)([(0,r.o)({type:[[Number]],json:{write:!0}})],Ss.prototype,"colormap",void 0),Ss=Cs=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.ShadedReliefFunctionArguments")],Ss);const Is=Ss;let Ms=class extends y{constructor(){super(...arguments),this.functionName="ShadedRelief",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: source data must be single band"};let{colorRamp:e,colormap:n}=this.functionArguments;if(!e&&!n?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a color ramp argument must be specified"};this.outputPixelType=this._getOutputPixelType("u8");const s=t.clone();this._removeStatsHistColormapVAT(s),s.pixelType=this.outputPixelType,s.bandCount=3,s.statistics=[{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=s,this.isGCS=s.spatialReference?.isGeographic??!1,n?.length||(n=(0,i.d)(e,{interpolateAlpha:!0}));const{indexedColormap:r,offset:a}=(0,o.r)({colormap:n});if(!r?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a valid colorramp is required"};const u=(0,i.M)(r);return this.lookup={indexedColormap:r,offset:a,hsvMap:u},{success:!0,supportsGPU:(0,i.z)(r)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(!e||!this.lookup)return null;let n=t.primaryPixelSizes?.[0];if(null==n){const{extent:s}=t;n=s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1}}const s=(0,i.I)(this.functionArguments,n,this.isGCS),r=(0,i.J)(e,s),o=this.sourceRasterInfos[0].statistics?.[0]??{min:0,max:8e3};return(0,i.O)(r,e,this.lookup.hsvMap,o),r.pixelType=this.outputPixelType,r}_getWebGLParameters(){const t=(0,i.I)(this.functionArguments,{x:1,y:1},this.isGCS),e=(0,i.K)(t),{slopeType:n,zFactor:s,pixelSizeFactor:r,pixelSizePower:a}=this.functionArguments,u="scaled"===n,{indexedColormap:l,offset:c}=this.lookup,p=this.sourceRasterInfos[0].statistics?.[0],h=(0,o.w)(this.outputPixelType);return{...e,indexedColormap:l,offset:c,zFactor:s,gcsFactor:this.isGCS?i.G:1,pixelSizeFactor:u?r:0,pixelSizePower:u?a:0,minValue:p?.min??0,maxValue:p?.max??8e3,isOutputRounded:h}}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],Ms.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:Is,json:{write:!0,name:"rasterFunctionArguments"}})],Ms.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],Ms.prototype,"rasterArgumentNames",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],Ms.prototype,"isGCS",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],Ms.prototype,"lookup",void 0),Ms=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.ShadedReliefFunction")],Ms);const _s=Ms;var js;const Bs=new r.ax({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let Gs=js=class extends p{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new js({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};(0,r.k)([(0,r.bk)(Bs)],Gs.prototype,"slopeType",void 0),(0,r.k)([(0,r.o)({type:Number,json:{write:!0}})],Gs.prototype,"zFactor",void 0),(0,r.k)([(0,r.o)({type:Number,json:{name:"psPower",write:!0}})],Gs.prototype,"pixelSizePower",void 0),(0,r.k)([(0,r.o)({type:Number,json:{name:"psZFactor",write:!0}})],Gs.prototype,"pixelSizeFactor",void 0),(0,r.k)([(0,r.o)({type:Boolean,json:{write:!0}})],Gs.prototype,"removeEdgeEffect",void 0),Gs=js=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],Gs);const zs=Gs;let Os=class extends y{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(t),t.statistics="percent-rise"!==this.functionArguments.slopeType?[{min:0,max:90,avg:1,stddev:1}]:null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:n,slopeType:s,pixelSizePower:r,pixelSizeFactor:o}=this.functionArguments,{isGCS:a}=this,{extent:u,primaryPixelSizes:l}=t,c=l?.[0],p=c??(u?{x:u.width/e.width,y:u.height/e.height}:{x:1,y:1});return(0,i.Q)(e,{zFactor:n,slopeType:s,pixelSizePower:r,pixelSizeFactor:o,isGCS:a,resolution:p})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:n,pixelSizePower:s}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*i.G:t,slopeType:e,pixelSizeFactor:n??0,pixelSizePower:s??0,isOutputRounded:(0,o.w)(this.outputPixelType)}}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],Os.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:zs,json:{write:!0,name:"rasterFunctionArguments"}})],Os.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],Os.prototype,"rasterArgumentNames",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],Os.prototype,"isGCS",void 0),Os=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.SlopeFunction")],Os);const Es=Os,Ds=new r.ax({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function Us(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:o,mask:i,outBand:a}=t;if(n&&!i)return void a.set(s);const{statisticsType:u,kernelRows:l,kernelCols:c}=e,p="stddev"===u,h=r*o,m=new Float64Array(h),f=new Float64Array(h),d=new Uint32Array(h);for(let v=0;v<o;v++){const t=v*r;let e=0,n=0,o=0;for(let r=0;r<c;r++)i&&!i[t+r]||(e+=s[t+r],p&&(n+=s[t+r]**2),o++);m[t]=e,f[t]=n,d[t]=o;for(let a=1;a<=r-c;a++){const r=t+a-1,u=r+c;i?(i[r]&&(o--,e-=s[r],p&&(n-=s[r]**2)),i[u]&&(o++,e+=s[u],p&&(n+=s[u]**2))):(e-=s[r],e+=s[u],p&&(n-=s[r]**2,n+=s[u]**2)),m[t+a]=e,d[t+a]=o,p&&(f[t+a]=n)}}const g=new Float64Array(h),y=new Float64Array(h),x=new Uint32Array(h),w=l*r;for(let v=0;v<=r-c;v++){let t=0,e=0,n=0;for(let s=0;s<l;s++){const o=s*r+v;t+=m[o],n+=d[o],p&&(e+=f[o])}g[v]=t,y[v]=e,x[v]=n;for(let s=1;s<=o-l;s++){const o=(s-1)*r+v,i=o+w;t-=m[o],t+=m[i],n-=d[o],n+=d[i],p&&(e-=f[o],e+=f[i]),g[s*r+v]=t,y[s*r+v]=e,x[s*r+v]=n}}const b=Math.floor(l/2),k=Math.floor(c/2);for(let v=b;v<o-b;v++){const t=v*r;for(let e=k;e<r-k;e++){const s=(v-b)*r+e-k,o=x[s];if(0===o||n&&(!i||i[t+e]))continue;const u=g[s]/o,l=p?Math.sqrt((y[s]-g[s]*u)/o):u;a[t+e]=l,i&&(i[t+e]=255)}}}function Vs(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:o,mask:i,outBand:a}=t;if(n&&!i)return void a.set(s);const{kernelRows:u,kernelCols:l,statisticsType:c}=e,p=Math.floor(u/2),h=Math.floor(l/2),m="min"===c,f=a.slice(),d=new Uint32Array(r*o);for(let g=p;g<o-p;g++){const t=g*r;for(let e=h;e<r-h;e++){let n=m?Number.MAX_VALUE:-Number.MAX_VALUE,o=0;for(let a=0;a<u;a++)for(let u=0;u<l;u++){const l=t+e+(a-p)*r+u-h;i&&!i[l]||(n=m?Math.min(n,s[l]):Math.max(n,s[l]),o++)}i?(f[t+e]=0===o?0:n,d[t+e]=o):a[t+e]=0===o?0:n}}if(i)for(let g=p;g<o-p;g++){const t=g*r;for(let e=h;e<r-h;e++)if(d[t+e]){if(n&&i[t+e])continue;a[t+e]=f[t+e],i[t+e]=255}}}function Ls(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:o,mask:i,outBand:a}=t;if(n&&!i)return void a.set(s);const{kernelRows:u,kernelCols:l}=e,c=Math.floor(u/2),p=Math.floor(l/2),h=a.slice(),m=new Uint32Array(r*o);for(let f=c;f<o-c;f++){const t=f*r;for(let e=p;e<r-p;e++){if(n&&i?.[t+e])continue;const o=[];for(let n=0;n<u;n++)for(let a=0;a<l;a++){const u=t+e+(n-c)*r+a-p;i&&!i[u]||o.push(s[u])}o.length&&(o.sort(((t,e)=>t-e)),i?(h[t+e]=o[Math.floor((o.length-1)/2)],m[t+e]=o.length):a[t+e]=o[Math.floor((o.length-1)/2)])}}if(i)for(let f=c;f<o-c;f++){const t=f*r;for(let e=p;e<r-p;e++)if(m[t+e]){if(n&&i[t+e])continue;a[t+e]=h[t+e],i[t+e]=255}}}function Ws(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:o,mask:i,outBand:a}=t;if(n&&!i)return void a.set(s);const{kernelRows:u,kernelCols:l}=e,c=Math.floor(u/2),p=Math.floor(l/2),h="majority"===e.statisticsType,m=u*l,f=a.slice(),d=new Uint32Array(r*o);for(let g=c;g<o-c;g++){const t=g*r;for(let e=p;e<r-p;e++){if(n&&i?.[t+e])continue;const o=new Map;for(let n=0;n<u;n++)for(let a=0;a<l;a++){const u=t+e+(n-c)*r+a-p;if(i&&!i[u])continue;const l=s[u];o.set(l,o.has(l)?o.get(l)+1:1)}if(0===o.size)continue;let g=0,y=0,x=h?0:m+1;for(const t of o.keys())y=o.get(t),h===y>x&&(x=y,g=t);i?(f[t+e]=g,d[t+e]=o.size):a[t+e]=g}}if(i)for(let g=c;g<o-c;g++){const t=g*r;for(let e=p;e<r-p;e++)if(d[t+e]){if(n&&i[t+e])continue;a[t+e]=f[t+e],i[t+e]=255}}}function qs(t,e){const{mask:n}=t,{fillNoDataOnly:s}=e;if(s&&!n)return t;const{pixels:r,width:i,height:a,bandMasks:u,pixelType:l}=t,c=r.length,p=i*a,h=[],{kernelRows:m,kernelCols:f,statisticsType:d,mirrorEdges:g}=e;if(s&&!n)return t;const y=e.outputPixelType??l,x=[];for(let k=0;k<c;k++){const t=r[k],l=o.g.createEmptyBand(y,p);s&&l.set(t);const c=u?.[k]??n,w=c?.slice()??null,b={band:t,width:i,height:a,mask:w,outBand:l};switch(d){case"min":case"max":Vs(b,e);break;case"mean":case"stddev":Us(b,e);break;case"median":Ls(b,e);break;case"majority":case"minority":Ws(b,e)}g&&!s&&vn(l,i,a,m,f),h.push(l),w&&x.push(w)}let w=x[0]??n;x.length!==c&&(x.length=0),c>1&&u?.length&&(w=o.g.combineBandMasks(u));const b=new o.g({pixelType:y,width:i,height:a,pixels:h,bandMasks:u&&x.length?x:null,mask:w});return b.updateStatistics(),b}var Hs;let Ks=Hs=class extends p{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new Hs({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:(0,r.f)(this.raster)})}};(0,r.k)([(0,r.o)({json:{write:!0,read:{source:["kernelRows","rows"],reader:(t,e)=>Number(t??e?.kernelRows??3)}}})],Ks.prototype,"rows",void 0),(0,r.k)([(0,r.o)({json:{write:!0,read:{source:["kernelCols","cols"],reader:(t,e)=>Number(t??e?.kernelCols??3)}}})],Ks.prototype,"cols",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],Ks.prototype,"fillNoDataOnly",void 0),(0,r.k)([(0,r.o)({json:{read:{source:["statisticsType","type"],reader:(t,e)=>Ds.fromJSON(e?.statisticsType??e?.type)??"min"},write:{target:"type"}}}),(0,r.bk)(Ds)],Ks.prototype,"statisticsType",void 0),Ks=Hs=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],Ks);const Js=Ks;let $s=class extends y{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const n=e.clone();n.pixelType=this.outputPixelType;const{statisticsType:s}=this.functionArguments;return"stddev"===s&&this._removeStatsHistColormapVAT(n),this.rasterInfo=n,{success:!0,supportsGPU:n.bandCount<=3&&t<5}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{statisticsType:n,rows:s,cols:r,fillNoDataOnly:o}=this.functionArguments;return qs(e,{kernelRows:s,kernelCols:r,fillNoDataOnly:o,outputPixelType:this.outputPixelType,statisticsType:n,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:n,fillNoDataOnly:s}=this.functionArguments;return{fillNoDataOnly:s,kernelRows:t,kernelCols:e,statisticsType:n,clampRange:(0,o.j)(this.outputPixelType)}}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],$s.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:Js,json:{write:!0,name:"rasterFunctionArguments"}})],$s.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],$s.prototype,"rasterArgumentNames",void 0),$s=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.StatisticsFunction")],$s);const Xs=$s;var Ys;let Zs=Ys=class extends p{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,e){if(!t?.length)return null;const n=[];return t.forEach((t=>{const e={min:t.min,max:t.max,avg:t.avg??t.mean,stddev:t.stddev??t.standardDeviation};n.push(e)})),n}writeStatistics(t,e,n){if(!t?.length)return;const s=[];t.forEach((t=>{const e={...t,mean:t.avg,standardDeviation:t.stddev};delete e.avg,delete e.stddev,s.push(e)})),e[n]=s}clone(){return new Ys({statistics:(0,r.f)(this.statistics),histograms:(0,r.f)(this.histograms)})}};(0,r.k)([(0,r.o)({json:{write:!0}})],Zs.prototype,"statistics",void 0),(0,r.k)([(0,r.u)("statistics")],Zs.prototype,"readStatistics",null),(0,r.k)([(0,r.q)("statistics")],Zs.prototype,"writeStatistics",null),(0,r.k)([(0,r.o)({json:{write:!0}})],Zs.prototype,"histograms",void 0),Zs=Ys=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],Zs);const Qs=Zs;let tr=class extends y{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:n,histograms:s}=this.functionArguments;return s&&(e.histograms=s),n&&(e.statistics=n),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],tr.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:Qs,json:{write:!0,name:"rasterFunctionArguments"}})],tr.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],tr.prototype,"rasterArgumentNames",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],tr.prototype,"indexedColormap",void 0),(0,r.k)([(0,r.o)()],tr.prototype,"isNoopProcess",void 0),tr=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],tr);const er=tr;var nr;const sr=new r.ax({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let rr=nr=class extends p{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,n){t?.length&&(Array.isArray(t[0])||(t=t.map((t=>[t.min,t.max,t.avg,t.stddev]))),e[n]=t)}clone(){return new nr({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:(0,r.f)(this.statistics),gamma:(0,r.f)(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:(0,r.f)(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};(0,r.k)([(0,r.o)({type:Boolean,json:{write:!0}})],rr.prototype,"computeGamma",void 0),(0,r.k)([(0,r.o)({type:Boolean,json:{name:"dra",write:!0}})],rr.prototype,"dynamicRangeAdjustment",void 0),(0,r.k)([(0,r.o)({type:[Number],json:{write:!0}})],rr.prototype,"gamma",void 0),(0,r.k)([(0,r.o)()],rr.prototype,"histograms",void 0),(0,r.k)([(0,r.o)({type:Number,json:{write:!0}})],rr.prototype,"maxPercent",void 0),(0,r.k)([(0,r.o)({type:Number,json:{write:!0}})],rr.prototype,"minPercent",void 0),(0,r.k)([(0,r.o)({type:Number,json:{write:!0}})],rr.prototype,"numberOfStandardDeviations",void 0),(0,r.k)([(0,r.o)({type:Number,json:{name:"max",write:!0}})],rr.prototype,"outputMax",void 0),(0,r.k)([(0,r.o)({type:Number,json:{name:"min",write:!0}})],rr.prototype,"outputMin",void 0),(0,r.k)([(0,r.o)({type:Number,json:{write:!0}})],rr.prototype,"sigmoidStrengthLevel",void 0),(0,r.k)([(0,r.o)({json:{type:[[Number]],write:!0}})],rr.prototype,"statistics",void 0),(0,r.k)([(0,r.q)("statistics")],rr.prototype,"writeStatistics",null),(0,r.k)([(0,r.bk)(sr)],rr.prototype,"stretchType",void 0),(0,r.k)([(0,r.o)({type:Boolean,json:{write:!0}})],rr.prototype,"useGamma",void 0),rr=nr=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.StretchFunctionArguments")],rr);const or=rr;let ir=class extends y{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:n}=this,{dynamicRangeAdjustment:s,gamma:r,useGamma:a}=n;if(!s&&["u8","u16","s8","s16"].includes(e)){const s=(0,i.S)(n.toJSON(),{rasterInfo:t}),u=(0,o.w)(this.outputPixelType)?"round":"float";this.lookup=(0,i.T)({pixelType:e,...s,gamma:a?r:null,rounding:u}),this.cutOffs=s}else s||(this.cutOffs=(0,i.S)(n.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const u=t.clone();u.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(u),"u8"===this.outputPixelType&&(u.keyProperties.DataType="processed");const{outputMin:l=0,outputMax:c=255}=this.functionArguments;u.statistics=[];for(let o=0;o<u.bandCount;o++)u.statistics[o]={min:l,max:c};return this.rasterInfo=u,{success:!0,supportsGPU:!s}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{lookup:n}=this;if(n)return(0,o.q)(e,{...n,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:s}=this,r=this.cutOffs||(0,i.S)(s.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),a=s.useGamma?s.gamma:null;return(0,i.V)(e,{...r,gamma:a,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:n,useGamma:s}=this.functionArguments,r=this.rasterInfo.bandCount>=2?3:1,a=s&&n?.length?(0,i.W)(r,n):[1,1,1],{minCutOff:u,maxCutOff:l}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};1===u.length&&(u[1]=u[2]=u[0],l[1]=l[2]=l[0]);const c=new Float32Array(r);let p;for(p=0;p<r;p++)c[p]=(e-t)/(l[p]-u[p]);const h=(0,o.w)(this.outputPixelType);return{bandCount:r,outMin:t,outMax:e,minCutOff:u,maxCutOff:l,factor:c,useGamma:s,gamma:s&&n?n:[1,1,1],gammaCorrection:s&&a?a:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:h,type:"stretch"}}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],ir.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:or,json:{write:!0,name:"rasterFunctionArguments"}})],ir.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],ir.prototype,"rasterArgumentNames",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],ir.prototype,"lookup",void 0),(0,r.k)([(0,r.o)({json:{write:!0}})],ir.prototype,"cutOffs",void 0),ir=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.StretchFunction")],ir);const ar=ir;var ur;let lr=ur=class extends p{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new ur({attributeTableAsRecordSet:(0,r.f)(this.attributeTableAsRecordSet)})}};(0,r.k)([(0,r.o)({json:{write:!0}})],lr.prototype,"attributeTableAsRecordSet",void 0),lr=ur=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.TableFunctionArguments")],lr);const cr=lr;let pr=class extends y{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||t.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:e}=this.functionArguments;if(!e)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(t.pixelType);const n=t.clone();return n.pixelType=this.outputPixelType,n.bandCount=1,"thematic"!==n.dataType&&(n.keyProperties=n.keyProperties?{...n.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=n,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};(0,r.k)([(0,r.o)({json:{write:!0,name:"rasterFunction"}})],pr.prototype,"functionName",void 0),(0,r.k)([(0,r.o)({type:cr,json:{write:!0,name:"rasterFunctionArguments"}})],pr.prototype,"functionArguments",void 0),(0,r.k)([(0,r.o)()],pr.prototype,"rasterArgumentNames",void 0),(0,r.k)([(0,r.o)()],pr.prototype,"isNoopProcess",void 0),pr=(0,r.k)([(0,r.A)("esri.layers.support.rasterFunctions.TableFunction")],pr);const hr=pr,mr=new Map;function fr(t,e){const{rasterFunctionArguments:n}=t;n&&(n.rasters||[n.raster,n.raster2]).forEach((t=>{t&&"number"!=typeof t&&("string"==typeof t?t.startsWith("http")&&(e.includes(t)||e.push(t)):"rasterFunctionArguments"in t&&fr(t,e))}))}function dr(t,e){if(e=e??{},"function"in(t=(0,r.f)(t))&&"arguments"in t&&t.arguments){const n=Ar(t,new Map,e);if(Pr(n),!n.renderingRule)throw new r.s("raster-function-helper","Unsupported raster function json.");t=n.renderingRule}if("rasterFunction"in t)return wr(t=xr(t),e);throw new r.s("raster-function-helper","unsupported raster function json.")}function gr(t,e){return"rasters"===e[0]&&Array.isArray(t.rasters)?t.rasters:e.map((e=>t[e]))}function yr(t){return!!(t&&"object"==typeof t&&t.rasterFunction&&t.rasterFunctionArguments)}function xr(t){const{rasterFunction:e,rasterFunctionArguments:n}=t,s={};for(const r in n){let t=n[r];const e=r.toLowerCase();if("rasters"===e&&Array.isArray(t))s.rasters=t.map((t=>yr(t)?xr(t):t));else switch(yr(t)&&(t=xr(t)),e){case"dra":s.dra=t;break;case"pspower":s.psPower=t;break;case"pszfactor":s.psZFactor=t;break;case"bandids":s.bandIds=t;break;default:s[r[0].toLowerCase()+r.slice(1)]=t}}return"Local"!==e||s.rasters?.length||(s.rasters=["$$"]),{...t,rasterFunctionArguments:s}}function wr(t,e){const{rasterFunction:n,rasterFunctionArguments:s}=t,o=t.outputPixelType?.toLowerCase();if(null==n||!mr.has(n))throw new r.s("raster-function-helper",`unsupported raster function: ${n}`);const i=mr.get(n),a=("function"==typeof i.ctor?i.ctor:i.ctor.default).fromJSON({...t,outputPixelType:o}),{rasterArgumentNames:u}=a,l=[],c=gr(s,u),p="rasters"===u[0]||u.length>1,h=[];for(let r=0;r<c.length;r++){const t=c[r];let n;null==t||"string"==typeof t&&t.startsWith("$")?l.push(e?.raster):"string"==typeof t?e[t]&&l.push(e[t]):"number"!=typeof t&&"rasterFunction"in t&&(n=wr(t,e),p||(a.functionArguments[u[r]]=n),l.push(n)),p&&h.push(n??t)}if(p&&("rasters"===u[0]?a.functionArguments.rasters=h:u.forEach(((t,e)=>{a.functionArguments[t]=h[e]}))),e){a.sourceRasters=l;const t=e.raster?.url;t&&(a.mainPrimaryRasterId=t)}return a}function br(t,e){if(t&&e)for(const n in t){const s=t[n];s&&"object"==typeof s&&"type"in s&&("RasterFunctionTemplate"===s.type?br(s.arguments,e):"RasterFunctionVariable"===s.type&&null!=e[s.name]&&(s.value=e[s.name]))}}function kr(t,e){if(!t||"object"!=typeof t)return t;const{value:n}=t;if(!n||"object"!=typeof n)return t.isDataset?"$$":n;if(Array.isArray(n))return 0===n.length?[]:n.map((t=>"object"==typeof t&&"RasterFunctionVariable"===t.type?kr(t,e):t));if("value"in n&&["number","string","boolean"].includes(typeof n.value))return n.value;if(t.isDataset&&"Scalar"!==n.type)return"$$";if(!("type"in n))return n;let s=n;switch(n.type){case"Scalar":s=n.value;break;case"AlgorithmicColorRamp":s=vr(n);break;case"MultiPartColorRamp":s={type:"multipart",colorRamps:n.ArrayOfColorRamp.map(vr)};break;case"ArgumentArray":if(n.elements?.length&&"RasterStatistics"!==n.elements[0].type){const t=[];for(let s=0;s<n.elements.length;s++){const o=n.elements[s],{type:i}=o;if(i)if("RasterFunctionTemplate"===i){const{renderingRule:n}=Ar(o,e);t.push(n),null!=o._object_id&&e.set(o._object_id,n)}else{if("RasterFunctionVariable"!==i)throw new r.s("raster-function-helper","unsupported raster function json.");{const n=kr(o,e);t.push(n),null!=o._object_id&&e.set(o._object_id,n)}}else t.push(o)}s=t}else s=n.elements}return null!=n._object_id&&e.set(n._object_id,s),s}function vr(t){const e=t.algorithm??"esriHSVAlgorithm";let{FromColor:n,ToColor:r}=t;if(!Array.isArray(n)){const{r:t,g:e,b:r}=(0,s.A)({h:n.Hue,s:n.Saturation,v:n.Value});n=[t,e,r,n.AlphaValue]}if(!Array.isArray(r)){const{r:t,g:e,b:n}=(0,s.A)({h:r.Hue,s:r.Saturation,v:r.Value});r=[t,e,n,r.AlphaValue]}return{type:"algorithmic",algorithm:e,fromColor:n,toColor:r}}function Ar(t,e,n){n&&br(t,n);const s={renderingRule:{},templates:e};return Tr(t,s),s}function Tr(t,e){if(!t||!e.renderingRule)return;const{renderingRule:n,templates:s}=e,{function:r,arguments:o,_object_id:i}=t;if(!r||!o)return;null!=i&&s.set(i,n),n.rasterFunction=r.type.replace("Function",""),n.outputPixelType=r.pixelType;const a={};n.rasterFunctionArguments=a;for(const u in o){if("type"===u||"object_id"===u||"_object_ref_id"===u)continue;const t=o[u];t&&"object"==typeof t&&"type"in t&&("RasterFunctionTemplate"===t.type||"RasterFunctionVariable"===t.type)?("RasterFunctionVariable"===t.type?a[u]=kr(t,s):(n.rasterFunctionArguments[u]={},Tr(t,{renderingRule:n.rasterFunctionArguments[u],templates:s})),null!=t._object_id&&s.set(t._object_id,a[u])):a[u]=t}switch(a.DEM&&!a.Raster&&(a.Raster=a.DEM,delete a.DEM),n.rasterFunction){case"Stretch":Rr(a);break;case"Colormap":Nr(a);break;case"Convolution":Fr(a);break;case"Mask":Cr(a)}}function Pr(t){const{renderingRule:e,templates:n}=t;if("object"!=typeof e||!e?.rasterFunctionArguments||!n.size)return;const{rasterFunctionArguments:s}=e;for(const o in s){const t=s[o],e="_object_ref_id"===o?t:t&&"object"==typeof t&&"_object_ref_id"in t?t._object_ref_id:null;if(null==e)t&&"object"==typeof t&&(t.rasterFunctionArguments&&Pr({renderingRule:t,templates:n}),Array.isArray(t)&&t.forEach(((s,o)=>{if("object"==typeof s)if(null!=s._object_ref_id){if(!n.has(s._object_ref_id))throw new r.s("raster-function-helper",`unsupported raster function json. _object_ref_id: ${t} does not exist`);const i=n.get(e);i&&"object"==typeof i?Object.assign(s,i):t[o]=i}else Pr({renderingRule:s,templates:n})})));else{if(!n.has(e))throw new r.s("raster-function-helper",`unsupported raster function json. _object_ref_id: ${e} does not exist`);const t=n.get(e);"_object_ref_id"!==o?s[o]=t:t&&"object"==typeof t&&Object.assign(s,t)}}}function Rr(t){t.Statistics?.length&&"object"==typeof t.Statistics&&(t.Statistics=t.Statistics.map((t=>[t.min,t.max,t.mean,t.standardDeviation]))),null!=t.NumberOfStandardDeviation&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}function Nr(t){"randomcolorramp"===t.ColorRamp?.type?.toLowerCase()&&(delete t.ColorRamp,t.ColormapName="Random"),0===t.ColorSchemeType&&delete t.ColorRamp}function Fr(t){null!=t.ConvolutionType&&(t.Type=t.ConvolutionType,delete t.ConvolutionType)}function Cr(t){t.NoDataValues?.length&&"string"==typeof t.NoDataValues[0]&&(t.NoDataValues=t.NoDataValues.filter((t=>""!==t)).map((t=>Number(t))))}mr.set("Arithmetic",{desc:"Arithmetic Function",ctor:Bt,rasterArgumentNames:["rasters"]}),mr.set("Aspect",{desc:"Aspect Function",ctor:Dt,rasterArgumentNames:["raster"]}),mr.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:we,rasterArgumentNames:["raster"]}),mr.set("Colormap",{desc:"Colormap Function",ctor:He,rasterArgumentNames:["raster"]}),mr.set("ColormapToRGB",{desc:"ColormapToRGB Function",ctor:Ye,rasterArgumentNames:["raster"]}),mr.set("CompositeBand",{desc:"CompositeBand Function",ctor:nn,rasterArgumentNames:["rasters"]}),mr.set("ComputeChange",{desc:"ComputeChange Function",ctor:gn,rasterArgumentNames:["rasters"]}),mr.set("Convolution",{desc:"Convolution Function",ctor:Bn,rasterArgumentNames:["raster"]}),mr.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:kn,rasterArgumentNames:["raster"]}),mr.set("ExtractBand",{desc:"ExtractBand Function",ctor:Hn,rasterArgumentNames:["raster"]}),mr.set("Curvature",{desc:"Curvature Function",ctor:Un,rasterArgumentNames:["raster"]}),mr.set("Hillshade",{desc:"Hillshade Function",ctor:us,rasterArgumentNames:["raster"]}),mr.set("ShadedRelief",{desc:"ShadedRelief Function",ctor:_s,rasterArgumentNames:["raster"]}),mr.set("Grayscale",{desc:"Grayscale Function",ctor:es,rasterArgumentNames:["raster"]}),mr.set("Clip",{desc:"Clip Function",ctor:Me,rasterArgumentNames:["raster"]}),mr.set("Local",{desc:"Local Function",ctor:ms,rasterArgumentNames:["rasters"]}),mr.set("Mask",{desc:"Mask Function",ctor:xs,rasterArgumentNames:["raster"]}),mr.set("NDVI",{desc:"NDVI Function",ctor:As,rasterArgumentNames:["raster"]}),mr.set("Remap",{desc:"Remap Function",ctor:Fs,rasterArgumentNames:["raster"]}),mr.set("Slope",{desc:"Slope Function",ctor:Es,rasterArgumentNames:["raster"]}),mr.set("Statistics",{desc:"Focal Statistics Function",ctor:Xs,rasterArgumentNames:["raster"]}),mr.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:er,rasterArgumentNames:["raster"]}),mr.set("Stretch",{desc:"Stretch Function",ctor:ar,rasterArgumentNames:["raster"]}),mr.set("Table",{desc:"Attribute Table Function",ctor:hr,rasterArgumentNames:["raster"]});let Sr=class extends r.v{get affectsPixelSize(){return!1}forwardTransform(t){return t}inverseTransform(t){return t}};(0,r.k)([(0,r.o)()],Sr.prototype,"affectsPixelSize",null),(0,r.k)([(0,r.o)({json:{write:!0}})],Sr.prototype,"spatialReference",void 0),Sr=(0,r.k)([(0,r.A)("esri.layers.support.rasterTransforms.BaseRasterTransform")],Sr);const Ir=Sr;var Mr;let _r=Mr=class extends Ir{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(t){return"point"===(t=t.clone()).type?(t.x>180+this.tolerance&&(t.x-=360),t):(t.xmin>=180-this.tolerance?(t.xmax-=360,t.xmin-=360):t.xmax>180+this.tolerance&&(t.xmin=-180,t.xmax=180),t)}inverseTransform(t){return"point"===(t=t.clone()).type?(t.x<-this.tolerance&&(t.x+=360),t):(t.xmin<-this.tolerance&&(t.xmin+=360,t.xmax+=360),t)}clone(){return new Mr({tolerance:this.tolerance})}};(0,r.k)([(0,r.bk)({GCSShiftXform:"gcs-shift"})],_r.prototype,"type",void 0),(0,r.k)([(0,r.o)()],_r.prototype,"tolerance",void 0),_r=Mr=(0,r.k)([(0,r.A)("esri.layers.support.rasterTransforms.GCSShiftTransform")],_r);const jr=_r;var Br;function Gr(t,e,n){const{x:s,y:r}=e;if(n<2)return{x:t[0]+s*t[2]+r*t[4],y:t[1]+s*t[3]+r*t[5]};if(2===n){const e=s*s,n=r*r,o=s*r;return{x:t[0]+s*t[2]+r*t[4]+e*t[6]+o*t[8]+n*t[10],y:t[1]+s*t[3]+r*t[5]+e*t[7]+o*t[9]+n*t[11]}}const o=s*s,i=r*r,a=s*r,u=o*s,l=o*r,c=s*i,p=r*i;return{x:t[0]+s*t[2]+r*t[4]+o*t[6]+a*t[8]+i*t[10]+u*t[12]+l*t[14]+c*t[16]+p*t[18],y:t[1]+s*t[3]+r*t[5]+o*t[7]+a*t[9]+i*t[11]+u*t[13]+l*t[15]+c*t[17]+p*t[19]}}function zr(t,e,n){const{xmin:s,ymin:o,xmax:i,ymax:a,spatialReference:u}=e;let l=[];if(n<2)l.push({x:s,y:a}),l.push({x:i,y:a}),l.push({x:s,y:o}),l.push({x:i,y:o});else{let t=10;for(let e=0;e<t;e++)l.push({x:s,y:o+(a-o)*e/(t-1)}),l.push({x:i,y:o+(a-o)*e/(t-1)});t=8;for(let e=1;e<=t;e++)l.push({x:s+(i-s)*e/t,y:o}),l.push({x:s+(i-s)*e/t,y:a})}l=l.map((e=>Gr(t,e,n)));const c=l.map((t=>t.x)),p=l.map((t=>t.y));return new r.au({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,p),ymax:Math.max.apply(null,p),spatialReference:u})}function Or(t){const[e,n,s,r,o,i]=t,a=s*i-o*r,u=o*r-s*i;return[(o*n-e*i)/a,(s*n-e*r)/u,i/a,r/u,-o/a,-s/u]}let Er=Br=class extends Ir{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(t,e){const{coeffX:n,coeffY:s}=e;if(!n?.length||!s?.length||n.length!==s.length)return null;const r=[];for(let o=0;o<n.length;o++)r.push(n[o]),r.push(s[o]);return r}writeForwardCoefficients(t,e,n){const s=[],r=[];for(let o=0;o<t?.length;o++)o%2==0?s.push(t[o]):r.push(t[o]);e.coeffX=s,e.coeffY=r}get inverseCoefficients(){let t=this._get("inverseCoefficients");const e=this._get("forwardCoefficients");return!t&&e&&this.polynomialOrder<2&&(t=Or(e)),t}set inverseCoefficients(t){this._set("inverseCoefficients",t)}readInverseCoefficients(t,e){const{inverseCoeffX:n,inverseCoeffY:s}=e;if(!n?.length||!s?.length||n.length!==s.length)return null;const r=[];for(let o=0;o<n.length;o++)r.push(n[o]),r.push(s[o]);return r}writeInverseCoefficients(t,e,n){const s=[],r=[];for(let o=0;o<t?.length;o++)o%2==0?s.push(t[o]):r.push(t[o]);e.inverseCoeffX=s,e.inverseCoeffY=r}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(t){if("point"===t.type){const e=Gr(this.forwardCoefficients,t,this.polynomialOrder);return new r.bv({x:e.x,y:e.y,spatialReference:t.spatialReference})}return zr(this.forwardCoefficients,t,this.polynomialOrder)}inverseTransform(t){if("point"===t.type){const e=Gr(this.inverseCoefficients,t,this.polynomialOrder);return new r.bv({x:e.x,y:e.y,spatialReference:t.spatialReference})}return zr(this.inverseCoefficients,t,this.polynomialOrder)}clone(){return new Br({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};(0,r.k)([(0,r.o)({json:{write:!0}})],Er.prototype,"polynomialOrder",void 0),(0,r.k)([(0,r.o)()],Er.prototype,"forwardCoefficients",void 0),(0,r.k)([(0,r.u)("forwardCoefficients",["coeffX","coeffY"])],Er.prototype,"readForwardCoefficients",null),(0,r.k)([(0,r.q)("forwardCoefficients")],Er.prototype,"writeForwardCoefficients",null),(0,r.k)([(0,r.o)({json:{write:!0}})],Er.prototype,"inverseCoefficients",null),(0,r.k)([(0,r.u)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],Er.prototype,"readInverseCoefficients",null),(0,r.k)([(0,r.q)("inverseCoefficients")],Er.prototype,"writeInverseCoefficients",null),(0,r.k)([(0,r.o)()],Er.prototype,"affectsPixelSize",null),(0,r.k)([(0,r.bk)({PolynomialXform:"polynomial"})],Er.prototype,"type",void 0),Er=Br=(0,r.k)([(0,r.A)("esri.layers.support.rasterTransforms.PolynomialTransform")],Er);const Dr=Er},25209:function(t,e,n){n.d(e,{c:function(){return c},e:function(){return r},o:function(){return i},u:function(){return l}});let s=1e-6;function r(){return s}function o(t){s=t}const i=Math.random,a=Math.PI/180,u=180/Math.PI;function l(t){return t*a}function c(t){return t*u}function p(t,e){return Math.abs(t-e)<=s*Math.max(1,Math.abs(t),Math.abs(e))}Object.freeze(Object.defineProperty({__proto__:null,RANDOM:i,equals:p,getEpsilon:r,setEpsilon:o,toDegree:c,toRadian:l},Symbol.toStringTag,{value:"Module"}))},38020:function(t,e,n){n.d(e,{C:function(){return w},D:function(){return B},I:function(){return A},K:function(){return j},V:function(){return O},a:function(){return J},c:function(){return X},e:function(){return U},f:function(){return Y},i:function(){return W},j:function(){return x},l:function(){return $},t:function(){return V},v:function(){return y},w:function(){return i}});var s,r=n(98503),o=n(49555);function i(t,e,n){return!(0,o.J)(t,e,n)}function a(t,e,n){const s=i(t,e,n);if(s&&!(0,o._)())throw new r.s("rasterprojectionhelper-project","projection engine is not loaded");return s}(function(t){t[t.None=0]="None",t[t.North=1]="North",t[t.South=2]="South",t[t.Both=3]="Both"})(s||(s={}));const u=(t,e,n,s=0)=>{if(1===n[0])return[0,0];let r=1,o=-1,i=1,a=-1;for(let g=0;g<t.length;g+=2)isNaN(t[g])||(r=r>t[g]?t[g]:r,o=o>t[g]?o:t[g],i=i>t[g+1]?t[g+1]:i,a=a>t[g+1]?a:t[g+1]);const{cols:u,rows:l}=e,c=(o-r)/u/n[0],p=(a-i)/l/n[1],h=2*s;let m=0,f=!1,d=[0,0];for(let g=0;g<u-3;g++){for(let e=0;e<l-3;e++){const n=g*l*2+2*e,s=(t[n]+t[n+4]+t[n+4*l]+t[n+4*l+4])/4,r=(t[n+1]+t[n+5]+t[n+4*l+1]+t[n+4*l+5])/4,o=Math.abs((s-t[n+2*l+2])/c),i=Math.abs((r-t[n+2*l+3])/p);if(o+i>m&&(m=o+i,d=[o,i]),h&&m>h){f=!0;break}}if(f)break}return d},l={3395:20037508.342789244,3410:17334193.943686873,3857:20037508.342788905,3975:17367530.445161372,4087:20037508.342789244,4088:20015108.787169147,6933:17367530.445161372,32662:20037508.342789244,53001:20015086.79602057,53002:10007543.39801029,53003:20015086.79602057,53004:20015086.79602057,53016:14152803.599503474,53017:17333573.624304302,53034:20015086.79602057,53079:20015114.352186374,53080:20015114.352186374,54001:20037508.342789244,54002:10018754.171394624,54003:20037508.342789244,54004:20037508.342789244,54016:14168658.027268292,54017:17367530.44516137,54034:20037508.342789244,54079:20037508.342789244,54080:20037508.342789244,54100:20037508.342789244,54101:20037508.342789244},c=32,p=4,h=p,m=new Map,f=new Map,d=500;let g=null;async function y(){g&&(0,o._)()||((0,o._)()||await(0,o.W)(),g=await Promise.all([n.e(916),n.e(4803)]).then(n.bind(n,5498)))}function x(t,e,n){return a(t.spatialReference,e),n?(0,o.Y)(e,t.spatialReference,t):(0,o.Y)(t.spatialReference,e,t)}function w(t,e,n,s=null){const i=t.spatialReference;if(!i||!e||i.equals(e))return t;a(i,e,s);const u=n.center,l=new r.au({xmin:u.x-t.x/2,xmax:u.x+t.x/2,ymin:u.y-t.y/2,ymax:u.y+t.y/2,spatialReference:i}),c=(0,o.K)(l,e,s),p=O(e);return null==c||null!=p&&c.width>=p?b(t,i,e):{x:c.width,y:c.height}}function b(t,e,n){const s=(0,r.bq)(e)/(0,r.bq)(n);return{x:t.x*s,y:t.y*s}}function k(t,e,n){const{spatialReference:s}=n;if(!s||!e||s.equals(e))return t;if(s.isGeographic&&e.isGeographic)return b(t,s,e);if(a(s,e),!g)throw new r.s("raster-projection-helper:project-dataset-resolution","geometry engine is not loaded");let{x:i,y:u}=t;const l=(i+u)/2*(0,r.bq)(s);let c=1;l>30&&(c=30/l,i*=c,u*=c);const p=256,h=i*p/2,m=u*p/2,{x:f,y:d}=n.center,y=[];for(let r=0;r<=p;r++)y.push([f-h,d-m+r*u]);for(let r=1;r<=p;r++)y.push([f-h+r*i,d+m]);for(let r=1;r<=p;r++)y.push([f+h,d+m-r*u]);for(let r=1;r<p;r++)y.push([f+h-r*i,d-m]);y.push(y[0]);const x=new r.bC({rings:[y],spatialReference:s}),w=(0,o.K)(x,e);if(!w)return b(t,s,e);const k=w.extent,v=O(e);if(null==k||null!=v&&k.width>=v)return b(t,s,e);const A=g.planarArea(w),T=i*u*p*p,P=Math.sqrt(A/T)/c,R={x:k.width/c/p,y:k.height/c/p},N={x:i*P,y:u*P},F=R.x*R.y;return Math.abs(F-N.x*N.y)/F<.1?R:N}function v(t,e=.01){return(0,r.bq)(t)?e/(0,r.bq)(t):0}function A(t,e,n=null,s=!0){const r=t.spatialReference;if(r.equals(e))return t;a(r,e,n);const i=(0,o.K)(t,e,n);return s&&i&&T([t],[i],r,e),i}function T(t,e,n,s){const r=E(n,!0),o=E(s,!0),i=v(n,d),a=v(s,d);if(i&&null!=r&&null!=o)for(let u=0;u<t.length;u++){const n=e[u];if(!n)continue;const{x:s}=t[u],{x:l}=n;l>=o[1]-a&&Math.abs(s-r[0])<i?n.x-=o[1]-o[0]:l<=o[0]+a&&Math.abs(s-r[1])<i&&(n.x+=o[1]-o[0])}}function P(t){const{inSR:e,outSR:n,datumTransformation:s,preferPE:r}=t;if(e.equals(n)){const{points:e}=I(t,null);return e}return e.isWebMercator&&n.isWGS84||e.isWGS84&&n.isWebMercator?F(t):a(e,n,s)&&r&&(e.isGeographic||null!=C(e))?N(t):R(t)}function R(t){const{points:e}=I(t,null),{inSR:n,outSR:s,datumTransformation:i}=t,a=e.map((t=>new r.bv(t[0],t[1],n))),u=(0,o.K)(a,s,i);return i&&T(a,u,n,s),u.map((t=>t?[t.x,t.y]:[NaN,NaN]))}function N(t){const{inSR:e,outSR:n,datumTransformation:s}=t,o=C(e),{points:i,mask:a}=I(t,o);if(!e.isGeographic){const t=e.wkid?r.cq.coordsys(e.wkid):r.cq.fromString(e.isGeographic?r.cr.PE_TYPE_GEOGCS:r.cr.PE_TYPE_PROJCS,e.wkt2||e.wkt);r.cs.projToGeog(t,i.length,i)}if(null!=s&&s.steps.length){let t;if(n.isGeographic&&(t=i.map((([t])=>t>179.9955?1:t<-179.9955?-1:0))),s.steps.forEach((t=>{const e=t.wkid?r.cq.geogtran(t.wkid):r.cq.fromString(r.cr.PE_TYPE_GEOGTRAN,t.wkt);r.ct.geogToGeog(e,i.length,i,null,t.isInverse?r.cr.PE_TRANSFORM_2_TO_1:r.cr.PE_TRANSFORM_1_TO_2)})),t)for(let e=0;e<i.length;e++){const n=t[e],s=i[e][0],r=s>179.9955?1:s<-179.9955?-1:0;n&&r&&n!==r&&(i[e][0]=n>0?s+360:s-360)}}if(!n.isGeographic){const t=C(n,!0),e=null!=t&&t.isEnvelope?[t.bbox[1],t.bbox[3]]:[-90,90];M(i,e);const s=n.wkid?r.cq.coordsys(n.wkid):r.cq.fromString(n.isGeographic?r.cr.PE_TYPE_GEOGCS:r.cr.PE_TYPE_PROJCS,n.wkt2||n.wkt);r.cs.geogToProj(s,i.length,i)}let u=i;if(a&&i.length!==a.length){u=[];for(let t=0,e=0;t<a.length;t++)a[t]?u.push(i[e++]):u.push([NaN,NaN])}return u}function F(t){const{cols:e,rows:n,xres:s,yres:i,usePixelCenter:a,inSR:u,outSR:l}=t;let{xmin:c,ymax:p}=t;a&&(c+=s/2,p-=i/2);const h=[],m=[],f=Math.max(e,n);for(let g=0;g<f;g++){const t=c+s*Math.min(e,g),a=p-i*Math.min(n,g),f=(0,o.K)(new r.bv({x:t,y:a,spatialReference:u}),l);g<=e&&h.push(f.x),g<=n&&m.push(f.y)}const d=[];for(let r=0;r<e;r++)for(let t=0;t<n;t++)d.push([h[r],m[t]]);return d}function C(t,e=!1){let n=t.wkid||t.wkt2||t.wkt;if(!n||t.isGeographic)return null;if(n=String(n),m.has(n)){const t=m.get(n);return e?t?.gcs:t?.pcs}const s=t.wkid?r.cq.coordsys(t.wkid):r.cq.fromString(t.isGeographic?r.cr.PE_TYPE_GEOGCS:r.cr.PE_TYPE_PROJCS,t.wkt2||t.wkt),o=S(s,v(t,1e-4)),i=S(s,0,!0);return m.set(n,{pcs:o,gcs:i}),e?i:o}function S(t,e=0,n=!1){const s=r.cu.generate(t),o=n?t.horizonGcsGenerate():t.horizonPcsGenerate();if(!s||!o?.length)return null;let i=!1,a=o.find((t=>1===t.getInclusive()&&1===t.getKind()));if(!a){if(a=o.find((t=>1===t.getInclusive()&&0===t.getKind())),!a)return null;i=!0}const u=n?0:(2===s.getNorthPoleLocation()?1:0)|(2===s.getSouthPoleLocation()?2:0),l=s.isPannableRectangle(),c=a.getCoord();if(i)return{isEnvelope:i,isPannable:l,vertices:c,coef:null,bbox:[c[0][0]-e,c[0][1]-e,c[1][0]+e,c[1][1]+e],poleLocation:u};let p=0;const h=[];let[m,f]=c[0],[d,g]=c[0];for(let r=0,y=c.length;r<y;r++){p++,p===y&&(p=0);const[t,e]=c[r],[n,s]=c[p];if(s===e)h.push([t,n,e,s,2]);else{const r=(n-t)/(s-e||1e-4),o=t-r*e;e<s?h.push([r,o,e,s,0]):h.push([r,o,s,e,1])}m=m<t?m:t,f=f<e?f:e,d=d>t?d:t,g=g>e?g:e}return{isEnvelope:!1,isPannable:l,vertices:c,coef:h,bbox:[m,f,d,g],poleLocation:u}}function I(t,e){const n=[],{cols:s,rows:r,xres:o,yres:i,usePixelCenter:a}=t;let{xmin:u,ymax:l}=t;if(a&&(u+=o/2,l-=i/2),null==e){for(let t=0;t<s;t++)for(let e=0;e<r;e++)n.push([u+o*t,l-i*e]);return{points:n}}const c=new Uint8Array(s*r);if(e.isEnvelope){const{bbox:[t,a,p,h]}=e;for(let m=0,f=0;m<s;m++){const s=u+o*m,d=e.isPannable||s>=t&&s<=p;for(let t=0;t<r;t++,f++){const e=l-i*t;d&&e>=a&&e<=h&&(n.push([s,e]),c[f]=1)}}return{points:n,mask:c}}const p=e.coef,h=[];for(let m=0;m<r;m++){const t=l-i*m,e=[],n=[];for(let r=0;r<p.length;r++){const[s,o,i,a,u]=p[r];if(t===i&&i===a)e.push(s),e.push(o),n.push(2),n.push(2);else if(t>=i&&t<=a){const r=s*t+o;e.push(r),n.push(u)}}let s=e;if(e.length>2){let t=2===n[0]?0:n[0],r=e[0];s=[];for(let o=1;o<n.length;o++)2===n[o]&&o!==n.length-1||(n[o]!==t&&(s.push(0===t?Math.min(r,e[o-1]):Math.max(r,e[o-1])),t=n[o],r=e[o]),o===n.length-1&&s.push(0===n[o]?Math.min(r,e[o]):Math.max(r,e[o])));s.sort(((t,e)=>t-e))}else e[0]>e[1]&&(s=[e[1],e[0]]);h.push(s)}for(let m=0,f=0;m<s;m++){const t=u+o*m;for(let e=0;e<r;e++,f++){const s=l-i*e,r=h[e];if(2===r.length)t>=r[0]&&t<=r[1]&&(n.push([t,s]),c[f]=1);else if(r.length>2){let e=!1;for(let n=0;n<r.length;n+=2)if(t>=r[n]&&t<=r[n+1]){e=!0;break}e&&(n.push([t,s]),c[f]=1)}}}return{points:n,mask:c}}function M(t,e){const[n,s]=e;for(let r=0;r<t.length;r++){const e=t[r][1];(e<n||e>s)&&(t[r]=[NaN,NaN])}}function _(t,e){const n=O(t[0].spatialReference);if(t.length<2||null==n||(e=e??v(t[0].spatialReference),1===(t=t.filter((t=>t.width>e))).length))return t[0];let{xmin:s,xmax:o,ymin:i,ymax:a}=t[0];for(let r=1;r<t.length;r++){const e=t[r];o=e.xmax+n*r,i=Math.min(i,e.ymin),a=Math.max(a,e.ymax)}return new r.au({xmin:s,xmax:o,ymin:i,ymax:a,spatialReference:t[0].spatialReference})}function j(t,e,n=null,i=!0){const a=t.spatialReference;if(a.equals(e))return t;const u=U(t),l=O(a,!0),c=O(e);if(0===u||null==l||null==c){const r=z(t,e,n,i);if(null==l&&null!=c&&Math.abs(r.width-c)<v(e)&&(0,o._)()){const n=C(a);if(null!=n&&n.poleLocation===s.None&&t.width<(n.bbox[2]-n.bbox[0])/2)return G(t,e)||r}return r}const p=t.clone().normalize();if(1===p.length&&t.xmax<l&&t.xmax-l/2>v(a)){const{xmin:e,xmax:n}=t;for(let s=0;s<=u;s++){const o=0===s?e:-l/2,i=s===u?n-l*s:l/2;p[s]=new r.au({xmin:o,xmax:i,ymin:t.ymin,ymax:t.ymax,spatialReference:a})}}return _(p.map((t=>z(t,e,n,i))).filter(r.bQ))}function B(t,e,n){if("extent"===t.type){const{xmin:e,ymin:n,xmax:s,ymax:o,spatialReference:i}=t;t=new r.bC({rings:[[[e,o],[s,o],[s,n],[e,n],[e,o]]],spatialReference:i})}return t.spatialReference.equals(e)?t:(a(t.spatialReference,e,n),(0,o.K)(t,e,n))}function G(t,e){const n=O(e);if(null==n)return null;let{xmin:s,ymin:i,xmax:a,ymax:u}=t;const l=t.spatialReference,c=new r.bC({spatialReference:l,rings:[[[s,i],[a,i],[a,u],[s,u],[s,i]]]}),p=(0,o.K)(c,e);if(2!==p.rings.length||!p.rings[0].length||!p.rings[1].length)return null;const{rings:h}=p,m=v(l),f=new r.au({spatialReference:e});for(let r=0;r<2;r++){s=a=h[r][0][0],i=u=h[r][0][1];for(let t=0;t<h[r].length;t++)s=s>h[r][t][0]?h[r][t][0]:s,a=a<h[r][t][0]?h[r][t][0]:a,i=i>h[r][t][1]?h[r][t][1]:i,u=u<h[r][t][1]?h[r][t][1]:u;if(0===r)f.ymin=i,f.ymax=u,f.xmin=s,f.xmax=a;else if(f.ymin=Math.min(f.ymin,i),f.ymax=Math.max(f.ymax,u),Math.abs(a-n/2)<m)f.xmin=s,f.xmax=f.xmax+n;else{if(!(Math.abs(s+n/2)<m))return null;f.xmax=a+n}}return f}function z(t,e,n=null,s=!0,i=!0){const u=t.spatialReference;if(u.equals(e)||!e)return t;a(u,e,n);const l=(0,o.K)(t,e,n);if(i&&e.isWebMercator&&l&&(l.ymax=Math.min(20037508.342787,l.ymax),l.ymin=Math.max(-20037508.342787,l.ymin),l.ymin>=l.ymax))return null;if(!s||!l)return l;const c=E(u,!0),p=E(e,!0);if(null==c||null==p)return l;const h=v(u,.001),m=v(u,d),f=v(e,.001);if(Math.abs(l.xmin-p[0])<f&&Math.abs(l.xmax-p[1])<f){const s=Math.abs(t.xmin-c[0]),o=Math.abs(c[1]-t.xmax);if(s<h&&o>m){l.xmin=p[0];const s=[];s.push(new r.bv(t.xmax,t.ymin,u)),s.push(new r.bv(t.xmax,(t.ymin+t.ymax)/2,u)),s.push(new r.bv(t.xmax,t.ymax,u));const o=s.map((t=>A(t,e,n))).filter((t=>!isNaN(t?.x))).map((t=>t.x));l.xmax=Math.max.apply(null,o)}if(o<h&&s>m){l.xmax=p[1];const s=[];s.push(new r.bv(t.xmin,t.ymin,u)),s.push(new r.bv(t.xmin,(t.ymin+t.ymax)/2,u)),s.push(new r.bv(t.xmin,t.ymax,u));const o=s.map((t=>A(t,e,n))).filter((t=>!isNaN(t?.x))).map((t=>t.x));l.xmin=Math.min.apply(null,o)}}else{const t=v(e,.001);Math.abs(l.xmin-p[0])<t&&(l.xmin=p[0]),Math.abs(l.xmax-p[1])<t&&(l.xmax=p[1])}return l}function O(t,e=!1){if(!t)return null;const n=e?20037508.342787:20037508.342788905;return t.isWebMercator?2*n:t.wkid&&t.isGeographic?360:2*l[t.wkid]||null}function E(t,e=!1){if(t.isGeographic)return[-180,180];const n=O(t,e);return null!=n?[-n/2,n/2]:null}function D(t,e,n,s){let r=(t-e)/n;return r-Math.floor(r)!=0?r=Math.floor(r):s&&(r-=1),r}function U(t,e=!1){const n=O(t.spatialReference);if(null==n)return 0;const s=e?0:-n/2,r=v(t.spatialReference),o=!e&&Math.abs(t.xmax-n/2)<r?n/2:t.xmax,i=!e&&Math.abs(t.xmin+n/2)<r?-n/2:t.xmin;return D(o,s,n,!0)-D(i,s,n,!1)}function V(t){const e=t.storageInfo.origin.x,n=O(t.spatialReference,!0);if(null==n)return{originX:e,halfWorldWidth:null,pyramidsInfo:null};const s=n/2,{nativePixelSize:r,storageInfo:o,extent:i}=t,{maximumPyramidLevel:a,blockWidth:u,pyramidScalingFactor:l}=o;let c=r.x;const p=[],h=null!=t.transform&&"gcs-shift"===t.transform.type,m=e+(h?0:s),f=h?n-e:s-e;for(let d=0;d<=a;d++){const t=(i.xmax-e)/c/u,n=t-Math.floor(t)==0?t:Math.ceil(t),s=f/c/u,r=s-Math.floor(s)==0?s:Math.ceil(s),o=Math.floor(m/c/u),a=Math.round(m/c)%u,h=(u-Math.round(f/c)%u)%u;p.push({resolutionX:c,blockWidth:u,datasetColumnCount:n,worldColumnCountFromOrigin:r,leftMargin:a,rightPadding:h,originColumnOffset:o}),c*=l}return{originX:e,halfWorldWidth:s,pyramidsInfo:p,hasGCSSShiftTransform:h}}function L(t){if(!t||t.isGeographic)return t;const e=String(t.wkid||t.wkt2||t.wkt);let n;return f.has(e)?n=f.get(e):(n=(t.wkid?r.cq.coordsys(t.wkid):r.cq.fromString(r.cr.PE_TYPE_PROJCS,t.wkt2||t.wkt)).getGeogcs().getCode(),f.set(e,n)),new r.B({wkid:n})}function W(t){const e=t.isAdaptive&&null==t.spacing;let n=t.spacing||[c,c],s=q(t),r={cols:s.size[0]+1,rows:s.size[1]+1};const o=s.outofBoundPointCount>0&&s.outofBoundPointCount<s.offsets.length/2;let a=s.outofBoundPointCount===s.offsets.length/2||e&&o?[0,0]:u(s.offsets,r,n,h);const l=(a[0]+a[1])/2,m=t.projectedExtent.spatialReference,f=t.srcBufferExtent.spatialReference;if(e&&(o||l>h)&&(i(m,f,t.datumTransformation)&&(m.isGeographic||C(m)),n=[p,p],s=q({...t,spacing:n}),r={cols:s.size[0]+1,rows:s.size[1]+1},a=u(s.offsets,r,n,h)),s.error=a,n[0]>1&&(s.coefficients=H(s.offsets,r,o)),t.includeGCSGrid&&!m.isGeographic&&!m.isWebMercator)if(f.isGeographic)s.gcsGrid={offsets:s.offsets,coefficients:s.coefficients,spacing:n};else{const e=C(m);if(null!=e&&!e.isEnvelope){const e=L(m),i=j(t.projectedExtent,e),{offsets:a}=q({...t,srcBufferExtent:i,spacing:n}),u=H(a,r,o);s.gcsGrid={offsets:a,coefficients:u,spacing:n}}}return s}function q(t){const{projectedExtent:e,srcBufferExtent:n,pixelSize:s,datumTransformation:o,rasterTransform:i}=t,u=e.spatialReference,l=n.spatialReference,h=a(u,l),{xmin:m,ymin:f,xmax:g,ymax:y}=e,x=O(l),w=null!=x&&(t.hasWrapAround||"gcs-shift"===i?.type),b=t.spacing||[c,c],k=b[0]*s.x,A=b[1]*s.y,T=1===b[0],R=Math.ceil((g-m)/k-.1/b[0])+(T?0:1),N=Math.ceil((y-f)/A-.1/b[1])+(T?0:1),F=P({cols:R,rows:N,xmin:m,ymax:y,xres:k,yres:A,inSR:u,outSR:l,datumTransformation:o,preferPE:b[0]<=p,usePixelCenter:T}),S=[];let I,M=0;const _=T?-1:NaN,{xmin:j,xmax:B,ymax:G,width:z,height:E}=n,D=v(l,d),U=null!=x&&j>0&&B>x/2;let V=!1;if(h){const t=C(u);V=null!=t&&t.poleLocation>0}for(let a=0;a<R;a++){const t=[];for(let e=0;e<N;e++){let n=F[a*N+e];if(w&&n[0]>B&&n[0]>x/2-D?n[0]-=x:w&&0===a&&n[0]<0&&U&&!i&&(n[0]+=x),!n||isNaN(n[0])||isNaN(n[1]))S.push(_),S.push(_),t.push(null),M++;else{if(i){const t=i.inverseTransform(new r.bv({x:n[0],y:n[1],spatialReference:l}));n=[t.x,t.y]}t.push(n),a>0&&w&&I[e]&&n[0]<I[e][0]&&(n[0]+=x,V&&n[0]>B&&n[0]>x&&(n[0]-=x)),S.push((n[0]-j)/z),S.push((G-n[1])/E)}}I=t}return{offsets:S,error:null,coefficients:null,outofBoundPointCount:M,spacing:b,size:T?[R,N]:[R-1,N-1]}}function H(t,e,n){const{cols:s,rows:r}=e,o=new Float32Array((s-1)*(r-1)*2*6),i=new Float32Array([-0,-1,1,-1,1,-0,1,-0,-0]),a=new Float32Array([-1,1,0,0,-1,1,1,0,0]);for(let u=0;u<s-1;u++){for(let e=0;e<r-1;e++){let n=u*r*2+2*e;const l=t[n],c=t[n+1],p=t[n+2],h=t[n+3];n+=2*r;const m=t[n],f=t[n+1],d=t[n+2],g=t[n+3];let y=0,x=12*(e*(s-1)+u);for(let t=0;t<3;t++)o[x++]=i[y++]*l+i[y++]*p+i[y++]*d;y=0;for(let t=0;t<3;t++)o[x++]=i[y++]*c+i[y++]*h+i[y++]*g;y=0;for(let t=0;t<3;t++)o[x++]=a[y++]*l+a[y++]*m+a[y++]*d;y=0;for(let t=0;t<3;t++)o[x++]=a[y++]*c+a[y++]*f+a[y++]*g}if(n)for(let t=0;t<o.length;t++)isNaN(o[t])&&(o[t]=-1)}return o}function K(t,e){const n=t.clone().normalize();return 1===n.length?n[0]:_(n,e)}function J(t){const{spatialReference:e}=t,n=(0,r.bF)(e);if(!n)return t;const[s,o]=n.valid,i=o-s;let a=0;if(t.xmin<s){const e=s-t.xmin;a=Math.ceil(e/i)}else if(t.xmin>o){const e=t.xmin-o;a=-Math.ceil(e/i)}return new r.au({spatialReference:t.spatialReference,xmin:t.xmin+a*i,ymin:t.ymin,xmax:t.xmax+a*i,ymax:t.ymax})}function $(t,e,n){const{storageInfo:s,pixelSize:o}=e;let i=0,a=!1;const{pyramidResolutions:u}=s,l="mixed"===s.tileInfo.format?.toLowerCase()?Math.max(1,Math.min(3,s.tileInfo.dpi/96)):1,c=(t.x+t.y)/2/l;if(null!=u&&u.length){const t=u[u.length-1],s=(t.x+t.y)/2,l=(o.x+o.y)/2;if(c<=l)i=0;else if(c>=s)i=u.length,a=c/s>8;else{let t,e=l;for(let s=1;s<=u.length;s++){if(t=(u[s-1].x+u[s-1].y)/2,c<=t){c===t?i=s:"down"===n?(i=s-1,a=c/e>8):i="up"===n||c-e>t-c||c/e>2?s:s-1;break}e=t}}const p=0===i?o:u[i-1];return a&&Math.min(p.x,p.y)*(0,r.bq)(e.spatialReference)>19567&&(a=!1),{pyramidLevel:i,pyramidResolution:new r.bv({x:p.x,y:p.y,spatialReference:e.spatialReference}),excessiveReading:a}}const p=Math.log(t.x/o.x)/Math.LN2,h=Math.log(t.y/o.y)/Math.LN2,m=e.storageInfo.maximumPyramidLevel||0;i="down"===n?Math.floor(Math.min(p,h)):"up"===n?Math.ceil(Math.max(p,h)):Math.round((p+h)/2),i<0?i=0:i>m&&(a=i>m+3,i=m);const f=2**i;return{pyramidLevel:i,pyramidResolution:new r.bv({x:f*e.nativePixelSize.x,y:f*e.nativePixelSize.y,spatialReference:e.spatialReference}),excessiveReading:a}}function X(t,e){const{pixelSize:n,extent:s}=t,r=x(s,e,!1);return j(K(s,(n.x+n.y)/16),e,r)}function Y(t,e,n){const s=n?.tileSize,o=n?.alignGlobalDatasetWithAGOL,{extent:i,spatialReference:a,pixelSize:u}=t,l=k(u,e,i);if(null==l)return{projectedPixelSize:null,scales:null,srcResolutions:null,isCustomTilingScheme:!1};const c=(l.x+l.y)/2,p=(0,r.bq)(e),h=c*p*96*39.37,m=e.isGeographic?256/s*295828763.7958547:256/s*591657527.591555;let f="vector-magdir"===t.dataType||"vector-uv"===t.dataType;const d=X(t,e),g=Math.min(Math.ceil(Math.log(Math.min(t.width,t.height)/32)/Math.LN2),Math.ceil(Math.log(m/2/h)/Math.LN2));if(!f&&o&&(e.isGeographic||e.isWebMercator)){const n=O(e);if(f=U(d)>0||null!=n&&d.width>n/4,!f&&null!=n){let e=-1;if(g<3)e=2**g*c*s;else if(t.storageInfo){const{maximumPyramidLevel:n=0,pyramidScalingFactor:r=2}=t.storageInfo;e=r**n*c*s}const r=Math.ceil(n/e);f=1===r||2===r&&n/2-d.xmax<e}}let y,x=h;const w=1.001,b=Math.min(2,Math.max(1.414,t.storageInfo?.pyramidScalingFactor||2));if(f){x=m;const n=e.isGeographic?1341104507446289e-21:.29858214164761665,s=n*(96*p*39.37),o=e.isGeographic?4326:3857;y=k({x:n,y:n},a,X(t,new r.B({wkid:o}))),y.x*=x/s,y.y*=x/s}else{y={x:u.x,y:u.y};let t=0;for(;x<m*(w/2)&&t<g;)t++,x*=b,y.x*=b,y.y*=b;Math.max(x,m)/Math.min(x,m)<=w&&(x=m)}const v=[x],A=[{x:y.x,y:y.y}],T=70.5310735,P=Math.min(T,h)/w;for(;x>=P;)x/=b,y.x/=b,y.y/=b,v.push(x),A.push({x:y.x,y:y.y});return{projectedPixelSize:l,scales:v,srcResolutions:A,isCustomTilingScheme:!f}}}}]);
//# sourceMappingURL=1279.78e73591.js.map