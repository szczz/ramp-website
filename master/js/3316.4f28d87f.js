"use strict";(self["webpackChunkramp_website"]=self["webpackChunkramp_website"]||[]).push([[3316],{13316:function(e,r,a){a.r(r),a.d(r,{default:function(){return o}});var i=a(98503);class t extends i.F{toggleWizard(e){const r=this.$iApi.panel.get("wizard");this.$iApi.panel.toggle(r,e)}}class l extends i.gk{layerCount=0;sublayerCount=0;constructor(e){super(e)}async fetchFileInfo(e,r,a){switch(a||(a=await this.$iApi.geo.layer.files.fetchFileData(e,r)),r){case i.ga.GEOJSON:return this.getGeojsonInfo(e,a);case i.ga.SHAPEFILE:return this.getShapfileInfo(e,a);case i.ga.CSV:return this.getCsvInfo(e,a);default:console.error(`Unsupported file type passed to fetchFileInfo - '${r}'`)}}async getGeojsonInfo(e,r){return r instanceof ArrayBuffer&&(r=JSON.parse(new TextDecoder("utf-8").decode(new Uint8Array(r)))),{config:{id:"geojson#"+ ++this.layerCount,layerType:i.ga.GEOJSON,url:e,name:e.substring(e.lastIndexOf("/")+1),state:{opacity:1,visibility:!0},rawData:r},fields:[{name:"OBJECTID",type:"oid"}].concat(this.$iApi.geo.layer.files.extractGeoJsonFields(r)),configOptions:["name","nameField","tooltipField","colour"]}}async getCsvInfo(e,r){return r instanceof ArrayBuffer&&(r=new TextDecoder("utf-8").decode(new Uint8Array(r))),{config:{id:"csv#"+ ++this.layerCount,layerType:i.ga.CSV,url:e,name:e.substring(e.lastIndexOf("/")+1),state:{opacity:1,visibility:!0},rawData:r},fields:[{name:"OBJECTID",type:"oid"}].concat(this.$iApi.geo.layer.files.extractCsvFields(r)),latLonFields:this.$iApi.geo.layer.files.filterCsvLatLonFields(r),configOptions:["name","nameField","tooltipField","latField","longField","colour"]}}async getShapfileInfo(e,r){const a=await this.$iApi.geo.layer.files.shapefileToGeoJson(r);return this.getGeojsonInfo(e,a)}async fetchServiceInfo(e,r,a){switch(r){case i.ga.FEATURE:return this.getFeatureInfo(e);case i.ga.MAPIMAGE:return this.getMapImageInfo(e,a);case i.ga.TILE:return this.getTileInfo(e);case i.ga.IMAGERY:return this.getImageryInfo(e);case i.ga.WFS:return this.getWfsInfo(e);case i.ga.WMS:return this.getWmsInfo(e,a)}}async getFeatureInfo(e){const r=await i.gl.get(e,{params:{f:"json"}});return{config:{id:`${i.ga.FEATURE}#${++this.layerCount}`,url:e,layerType:i.ga.FEATURE,name:r.data.name,nameField:r.data.displayField,tooltipField:r.data.displayField,state:{opacity:1,visibility:!0}},fields:r.data.fields,configOptions:["name","nameField","tooltipField"]}}async getMapImageInfo(e,r){const a=await i.gl.get(e,{params:{f:"json"}});return{config:{id:`${i.ga.MAPIMAGE}#${++this.layerCount}`,url:e,layerType:i.ga.MAPIMAGE,name:a.data.mapName,sublayers:[],state:{opacity:1,visibility:!0}},layers:this.createLayerHierarchy(a.data.layers,r),configOptions:["name","sublayers"],layersRaw:a.data.layers}}createLayerHierarchy(e,r){e.sort(((e,r)=>e.id-r.id));const a=(e,r)=>{if(void 0===r)return!1;let i;if(r.find((r=>r.id===e)))return r.find((r=>r.id===e));for(const t of r)if(i=a(e,t.children),!1!==i)return i;return!1},i=[],t=new Set(e.filter((e=>e.subLayerIds&&e.subLayerIds.length>0)).map((e=>e.id)));for(const l of e)if(r&&-1===l.parentLayerId)i.push({id:l.id,label:l.name,children:l.subLayerIds?[]:void 0});else if(r){const e=a(l.parentLayerId,i);e.children=[...e.children,{id:l.id,label:l.name,children:l.subLayerIds?[]:void 0}]}else t.has(l.id)||i.push({id:l.id,label:l.name,children:void 0});return i}async getTileInfo(e){const r=await i.gl.get(e,{params:{f:"json"}});return{config:{id:`${i.ga.TILE}#${++this.layerCount}`,url:e,layerType:i.ga.TILE,name:r.data.mapName,state:{opacity:1,visibility:!0}},configOptions:["name"]}}async getImageryInfo(e){const r=await i.gl.get(e,{params:{f:"json"}});return{config:{id:`${i.ga.IMAGERY}#${++this.layerCount}`,url:e,layerType:i.ga.IMAGERY,name:r.data.name,state:{opacity:1,visibility:!0}},configOptions:["name"]}}async getWfsInfo(e){const r=new i.gm(e),{offset:a,limit:t}=r.queryMap,l=await this.$iApi.geo.layer.ogc.loadWfsData(e,-1,parseInt(a)||0,parseInt(t)||1e3);return this.getGeojsonInfo(e.match(/\/([^/]+)\/items/)?.[1]||"Layer",l)}async getWmsInfo(e,r){const a=await this.$iApi.geo.layer.ogc.parseCapabilities(e);return{config:{id:`${i.ga.WMS}#${++this.layerCount}`,url:e,layerType:i.ga.WMS,name:e,featureInfoMimeType:a.queryTypes[0],state:{opacity:1,visibility:!0}},layers:this.mapWmsLayerList(a.layers,r),configOptions:["name","sublayers"],layersRaw:a.layers}}mapWmsLayerList(e,r){let a=[];return e.forEach((e=>{null===e.name&&e.layers?a=[...a,...e.layers]:a.push(e)})),r?a.flatMap((e=>({id:`${e.name}#${++this.sublayerCount}`,label:e.title,children:e.layers.length>0?this.mapWmsLayerList(e.layers,r):void 0}))):a.flatMap((e=>e.layers&&e.layers.length>0?this.mapWmsLayerList(e.layers,r):{id:`${e.name}#${++this.sublayerCount}`,label:e.title}))}guessFormatFromURL(e){switch(e.match(/\.(zip|csv|geojson|json)$/)?.[1]){case"zip":return i.ga.SHAPEFILE;case"csv":return i.ga.CSV;case"geojson":case"json":return i.ga.GEOJSON}return e.match(/\/ImageServer\/?$/gi)?i.ga.IMAGERY:e.match(/\/collections\//gi)?i.ga.WFS:e.match(/arcgis\/rest\/services\//gi)?e.match(/\/\d+\/?$/g)?i.ga.FEATURE:i.ga.MAPIMAGE:e.match(/service=|version=|\/wms/gi)?i.ga.WMS:""}}const s={en:{"wizard.title":"Import Layer","wizard.upload.title":"Upload data","wizard.upload.or":"or","wizard.upload.file.label":"Upload a file","wizard.upload.file.help":"Drop or select a file to upload","wizard.upload.file.error.failed":"File upload failed","wizard.upload.url.label":"URL to file or service","wizard.upload.url.error.required":"URL is required","wizard.upload.url.error.url":"Please enter a valid URL","wizard.format.title":"Select format","wizard.format.type.service":"Service type","wizard.format.type.file":"File format","wizard.format.type.error.required":"Service or file type is required","wizard.format.type.error.invalid":"Invalid file or service type","wizard.format.type.error.failure":"Failed to load data from file/service","wizard.format.info.cors":"Service needs to be CORS enabled","wizard.format.warn.cors":"Service may not support CORS","wizard.format.warn.vpn":"Service may require a VPN connection","wizard.fileType.csv":"CSV","wizard.fileType.shapefile":"zipped Shapefile","wizard.fileType.geojson":"GeoJSON","wizard.layerType.esriFeature":"ESRI Feature Layer","wizard.layerType.esriMapImage":"ESRI Map Image Layer","wizard.layerType.esriImagery":"ESRI Imagery Layer","wizard.layerType.esriTile":"ESRI Tile Layer","wizard.layerType.ogcWms":"OGC Web Map Service","wizard.layerType.ogcWfs":"OGC Web Feature Service","wizard.configure.title":"Configure layer","wizard.configure.name.error.required":"Name is required","wizard.configure.name.label":"Layer Name","wizard.configure.nameField.label":"Primary Field","wizard.configure.tooltipField.label":"Tooltip Field","wizard.configure.latField.label":"Latitude Field","wizard.configure.longField.label":"Longitude Field","wizard.configure.sublayers.error.required":"Sublayers are required","wizard.configure.sublayers.label":"Layers","wizard.configure.sublayers.results":"No results","wizard.configure.sublayers.search":"Search layers","wizard.configure.sublayers.select":"Select layer(s)","wizard.configure.sublayers.clearAll":"Clear all","wizard.configure.sublayers.nested":"Nested","wizard.configure.colour.label":"Colour","wizard.configure.colour.hue":"Hue","wizard.configure.colour.copy":"Copy colour","wizard.configure.colour.hex":"Hex","wizard.step.cancel":"Cancel","wizard.step.continue":"Continue","wizard.upload.success":"has been uploaded successfully.","wizard.upload.fail":"failed to upload."},fr:{"wizard.title":"Importer un fichier","wizard.upload.title":"Charger des données","wizard.upload.or":"ou","wizard.upload.file.label":"Télécharger un fichier","wizard.upload.file.help":"Déposer ou sélectionner un fichier à télécharger","wizard.upload.file.error.failed":"Le téléchargement du fichier a échoué","wizard.upload.url.label":"URL vers fichier ou service","wizard.upload.url.error.required":"L'URL est requise","wizard.upload.url.error.url":"Veuillez saisir une adresse URL valide","wizard.format.title":"Choisir un format","wizard.format.type.service":"Type de service","wizard.format.type.file":"Format du fichier","wizard.format.type.error.required":"Le service ou le type de fichier est requis","wizard.format.type.error.invalid":"Type de fichier ou de service non valide","wizard.format.type.error.failure":"Échec du chargement des données à partir du fichier/service","wizard.format.info.cors":"Le service doit être compatible CORS.","wizard.format.warn.cors":"Le service ne pend peut-être pas en charge CORS.","wizard.format.warn.vpn":"Le service peut nécessiter une connexion RPV","wizard.fileType.csv":"CSV","wizard.fileType.shapefile":"Shapefile zippé","wizard.fileType.geojson":"GeoJSON","wizard.layerType.esriFeature":"Couche d'éléments d'ESRI","wizard.layerType.esriMapImage":"Couche d'image de la carte ESRI","wizard.layerType.esriImagery":"Couche d'imagerie d'ESRI","wizard.layerType.esriTile":"Couche de tuiles d'ESRI","wizard.layerType.ogcWms":"Couche WMS de l'OGC","wizard.layerType.ogcWfs":"Service d'entités Web OGC","wizard.configure.title":"Configurer la couche","wizard.configure.name.error.required":"Le champ Nom est obligatoire","wizard.configure.name.label":"Nom de la couche","wizard.configure.nameField.label":"Champ clé","wizard.configure.tooltipField.label":"Champ infobulle","wizard.configure.latField.label":"Champ latitude","wizard.configure.longField.label":"Champ longitude","wizard.configure.sublayers.error.required":"Des sous-couches sont requises","wizard.configure.sublayers.label":"Couches","wizard.configure.sublayers.results":"Aucun résultat","wizard.configure.sublayers.search":"Rechercher des couches","wizard.configure.sublayers.select":"Sélectionner les couches","wizard.configure.sublayers.clearAll":"Effacer tout","wizard.configure.sublayers.nested":"Imbriquées","wizard.configure.colour.label":"Couleur","wizard.configure.colour.hue":"Teinte","wizard.configure.colour.copy":"Copier la couleur","wizard.configure.colour.hex":"Hex","wizard.step.cancel":"Annuler","wizard.step.continue":"Continuer","wizard.upload.success":"a été téléversé avec succès.","wizard.upload.fail":"n'a pas pu être téléversé."}};class o extends t{added(){this.$iApi.panel.register({wizard:{screens:{"wizard-screen":()=>(0,i.f6)(a.e(4436).then(a.bind(a,14436)))},button:{tooltip:"wizard.title",icon:'<svg class="fill-current" viewBox="0 0 23 21"><path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"></path></svg>'},style:{width:"350px"},alertName:"wizard.title"}},{i18n:{messages:s}}),this.handlePanelTeleports(["wizard"]);let e=new l(this.$iApi);const r=(0,i.gn)(this.$vApp.$pinia);r.layerSource=e,this.removed=()=>{this.$iApi.panel.remove("wizard"),e=void 0,r.$reset()}}}}}]);
//# sourceMappingURL=3316.4f28d87f.js.map