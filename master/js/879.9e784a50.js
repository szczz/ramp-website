"use strict";(self["webpackChunkramp_website"]=self["webpackChunkramp_website"]||[]).push([[879],{40879:function(t,e,n){n.d(e,{A:function(){return L},B:function(){return b},C:function(){return D},D:function(){return tt},E:function(){return Q},F:function(){return R},G:function(){return B},H:function(){return F},M:function(){return E},R:function(){return Z},S:function(){return Tt},T:function(){return W},U:function(){return G},W:function(){return K},_:function(){return Ut},a:function(){return Et},b:function(){return Pt},c:function(){return g},d:function(){return h},e:function(){return lt},f:function(){return ut},g:function(){return k},h:function(){return rt},i:function(){return l},j:function(){return a},k:function(){return T},l:function(){return ot},m:function(){return ft},n:function(){return S},o:function(){return v},p:function(){return ct},q:function(){return I},r:function(){return P},s:function(){return St},t:function(){return f},u:function(){return ht},v:function(){return c},w:function(){return u},x:function(){return U},y:function(){return A},z:function(){return M}});var i=n(98503);let l=class{constructor(t=null,e=null,n=null){this.minValue=t,this.maxValue=e,this.noDataValue=n}};const r=9999999e31,s=2e-7,o={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function a(t){return o[t]??[-34028234663852886e22,34028234663852886e22]}function h(t,e){return null==t||null==e?"s32":t<0?t>=-128&&e<128?"s8":t>=-32768&&e<32768?"s16":"s32":e<256?"u8":e<65536?"u16":"u32"}function u(t){return(t?.startsWith("s")||t?.startsWith("u"))??!1}function c(t,e,n,i){let[l,r]=a(n);const s=u(n);return s&&(l-=1e-5,r+=1e-5),s?n.startsWith("u")?p(t,e,i,[l,r]):d(t,e,i,[l,r]):m(t,e,i,[l,r])}function f(t,e){for(let n=0;n<e.length;n++)e[n]&&isNaN(t[n])&&(e[n]=0,t[n]=0)}function p(t,e,n,i){const[l,r]=i;for(let s=0;s<e.length;s++)if(e[s]){const i=t[s];i<l||i>r?e[s]=0:n[s]=i+.5|0}}function d(t,e,n,i){const[l,r]=i;for(let s=0;s<e.length;s++)if(e[s]){const i=t[s];i<l||i>r?e[s]=0:n[s]=i+(i>0?.5:-.5)|0}}function m(t,e,n,i){const[l,r]=i;for(let s=0;s<e.length;s++)if(e[s]){const i=t[s];i<l||i>r?e[s]=0:n[s]=i}}function g(t,e,n){if(t.depthCount&&t.depthCount>1)return;const{pixels:i,statistics:l,pixelType:o}=t,h=i[0].length,u=t.bandMasks??[],c=t.mask??new Uint8Array(h).fill(255),f="f32"===o||"f64"===o,p=a(o);let d=!1;for(let a=0;a<i.length;a++){const t="number"==typeof e?e:e[a];if(null==t)continue;const h=l?.[a]?.minValue??p[0],m=l?.[a]?.maxValue??p[1];if(h>t+Number.EPSILON||m<t-Number.EPSILON)continue;const g=u[a]||c.slice(),x=i[a],w=n?.customFloatTolerance;if(f&&0!==w){let e=w;e||(e=Math.abs(t)>=r?s*Math.abs(t):"f32"===o?2**-23:Number.EPSILON);for(let n=0;n<x.length;n++)g[n]&&Math.abs(x[n]-t)<e&&(x[n]=0,g[n]=0,c[n]=0,d=!0)}else for(let e=0;e<x.length;e++)g[e]&&x[e]===t&&(x[e]=0,g[e]=0,c[e]=0,d=!0);u[a]=g}d&&(t.bandMasks=t.bandMasks||t.pixels.length>1?u:null,t.mask=c),d&&"updateStatistics"in t&&t.updateStatistics()}var x;let w=x=class extends i.v{static createEmptyBand(t,e){return new(x.getPixelArrayConstructor(t))(e)}static combineBandMasks(t){if(t.length<2)return t[0];const e=t[0].length,n=new Uint8Array(e).fill(255);for(let i=0;i<t.length;i++){const l=t[i];for(let t=0;t<e;t++)l[t]||(n[t]=0)}return n}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){return this.pixels?.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new i.s("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new l)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map((t=>y(t,this.mask)));const t=this.mask;let e=0;if(null!=t)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t||!this.pixels)return;const[e,n]=a(t),i=this.pixels,l=this.width*this.height,r=i.length;let s,o,h;const u=[];for(let a=0;a<r;a++){h=x.createEmptyBand(t,l),s=i[a];for(let t=0;t<l;t++)o=s[t],h[t]=o>n?n:o<e?e:o;u.push(h)}this.pixels=u,this.pixelType=t}extractBands(t){const{pixels:e,statistics:n}=this;if(null==t||0===t.length||!e||0===e.length)return this;const i=e.length,l=t.some((t=>t>=e.length)),r=i===t.length&&!t.some(((t,e)=>t!==e));if(l||r)return this;const s=this.bandMasks?.length===i?t.map((t=>this.bandMasks[t])):void 0;let{mask:o,validPixelCount:a}=this;const{width:h,height:u}=this;return s?.length&&(o=x.combineBandMasks(s),a=o.filter((t=>!!t)).length),new x({pixelType:this.pixelType,width:h,height:u,mask:o,bandMasks:s,validPixelCount:a,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>e[t])),statistics:n&&t.map((t=>n[t]))})}clone(){const t=new x({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;null!=this.mask&&(t.mask=new Uint8Array(this.mask)),this.bandMasks&&(t.bandMasks=this.bandMasks.map((t=>new Uint8Array(t))));const n=x.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const i=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=i?this.pixels[e].slice():new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=(0,i.f)(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:l,pixels:r}=this;if(!t||!r?.length)return void i.n.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let s,o,a,h;s=o=a=r[0],r.length>=3?(o=r[1],a=r[2]):2===r.length&&(o=r[1]);const u=new Uint32Array(t),c=this.width*this.height;if(s.length===c)if(null!=e&&e.length===c)if(n)for(h=0;h<c;h++){const t=e[h];if(t){const e=t/255;u[h]=l?t<<24|a[h]*e<<16|o[h]*e<<8|s[h]*e:t<<24|a[h]<<16|o[h]<<8|s[h]}}else for(h=0;h<c;h++)e[h]&&(u[h]=255<<24|a[h]<<16|o[h]<<8|s[h]);else for(h=0;h<c;h++)u[h]=255<<24|a[h]<<16|o[h]<<8|s[h];else i.n.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:l}=this;if(!t||!e?.length)return void i.n.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const r=this.pixelType;let s=1,o=0,a=1;if(l&&l.length>0){for(const t of l)if(null!=t.minValue&&(o=Math.min(o,t.minValue)),null!=t.maxValue&&null!=t.minValue){const e=t.maxValue-t.minValue;a=Math.max(a,e)}s=255/a}else{let t=255;"s8"===r?(o=-128,t=127):"u16"===r?t=65535:"s16"===r?(o=-32768,t=32767):"u32"===r?t=4294967295:"s32"===r?(o=-2147483648,t=2147483647):"f32"===r?(o=-34e38,t=34e38):"f64"===r&&(o=-Number.MAX_VALUE,t=Number.MAX_VALUE),s=255/(t-o)}const h=new Uint32Array(t),u=this.width*this.height;let c,f,p,d,m;if(c=f=p=e[0],c.length!==u)return i.n.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(f=e[1],e.length>=3&&(p=e[2]),null!=n&&n.length===u)for(d=0;d<u;d++)n[d]&&(h[d]=255<<24|(p[d]-o)*s<<16|(f[d]-o)*s<<8|(c[d]-o)*s);else for(d=0;d<u;d++)h[d]=255<<24|(p[d]-o)*s<<16|(f[d]-o)*s<<8|(c[d]-o)*s;else if(null!=n&&n.length===u)for(d=0;d<u;d++)m=(c[d]-o)*s,n[d]&&(h[d]=255<<24|m<<16|m<<8|m);else for(d=0;d<u;d++)m=(c[d]-o)*s,h[d]=255<<24|m<<16|m<<8|m}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!e?.length)return i.n.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let l,r,s,o;l=r=s=e[0],e.length>=3?(r=e[1],s=e[2]):2===e.length&&(r=e[1]);const a=this.width*this.height;if(l.length!==a)return i.n.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let h=0;if(null!=n&&n.length===a)for(o=0;o<a;o++)t[h++]=l[o],t[h++]=r[o],t[h++]=s[o],t[h++]=1&n[o];else for(o=0;o<a;o++)t[h++]=l[o],t[h++]=r[o],t[h++]=s[o],t[h++]=1}};function y(t,e){let n=1/0,i=-1/0;const r=t.length;let s,o=0;if(null!=e)for(s=0;s<r;s++)e[s]&&(o=t[s],n=o<n?o:n,i=o>i?o:i);else for(s=0;s<r;s++)o=t[s],n=o<n?o:n,i=o>i?o:i;return new l(n,i)}(0,i.k)([(0,i.o)({json:{write:!0}})],w.prototype,"width",void 0),(0,i.k)([(0,i.o)({json:{write:!0}})],w.prototype,"height",void 0),(0,i.k)([(0,i.o)({json:{write:!0}})],w.prototype,"pixelType",void 0),(0,i.k)([(0,i.by)("pixelType")],w.prototype,"castPixelType",null),(0,i.k)([(0,i.o)({json:{write:!0}})],w.prototype,"validPixelCount",void 0),(0,i.k)([(0,i.o)({json:{write:!0}})],w.prototype,"mask",void 0),(0,i.k)([(0,i.o)({json:{write:!0}})],w.prototype,"maskIsAlpha",void 0),(0,i.k)([(0,i.o)({json:{write:!0}})],w.prototype,"pixels",void 0),(0,i.k)([(0,i.o)()],w.prototype,"premultiplyAlpha",void 0),(0,i.k)([(0,i.o)({json:{write:!0}})],w.prototype,"statistics",void 0),(0,i.k)([(0,i.o)({json:{write:!0}})],w.prototype,"depthCount",void 0),(0,i.k)([(0,i.o)({json:{write:!0}})],w.prototype,"noDataValues",void 0),(0,i.k)([(0,i.o)({json:{write:!0}})],w.prototype,"bandMasks",void 0),w=x=(0,i.k)([(0,i.A)("esri.layers.support.PixelBlock")],w);const k=w;var M,A;(function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"})(M||(M={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(A||(A={}));const b=6;function v(t){return null!=t&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function U(t){if(!t?.length||t.some((t=>!v(t))))return null;if(1===t.length)return t[0]?.clone()??null;const e=t,{width:n,height:i,pixelType:l}=e[0];if(e.some((t=>t.width!==n||t.height!==i)))return null;const r=e.map((({mask:t})=>t)).filter((t=>null!=t));let s=null;r.length&&(s=new Uint8Array(n*i),s.set(r[0]),r.length>1&&_(r.slice(1),s));const o=[];e.forEach((({pixels:t})=>o.push(...t)));const a=e.map((({statistics:t})=>t)).filter((t=>t?.length)),h=[];return a.forEach((t=>h.push(...t))),new k({pixelType:l,width:n,height:i,mask:s,pixels:o,statistics:h.length?h:null})}function P(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let i=0;n[0][0]<0&&(i=n[0][0]);const l=Math.max(256,n[n.length-1][0]-i+1),r=new Uint8Array(4*l),s=[];let o,a=0,h=0;const u=5===n[0].length;if(l>65536)return n.forEach((t=>{s[t[0]-i]=u?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:s,offset:i,alphaSpecified:u};if(t.fillUnspecified)for(o=n[h],a=o[0]-i;a<l;a++)r[4*a]=o[1],r[4*a+1]=o[2],r[4*a+2]=o[3],r[4*a+3]=u?o[4]:255,a===o[0]-i&&(o=h===n.length-1?o:n[++h]);else for(a=0;a<n.length;a++)o=n[a],h=4*(o[0]-i),r[h]=o[1],r[h+1]=o[2],r[h+2]=o[3],r[h+3]=u?o[4]:255;return{indexedColormap:r,offset:i,alphaSpecified:u}}function T(t,e){if(!v(t)||!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),i=n.pixels;let l=n.mask;const r=n.width*n.height;if(1!==i.length)return t;const{indexedColormap:s,indexed2DColormap:o,offset:a,alphaSpecified:h}=e;let u=0;const c=i[0],f=new Uint8Array(c.length),p=new Uint8Array(c.length),d=new Uint8Array(c.length);let m,g=0;if(s){const t=s.length-1;if(null!=l)for(u=0;u<r;u++)l[u]&&(g=4*(c[u]-a),g<a||g>t?l[u]=0:(f[u]=s[g],p[u]=s[g+1],d[u]=s[g+2],l[u]=s[g+3]));else{for(l=new Uint8Array(r),u=0;u<r;u++)g=4*(c[u]-a),g<a||g>t?l[u]=0:(f[u]=s[g],p[u]=s[g+1],d[u]=s[g+2],l[u]=s[g+3]);n.mask=l}}else if(o)if(null!=l)for(u=0;u<r;u++)l[u]&&(m=o[c[u]],f[u]=m[0],p[u]=m[1],d[u]=m[2],l[u]=m[3]);else{for(l=new Uint8Array(r),u=0;u<r;u++)m=o[c[u]],f[u]=m[0],p[u]=m[1],d[u]=m[2],l[u]=m[3];n.mask=l}return n.pixels=[f,p,d],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=h,n}function I(t,e){if(!v(t))return null;const{pixels:n,mask:i}=t,l=n.length;let r=e.lut;const{offset:s}=e;r&&1===r[0].length&&(r=n.map((()=>r)));const o=[],a=e.outputPixelType||"u8";for(let u=0;u<l;u++){const t=B(n[u],i,r[u],s||0,a);o.push(t)}const h=new k({width:t.width,height:t.height,pixels:o,mask:i,pixelType:a});return h.updateStatistics(),h}function B(t,e,n,i,l){const r=t.length,s=k.createEmptyBand(l,r);if(e)for(let o=0;o<r;o++)e[o]&&(s[o]=n[t[o]-i]);else for(let o=0;o<r;o++)s[o]=n[t[o]-i];return s}function S(t,e){if(!v(t))return null;const n=t.clone(),{pixels:i}=n,l=n.width*n.height,r=e.length,s=Math.floor(r/2),o=e[Math.floor(s)],a=i[0];let h,u,c,f,p,d,m=!1;const g=new Uint8Array(l),x=new Uint8Array(l),w=new Uint8Array(l);let y=n.mask;const k=4===e[0].mappedColor.length;for(y||(y=new Uint8Array(l),y.fill(k?255:1),n.mask=y),p=0;p<l;p++)if(y[p]){for(h=a[p],m=!1,d=s,u=o,c=0,f=r-1;f-c>1;){if(h===u.value){m=!0;break}h>u.value?c=d:f=d,d=Math.floor((c+f)/2),u=e[Math.floor(d)]}m||(h===e[c].value?(u=e[c],m=!0):h===e[f].value?(u=e[f],m=!0):h<e[c].value?(m=!1,u=null):h>e[c].value&&(h<e[f].value?(u=e[c],m=!0):f===r-1?(m=!1,u=null):(u=e[f],m=!0))),m?(g[p]=u.mappedColor[0],x[p]=u.mappedColor[1],w[p]=u.mappedColor[2],y[p]=u.mappedColor[3]):g[p]=x[p]=w[p]=y[p]=0}return n.pixels=[g,x,w],n.mask=y,n.pixelType="u8",n.maskIsAlpha=k,n}function F(t,e){if(!v(t))return null;const{width:n,height:i}=t,{inputRanges:l,outputValues:r,outputPixelType:s,noDataRanges:o,allowUnmatched:h,isLastInputRangeInclusive:u}=e,c=t.pixels[0],f=k.createEmptyBand(s,c.length),p=t.mask,d=new Uint8Array(n*i);p?d.set(p):d.fill(255);const m=t.pixelType.startsWith("f")?1e-6:0,g=l.map((t=>t-m));g[0]=l[0],g[g.length-1]=l[l.length-1]+(u?1e-6:0);const x=l.length/2,[w,y]=a(s);for(let a=0;a<i;a++)for(let t=0;t<n;t++){const e=a*n+t;if(d[e]){const t=c[e];let n=!1;for(let i=x-1;i>=0;i--)if(t===g[2*i]||t>g[2*i]&&t<g[2*i+1]){f[e]=r[i],n=!0;break}n||(h?f[e]=t>y?y:t<w?w:t:d[e]=0)}}const M=o?.length;if(M)for(let a=0;a<i;a++)for(let t=0;t<n;t++){const e=a*n+t;if(!p||p[e]){const t=c[e];for(let n=0;n<M;n+=2)if(t>=o[n]&&t<=o[n+1]){f[e]=0,d[e]=0;break}}}return new k({width:n,height:i,pixelType:s,pixels:[f],mask:d})}function C(t,e,n,i){const l=null!=n&&n.length>=2?new Set(n):null,r=1===n?.length?n[0]:null,s=!!e?.length;for(let o=0;o<t.length;o++)if(i[o]){const n=t[o];if(s){let t=!1;for(let i=0;i<e.length;i+=2)if(n>=e[i]&&n<=e[i+1]){t=!0;break}t||(i[o]=0)}i[o]&&(n===r||l?.has(n))&&(i[o]=0)}}function V(t,e){const n=t[0].length;for(let i=0;i<n;i++)if(e[i]){let n=!1;for(let e=0;e<t.length;e++)if(t[e][i]){n=!0;break}n||(e[i]=0)}}function _(t,e){const n=t[0].length;for(let i=0;i<n;i++)if(e[i]){let n=!1;for(let e=0;e<t.length;e++)if(0===t[e][i]){n=!0;break}n&&(e[i]=0)}}function D(t,e){if(!v(t))return null;const{width:n,height:i,pixels:l}=t,r=n*i,s=new Uint8Array(r);t.mask?s.set(t.mask):s.fill(255);const o=l.length,{includedRanges:a,noDataValues:h,outputPixelType:u,matchAll:c,lookups:f}=e;if(f){const t=[];for(let e=0;e<o;e++){const n=f[e],i=B(l[e],s,n.lut,n.offset||0,"u8");t.push(i)}1===t.length?s.set(t[0]):c?V(t,s):_(t,s)}else if(c){const t=[];for(let e=0;e<o;e++){const n=new Uint8Array(r);n.set(s),C(l[e],a?.slice(2*e,2*e+2),h?.[e],n),t.push(n)}1===t.length?s.set(t[0]):V(t,s)}else for(let p=0;p<o;p++)C(l[p],a?.slice(2*p,2*p+2),h?.[p],s);return new k({width:n,height:i,pixelType:u,pixels:l,mask:s})}function R(t){const{srcPixelType:e,inputRanges:n,outputValues:i,allowUnmatched:l,noDataRanges:r,isLastInputRangeInclusive:s,outputPixelType:o}=t;if("u8"!==e&&"s8"!==e&&"u16"!==e&&"s16"!==e)return null;const h=e.includes("16")?65536:256,u=e.includes("s")?-h/2:0,c=k.createEmptyBand(o,h),f=new Uint8Array(h);l&&f.fill(255);const[p,d]=a(o);if(n?.length&&i?.length){const t=n.map((t=>t-1e-6));t[0]=n[0],s&&(t[t.length-1]=n[n.length-1]);for(let e=0;e<t.length;e++){const n=i[e]>d?d:i[e]<p?p:i[e],l=Math.ceil(t[2*e]-u),r=Math.floor(t[2*e+1]-u);for(let t=l;t<=r;t++)c[t]=n,f[t]=255}}if(r?.length)for(let a=0;a<r.length;a++){const t=Math.ceil(r[2*a]-u),e=Math.floor(r[2*a+1]-u);for(let n=t;n<=e;n++)f[n]=0}return{lut:c,offset:u,mask:f}}function L(t,e,n){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const i=t.includes("16")?65536:256,l=t.includes("s")?-i/2:0,r=new Uint8Array(i);if(e)for(let s=0;s<e.length;s++){const t=Math.ceil(e[2*s]-l),n=Math.floor(e[2*s+1]-l);for(let e=t;e<=n;e++)r[e]=255}else r.fill(255);if(n)for(let s=0;s<n.length;s++)r[n[s]-l]=0;return{lut:r,offset:l}}function N(t,e,n,i,l,r,s,o){return{xmin:l<=n*t?0:l<n*t+t?l-n*t:t,ymin:r<=i*e?0:r<i*e+e?r-i*e:e,xmax:l+s<=n*t?0:l+s<n*t+t?l+s-n*t:t,ymax:r+o<=i*e?0:r+o<i*e+e?r+o-i*e:e}}function E(t,e){if(!t||0===t.length)return null;const n=t.find((t=>t.pixelBlock));if(null==n?.pixelBlock)return null;const i=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,l=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,r=.01*Math.min(i,l),s=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>r?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>r?t.extent.xmin-e.extent.xmin:0)),o=Math.min.apply(null,s.map((t=>t.extent.xmin))),a=Math.min.apply(null,s.map((t=>t.extent.ymin))),h=Math.max.apply(null,s.map((t=>t.extent.xmax))),u=Math.max.apply(null,s.map((t=>t.extent.ymax))),c={x:Math.round((e.xmin-o)/i),y:Math.round((u-e.ymax)/l)},f={width:Math.round((h-o)/i),height:Math.round((u-a)/l)},p={width:Math.round((e.xmax-e.xmin)/i),height:Math.round((e.ymax-e.ymin)/l)};return Math.round(f.width/n.pixelBlock.width)*Math.round(f.height/n.pixelBlock.height)!==s.length||c.x<0||c.y<0||f.width<p.width||f.height<p.height?null:{extent:e,pixelBlock:G(s.map((t=>t.pixelBlock)),f,{clipOffset:c,clipSize:p})}}function j(t,e,n,i,l,r){const{width:s,height:o}=n.block,{x:a,y:h}=n.offset,{width:u,height:c}=n.mosaic,f=N(s,o,i,l,a,h,u,c);let p=0,d=0;if(r){const t=r.hasGCSSShiftTransform?360:r.halfWorldWidth??0,e=s*r.resolutionX,n=r.startX+i*e;n<t&&n+e>t?d=r.rightPadding:n>=t&&(p=r.leftMargin-r.rightPadding,d=0)}if(f.xmax-=d,"number"!=typeof e)for(let m=f.ymin;m<f.ymax;m++){const n=(l*o+m-h)*u+(i*s-a)+p,r=m*s;for(let i=f.xmin;i<f.xmax;i++)t[n+i]=e[r+i]}else for(let m=f.ymin;m<f.ymax;m++){const n=(l*o+m-h)*u+(i*s-a)+p;for(let i=f.xmin;i<f.xmax;i++)t[n+i]=e}}function G(t,e,n={}){const{clipOffset:i,clipSize:l,alignmentInfo:r,blockWidths:s}=n;if(s)return O(t,e,{blockWidths:s});const o=t.find((t=>v(t)));if(null==o)return null;const a=l?l.width:e.width,h=l?l.height:e.height,u=o.width,c=o.height,f=e.width/u,p=e.height/c,d={offset:i||{x:0,y:0},mosaic:l||e,block:{width:u,height:c}},m=o.pixelType,g=k.getPixelArrayConstructor(m),x=o.pixels.length,w=[];let y,M;for(let k=0;k<x;k++){M=new g(a*h);for(let e=0;e<p;e++)for(let n=0;n<f;n++){const i=t[e*f+n];v(i)&&(y=i.pixels[k],j(M,y,d,n,e,r))}w.push(M)}const A=t.some((t=>null==t||null!=t.mask&&t.mask.length>0)),b=t.some((t=>t?.bandMasks&&t.bandMasks.length>1)),U=A?new Uint8Array(a*h):void 0,P=b?[]:void 0;if(U){for(let e=0;e<p;e++)for(let n=0;n<f;n++){const i=t[e*f+n],l=null!=i?i.mask:null;j(U,l??(i?255:0),d,n,e,r)}if(P)for(let e=0;e<x;e++){const n=new Uint8Array(a*h);for(let i=0;i<p;i++)for(let l=0;l<f;l++){const s=t[i*f+l],o=s?.bandMasks?.[e]??s?.mask;j(n,o??(s?255:0),d,l,i,r)}P.push(n)}}const T=new k({width:a,height:h,pixels:w,pixelType:m,bandMasks:P,mask:U});return T.updateStatistics(),T}function O(t,e,n){const i=t.find((t=>null!=t));if(null==i)return null;const l=t.some((t=>null==t||!!t.mask)),{width:r,height:s}=e,o=l?new Uint8Array(r*s):null,{blockWidths:a}=n,h=[],u=i.getPlaneCount(),c=k.getPixelArrayConstructor(i.pixelType);if(l)for(let g=0,x=0;g<t.length;x+=a[g],g++){const e=t[g];if(!v(e))continue;const n=e.mask;for(let t=0;t<s;t++)for(let i=0;i<a[g];i++)o[t*r+i+x]=null==n?255:n[t*e.width+i]}const f=t.some((t=>t?.bandMasks&&t.bandMasks.length>1)),p=f?[]:void 0,d=r*s;for(let g=0;g<u;g++){const e=new c(d),n=f?new Uint8Array(d):void 0;for(let i=0,l=0;i<t.length;l+=a[i],i++){const o=t[i];if(!v(o))continue;const h=o.pixels[g];if(null!=h){for(let t=0;t<s;t++)for(let n=0;n<a[i];n++)e[t*r+n+l]=h[t*o.width+n];if(n){const t=o.bandMasks?.[g]??o.mask;for(let e=0;e<s;e++)for(let s=0;s<a[i];s++)n[e*r+s+l]=t?t[e*o.width+s]:255}}}h.push(e),p&&n&&p.push(n)}const m=new k({width:r,height:s,mask:o,bandMasks:p,pixels:h,pixelType:i.pixelType});return m.updateStatistics(),m}function W(t,e,n){if(!v(t))return null;const{width:i,height:l}=t,r=e.x,s=e.y,o=n.width+r,a=n.height+s;if(r<0||s<0||o>i||a>l||0===r&&0===s&&o===i&&a===l)return t;t.mask||(t.mask=new Uint8Array(i*l));const h=t.mask;for(let u=0;u<l;u++){const t=u*i;for(let e=0;e<i;e++)h[t+e]=u<s||u>=a||e<r||e>=o?0:1}return t.updateStatistics(),t}function q(t){if(!v(t))return null;const e=t.clone(),{width:n,height:i,pixels:l}=t,r=l[0],s=e.pixels[0],o=t.mask;for(let a=2;a<i-1;a++){const t=new Map;for(let i=a-2;i<a+2;i++)for(let e=0;e<4;e++){const l=i*n+e;z(t,r[l],o?o[l]:1)}s[a*n]=$(t),s[a*n+1]=s[a*n+2]=s[a*n];let e=3;for(;e<n-1;e++){let i=(a-2)*n+e+1;z(t,r[i],o?o[i]:1),i=(a-1)*n+e+1,z(t,r[i],o?o[i]:1),i=a*n+e+1,z(t,r[i],o?o[i]:1),i=(a+1)*n+e+1,z(t,r[i],o?o[i]:1),i=(a-2)*n+e-3,X(t,r[i],o?o[i]:1),i=(a-1)*n+e-3,X(t,r[i],o?o[i]:1),i=a*n+e-3,X(t,r[i],o?o[i]:1),i=(a+1)*n+e-3,X(t,r[i],o?o[i]:1),s[a*n+e]=$(t)}s[a*n+e+1]=s[a*n+e]}for(let a=0;a<n;a++)s[a]=s[n+a]=s[2*n+a],s[(i-1)*n+a]=s[(i-2)*n+a];return e.updateStatistics(),e}function $(t){if(0===t.size)return 0;let e=0,n=-1,i=0;const l=t.keys();let r=l.next();for(;!r.done;)i=t.get(r.value),i>e&&(n=r.value,e=i),r=l.next();return n}function X(t,e,n){if(0===n)return;const i=t.get(e);1===i?t.delete(e):t.set(e,i-1)}function z(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function J(t,e,n){let{x:i,y:l}=e;const{width:r,height:s}=n;if(0===i&&0===l&&s===t.height&&r===t.width)return t;const{width:o,height:a}=t,h=Math.max(0,l),u=Math.max(0,i),c=Math.min(i+r,o),f=Math.min(l+s,a);if(c<0||f<0||!v(t))return null;i=Math.max(0,-i),l=Math.max(0,-l);const{pixels:p}=t,d=r*s,m=p.length,g=[];for(let M=0;M<m;M++){const e=p[M],n=k.createEmptyBand(t.pixelType,d);for(let t=h;t<f;t++){const s=t*o;let a=(t+l-h)*r+i;for(let t=u;t<c;t++)n[a++]=e[s+t]}g.push(n)}const x=new Uint8Array(d),w=t.mask;for(let k=h;k<f;k++){const t=k*o;let e=(k+l-h)*r+i;for(let n=u;n<c;n++)x[e++]=w?w[t+n]:1}const y=new k({width:n.width,height:n.height,pixelType:t.pixelType,pixels:g,mask:x});return y.updateStatistics(),y}function H(t,e=!0){if(!v(t))return null;const{pixels:n,width:i,height:l,mask:r,pixelType:s}=t,o=[],a=Math.round(i/2),h=Math.round(l/2),u=l-1,c=i-1;for(let p=0;p<n.length;p++){const t=n[p],r=k.createEmptyBand(s,a*h);let f=0;for(let n=0;n<l;n+=2)for(let l=0;l<i;l+=2){const s=t[n*i+l];if(e){const e=l===c?s:t[n*i+l+1],o=n===u?s:t[n*i+l+i],a=l===c?o:n===u?e:t[n*i+l+i+1];r[f++]=(s+e+o+a)/4}else r[f++]=s}o.push(r)}let f=null;if(null!=r){f=new Uint8Array(a*h);let t=0;for(let n=0;n<l;n+=2)for(let l=0;l<i;l+=2){const s=r[n*i+l];if(e){const e=l===c?s:r[n*i+l+1],o=n===u?s:r[n*i+l+i],a=l===c?o:n===u?e:r[n*i+l+i+1];f[t++]=s*e*o*a?1:0}else f[t++]=s}}return new k({width:a,height:h,pixelType:s,pixels:o,mask:f})}function K(t,e,n=0,i=!0){if(!v(t))return null;const{width:l,height:r}=e;let{width:s,height:o}=t;const a=new Map,h={x:0,y:0},u=1+n;let c=t;for(let f=0;f<u;f++){const t=Math.ceil(s/l),n=Math.ceil(o/r);for(let i=0;i<n;i++){h.y=i*r;for(let n=0;n<t;n++){h.x=n*l;const t=J(c,h,e);a.set(`${f}/${i}/${n}`,t)}}f<u-1&&(c=H(c,i)),s=Math.round(s/2),o=Math.round(o/2)}return a}function Q(t){const{pixelBlock:e,tileSize:n,level:i,row:l,col:r,useBilinear:s}=t;if(!v(e))return null;const{width:o,height:a}=n,h=2**i,u=h*o,c=h*a;let f=J(e,{y:l*c,x:r*u},{width:u,height:c});if(!f)return null;for(let p=i;p>0;p--)f=H(f,s);return f}function Y(t,e,n,i,l=0){const{width:r,height:s}=t,{width:o,height:a}=e,h=i.cols,u=i.rows,c=Math.ceil(o/h-.1/h),f=Math.ceil(a/u-.1/u);let p,d,m,g,x,w,y;const k=c*h,M=k*f*u,A=new Float32Array(M),b=new Float32Array(M),v=new Uint32Array(M),U=new Uint32Array(M);let P,T,I=0;for(let B=0;B<f;B++)for(let t=0;t<c;t++){p=12*(B*c+t),d=n[p],m=n[p+1],g=n[p+2],x=n[p+3],w=n[p+4],y=n[p+5];for(let e=0;e<u;e++){I=(B*u+e)*k+t*h,T=(e+.5)/u;for(let t=0;t<e;t++)P=(t+.5)/h,A[I+t]=(d*P+m*T+g)*r+l,b[I+t]=(x*P+w*T+y)*s+l,v[I+t]=Math.floor(A[I+t]),U[I+t]=Math.floor(b[I+t])}p+=6,d=n[p],m=n[p+1],g=n[p+2],x=n[p+3],w=n[p+4],y=n[p+5];for(let e=0;e<u;e++){I=(B*u+e)*k+t*h,T=(e+.5)/u;for(let t=e;t<h;t++)P=(t+.5)/h,A[I+t]=(d*P+m*T+g)*r+l,b[I+t]=(x*P+w*T+y)*s+l,v[I+t]=Math.floor(A[I+t]),U[I+t]=Math.floor(b[I+t])}}return{offsets_x:A,offsets_y:b,offsets_xi:v,offsets_yi:U,gridWidth:k}}function Z(t,e){const{coefficients:n,spacing:i}=e,{offsets_x:l,offsets_y:r,gridWidth:s}=Y(t,t,n,{rows:i[0],cols:i[1]}),{width:o,height:a}=t,h=new Float32Array(o*a),u=180/Math.PI;for(let c=0;c<a;c++)for(let t=0;t<o;t++){const e=c*s+t,n=0===c?e:e-s,i=c===a-1?e:e+s,f=l[n]-l[i],p=r[i]-r[n];if(isNaN(f)||isNaN(p))h[c*o+t]=90;else{let e=Math.atan2(p,f)*u;e=(360+e)%360,h[c*o+t]=e}}return h}function tt(t,e,n,i,l="nearest"){if(!v(t))return null;"majority"===l&&(t=q(t));const{pixels:r,mask:s,bandMasks:o,pixelType:a}=t,h=t.width,u=t.height,c=k.getPixelArrayConstructor(a),f=r.length,{width:p,height:d}=e;let m=!1;for(let k=0;k<n.length;k+=3)-1===n[k]&&-1===n[k+1]&&-1===n[k+2]&&(m=!0);const{offsets_x:g,offsets_y:x,offsets_xi:w,offsets_yi:y,gridWidth:M}=Y({width:h,height:u},e,n,i,"majority"===l?.5:0);let A;const b=(t,e,n,i)=>{const l=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let r=0;r<d;r++){A=r*M;for(let s=0;s<p;s++){if(g[A]<0||x[A]<0)t[r*p+s]=0;else if(i)t[r*p+s]=e[w[A]+y[A]*h];else{const i=Math.floor(g[A]),o=Math.floor(x[A]),a=Math.ceil(g[A]),u=Math.ceil(x[A]),c=g[A]-i,f=x[A]-o;if(!n||n[i+o*h]&&n[a+o*h]&&n[i+u*h]&&n[a+u*h]){const n=(1-c)*e[i+o*h]+c*e[a+o*h],d=(1-c)*e[i+u*h]+c*e[a+u*h];t[r*p+s]=(1-f)*n+f*d+l}else t[r*p+s]=e[w[A]+y[A]*h]}A++}}},U=[];let P;const T=o?.length===f,I=[];for(let k=0;k<f;k++){if(T){const t=new Uint8Array(p*d);b(t,o[k],o[k],!0),I.push(t)}P=new c(p*d),b(P,r[k],T?o[k]:s,"nearest"===l||"majority"===l),U.push(P)}const B=new k({width:p,height:d,pixelType:a,pixels:U,bandMasks:T?I:void 0});if(null!=s)B.mask=new Uint8Array(p*d),b(B.mask,s,s,!0);else if(m){B.mask=new Uint8Array(p*d);for(let t=0;t<p*d;t++)B.mask[t]=g[t]<0||x[t]<0?0:1}return B.updateStatistics(),B}const et=new Map;et.set("meter-per-second",1),et.set("kilometer-per-hour",.277778),et.set("knots",.514444),et.set("feet-per-second",.3048),et.set("mile-per-hour",.44704);const nt=180/Math.PI,it=5,lt=new i.ax({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function rt(t,e){return et.get(t)/et.get(e)||1}function st(t){return(450-t)%360}function ot(t,e="geographic"){const[n,i]=t,l=Math.sqrt(n*n+i*i);let r=Math.atan2(i,n)*nt;return r=(360+r)%360,"geographic"===e&&(r=st(r)),[l,r]}function at(t,e="geographic"){let n=t[1];"geographic"===e&&(n=st(n)),n%=360;const i=t[0];return[i*Math.cos(n/nt),i*Math.sin(n/nt)]}function ht(t,e,n,i="geographic"){if(!v(t)||null==n)return t;const l="vector-magdir"===e?t.clone():ut(t,e),r=l.pixels[1];for(let s=0;s<r.length;s++)r[s]="geographic"===i?(r[s]+n[s]+270)%360:(r[s]+360-n[s])%360;return"vector-magdir"===e?l:ut(l,"vector-magdir")}function ut(t,e,n="geographic",i=1){if(!v(t))return t;const{pixels:l,width:r,height:s}=t,o=r*s,a=l[0],h=l[1],u=t.pixelType.startsWith("f")?t.pixelType:"f32",c=k.createEmptyBand(u,o),f=k.createEmptyBand(u,o);let p=0;for(let m=0;m<s;m++)for(let t=0;t<r;t++)"vector-uv"===e?([c[p],f[p]]=ot([a[p],h[p]],n),c[p]*=i):([c[p],f[p]]=at([a[p],h[p]],n),c[p]*=i,f[p]*=i),p++;const d=new k({pixelType:u,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[c,f]});return d.updateStatistics(),d}function ct(t,e,n=1){if(1===n||!v(t))return t;const i=t.clone(),{pixels:l,width:r,height:s}=i,o=l[0];l[1];let a=0;for(let h=0;h<s;h++)for(let t=0;t<r;t++)o[a]*=n,a++;return i.updateStatistics(),i}function ft(t,e,n,i,l){if(null==l||!l.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/i),height:Math.round(n/i),resolution:t.width/e};const r=l.xmin,s=l.ymax,o=(t.xmax-t.xmin)/e*i,a=(t.ymax-t.ymin)/n*i,h=(o+a)/2;return t.xmin=r+Math.floor((t.xmin-r)/o)*o,t.xmax=r+Math.ceil((t.xmax-r)/o)*o,t.ymin=s+Math.floor((t.ymin-s)/a)*a,t.ymax=s+Math.ceil((t.ymax-s)/a)*a,{extent:t,width:Math.round(t.width/o),height:Math.round(t.height/a),resolution:h}}const pt=dt(0,0,0);function dt(t=0,e=0,n=Math.PI,i=!0){i&&(n=(2*Math.PI-n)%(2*Math.PI));const l=i?-1:1,r=13*l,s=-7*l,o=-2*l,a=-16*l,h=21.75,[u,c]=gt(0,e+r,n,h),[f,p]=gt(t-5.5,e+s,n,h),[d,m]=gt(t+5.5,e+s,n,h),[g,x]=gt(t-1.5,e+o,n,h),[w,y]=gt(t+1.5,e+o,n,h),[k,M]=gt(t-1.5,e+a,n,h),[A,b]=gt(t+1.5,e+a,n,h);return[u,c,f,p,g,x,w,y,d,m,k,M,A,b]}function mt(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const i=10,l=n?-1:1,r=5*l,s=20*l,o=25*l,a=45,h=0,u=0,c=2,f=0,p=c*l,d=n?1:-1,m=i/2*d;let[g,x]=[h+m,u-s],[w,y]=[g+c*d,x],[k,M]=[w-f*d,y+p],[A,b]=[h-m,u-o],[v,U]=[A+f*d,b-p],P=Math.ceil(t/it),T=Math.floor(P/10);P-=8*T;const I=[],B=[];for(let E=0;E<P/2;E++,T--){T<=0&&P%2==1&&E===(P-1)/2&&(A=h,v=A+f*d,b=(b+x)/2,U=b-p);const[t,n]=gt(A,b,e,a);if(T>0){const[i,l]=gt(w,b,e,a),[r,s]=gt(g,x,e,a);I.push(i),I.push(l),I.push(t),I.push(n),I.push(r),I.push(s)}else{const[i,l]=gt(w,y,e,a),[r,s]=gt(k,M,e,a),[o,h]=gt(v,U,e,a);B.push(t),B.push(n),B.push(o),B.push(h),B.push(r),B.push(s),B.push(i),B.push(l)}b+=r,x+=r,y+=r,M+=r,U+=r}const[S,F]=gt(h+m,u+s,e,a),C=(i/2+c)*d,[V,_]=gt(h+C,u+s,e,a),[D,R]=gt(h+m,u-o,e,a),[L,N]=gt(h+C,u-o,e,a);return{pennants:I,barbs:B,shaft:[S,F,V,_,D,R,L,N]}}function gt(t,e,n,i=1){const l=Math.sqrt(t*t+e*e)/i,r=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[l,(2*Math.PI+r-n)%(2*Math.PI)]}const xt=[0,1,3,6,10,16,21,27,33,40,47,55,63],wt=[0,.5,1,1.5,2],yt=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function kt(t,e,n,i){const l=rt(i||"knots",n);let r;for(r=1;r<e.length;r++)if(r===e.length-1){if(t<e[r]*l)break}else if(t<=e[r]*l)break;return Math.min(r-1,e.length-2)}function Mt(t,e,n,i,l){let r=0;switch(e){case"beaufort_kn":r=kt(t,xt,"knots",n);break;case"beaufort_km":r=kt(t,xt,"kilometer-per-hour",n);break;case"beaufort_ft":r=kt(t,xt,"feet-per-second",n);break;case"beaufort_m":r=kt(t,xt,"meter-per-second",n);break;case"classified_arrow":r=kt(t,l??[],i,n);break;case"ocean_current_m":r=kt(t,wt,"meter-per-second",n);break;case"ocean_current_kn":r=kt(t,yt,"knots",n)}return r}function At(t,e){const{style:n,inputUnit:i,outputUnit:l,breakValues:r}=e,s=lt.fromJSON(i),o=lt.fromJSON(l),a=42,h=15;let u=0,c=0;const{width:f,height:p,mask:d}=t,m=t.pixels[0],g=t.pixels[1],x=null!=d?d.filter((t=>t>0)).length:f*p,w=new Float32Array(x*a),y=new Uint32Array(h*x),k=e.invertDirection?dt(0,0,0,!1):pt;for(let M=0;M<p;M++)for(let t=0;t<f;t++){const e=M*f+t;if(!d||d[M*f+t]){const i=(g[e]+360)%360/180*Math.PI,l=Mt(m[e],n,s,o,r);for(let n=0;n<k.length;n+=2)w[u++]=(t+.5)/f,w[u++]=(M+.5)/p,w[u++]=k[n],w[u++]=k[n+1]+i,w[u++]=l,w[u++]=m[e];const h=7*(u/a-1);y[c++]=h,y[c++]=h+1,y[c++]=h+2,y[c++]=h+0,y[c++]=h+4,y[c++]=h+3,y[c++]=h+0,y[c++]=h+2,y[c++]=h+3,y[c++]=h+2,y[c++]=h+5,y[c++]=h+3,y[c++]=h+5,y[c++]=h+6,y[c++]=h+3}}return{vertexData:w,indexData:y}}const bt=[];function vt(t,e){if(0===bt.length)for(let p=0;p<30;p++)bt.push(mt(5*p,0,!e.invertDirection));const n=rt(lt.fromJSON(e.inputUnit),"knots"),{width:i,height:l,mask:r}=t,s=t.pixels[0],o=t.pixels[1],a=6,h=[],u=[];let c=0,f=0;for(let p=0;p<l;p++)for(let t=0;t<i;t++){const e=p*i+t,d=s[e]*n;if((!r||r[p*i+t])&&d>=it){const n=(o[e]+360)%360/180*Math.PI,{pennants:r,barbs:s,shaft:m}=bt[Math.min(Math.floor(d/5),29)];if(r.length+s.length===0)continue;let g=h.length/a;const x=(t+.5)/i,w=(p+.5)/l;for(let t=0;t<r.length;t+=2)h[c++]=x,h[c++]=w,h[c++]=r[t],h[c++]=r[t+1]+n,h[c++]=0,h[c++]=d;for(let t=0;t<s.length;t+=2)h[c++]=x,h[c++]=w,h[c++]=s[t],h[c++]=s[t+1]+n,h[c++]=0,h[c++]=d;for(let t=0;t<m.length;t+=2)h[c++]=x,h[c++]=w,h[c++]=m[t],h[c++]=m[t+1]+n,h[c++]=0,h[c++]=d;for(let t=0;t<r.length/6;t++)u[f++]=g,u[f++]=g+1,u[f++]=g+2,g+=3;for(let t=0;t<s.length/8;t++)u[f++]=g,u[f++]=g+1,u[f++]=g+2,u[f++]=g+1,u[f++]=g+2,u[f++]=g+3,g+=4;u[f++]=g+0,u[f++]=g+1,u[f++]=g+2,u[f++]=g+1,u[f++]=g+3,u[f++]=g+2,g+=4}}return{vertexData:new Float32Array(h),indexData:new Uint32Array(u)}}function Ut(t,e){let n=0,i=0;const{width:l,height:r,mask:s}=t,o=t.pixels[0],a=[],h=[],u=rt(lt.fromJSON(e.inputUnit),"knots"),c="wind_speed"===e.style?it:Number.MAX_VALUE;for(let f=0;f<r;f++)for(let t=0;t<l;t++){const e=o[f*l+t]*u;if((!s||s[f*l+t])&&e<c){for(let i=0;i<4;i++)a[n++]=(t+.5)/l,a[n++]=(f+.5)/r,a[n++]=i<2?-.5:.5,a[n++]=i%2==0?-.5:.5,a[n++]=0,a[n++]=e;const s=4*(n/24-1);h[i++]=s,h[i++]=s+1,h[i++]=s+2,h[i++]=s+1,h[i++]=s+2,h[i++]=s+3}}return{vertexData:new Float32Array(a),indexData:new Uint32Array(h)}}function Pt(t,e){return"simple_scalar"===e.style?Ut(t,e):"wind_speed"===e.style?vt(t,e):At(t,e)}function Tt(t,e,n,i=[0,0],l=.5){const{width:r,height:s,mask:o}=t,[a,h]=t.pixels,[u,c]=i,f=Math.round((r-u)/n),p=Math.round((s-c)/n),d=f*p,m=new Float32Array(d),g=new Float32Array(d),x=new Uint8Array(d);for(let y=0;y<p;y++)for(let t=0;t<f;t++){let e=0;const i=y*f+t,p=Math.max(0,y*n+c),d=Math.max(0,t*n+u),w=Math.min(s,p+n),k=Math.min(r,d+n);for(let t=p;t<w;t++)for(let n=d;n<k;n++){const l=t*r+n;if(!o||o[l]){e++;const t=[a[l],h[l]],[n,r]=t;m[i]+=n,g[i]+=r}}if(e>=(w-p)*(k-d)*(1-l)){x[i]=1;const[t,n]=ot([m[i]/e,g[i]/e]);m[i]=t,g[i]=n}else x[i]=0,m[i]=0,g[i]=0}const w=new k({width:f,height:p,pixels:[m,g],mask:x});return w.updateStatistics(),w}const It=()=>i.n.getLogger("esri.views.2d.engine.flow.dataUtils"),Bt=10;async function St(t,e,n,l){const r=performance.now(),s=Ft(e,n),o=performance.now(),a=Vt(e,s,n.width,n.height),h=performance.now(),u=Dt(a),c=performance.now(),f="Streamlines"===t?Rt(u,Bt):Lt(u),p=performance.now();return(0,i.a$)("esri-2d-profiler")&&(It().info("I.1","_createFlowFieldFromData (ms)",Math.round(o-r)),It().info("I.2","_getStreamlines (ms)",Math.round(h-o)),It().info("I.3","createAnimatedLinesData (ms)",Math.round(c-h)),It().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(p-c)),It().info("I.5","createFlowMesh (ms)",Math.round(p-r)),It().info("I.6","Mesh size (bytes)",f.vertexData.buffer.byteLength+f.indexData.buffer.byteLength)),await Promise.resolve(),(0,i.D)(l),f}function Ft(t,e){const n=_t(e.data,e.width,e.height,t.smoothing);return t.interpolate?(t,i)=>{const l=Math.floor(t),r=Math.floor(i);if(l<0||l>=e.width)return[0,0];if(r<0||r>=e.height)return[0,0];const s=t-l,o=i-r,a=l,h=r,u=l<e.width-1?l+1:l,c=r<e.height-1?r+1:r,f=n[2*(h*e.width+a)],p=n[2*(h*e.width+u)],d=n[2*(c*e.width+a)],m=n[2*(c*e.width+u)],g=n[2*(h*e.width+a)+1],x=n[2*(h*e.width+u)+1];return[(f*(1-o)+d*o)*(1-s)+(p*(1-o)+m*o)*s,(g*(1-o)+n[2*(c*e.width+a)+1]*o)*(1-s)+(x*(1-o)+n[2*(c*e.width+u)+1]*o)*s]}:(t,i)=>{const l=Math.round(t),r=Math.round(i);return l<0||l>=e.width||r<0||r>=e.height?[0,0]:[n[2*(r*e.width+l)],n[2*(r*e.width+l)+1]]}}function Ct(t,e,n,i,l,r,s,o,a){const h=[];let u=n,c=i,f=0,[p,d]=e(u,c);p*=t.velocityScale,d*=t.velocityScale;const m=Math.sqrt(p*p+d*d);let g,x;h.push({x:u,y:c,t:f,speed:m});for(let w=0;w<t.verticesPerLine;w++){let[n,i]=e(u,c);n*=t.velocityScale,i*=t.velocityScale;const p=Math.sqrt(n*n+i*i);if(p<t.minSpeedThreshold)return h;const d=n/p,m=i/p;if(u+=d*t.segmentLength,c+=m*t.segmentLength,f+=t.segmentLength/p,Math.acos(d*g+m*x)>t.maxTurnAngle)return h;if(t.collisions){const t=Math.round(u*a),e=Math.round(c*a);if(t<0||t>s-1||e<0||e>o-1)return h;const n=r[e*s+t];if(-1!==n&&n!==l)return h;r[e*s+t]=l}h.push({x:u,y:c,t:f,speed:p}),g=d,x=m}return h}function Vt(t,e,n,l){const r=[],s=new i.h4,o=1/Math.max(t.lineCollisionWidth,1),a=Math.round(n*o),h=Math.round(l*o),u=new Int32Array(a*h);for(let i=0;i<u.length;i++)u[i]=-1;const c=[];for(let i=0;i<l;i+=t.lineSpacing)for(let e=0;e<n;e+=t.lineSpacing)c.push({x:e,y:i,sort:s.getFloat()});c.sort(((t,e)=>t.sort-e.sort));for(const{x:i,y:f}of c)if(s.getFloat()<t.density){const n=Ct(t,e,i,f,r.length,u,a,h,o);if(n.length<2)continue;r.push(n)}return r}function _t(t,e,n,i){if(0===i)return t;const l=Math.round(3*i),r=new Array(2*l+1);let s=0;for(let h=-l;h<=l;h++){const t=Math.exp(-h*h/(i*i));r[h+l]=t,s+=t}for(let h=-l;h<=l;h++)r[h+l]/=s;const o=new Float32Array(t.length);for(let h=0;h<n;h++)for(let n=0;n<e;n++){let i=0,s=0;for(let o=-l;o<=l;o++){if(n+o<0||n+o>=e)continue;const a=r[o+l];i+=a*t[2*(h*e+(n+o))],s+=a*t[2*(h*e+(n+o))+1]}o[2*(h*e+n)]=i,o[2*(h*e+n)+1]=s}const a=new Float32Array(t.length);for(let h=0;h<e;h++)for(let t=0;t<n;t++){let i=0,s=0;for(let a=-l;a<=l;a++){if(t+a<0||t+a>=n)continue;const u=r[a+l];i+=u*o[2*((t+a)*e+h)],s+=u*o[2*((t+a)*e+h)+1]}a[2*(t*e+h)]=i,a[2*(t*e+h)+1]=s}return a}function Dt(t,e){const n=new i.h4,l=t.reduce(((t,e)=>t+e.length),0),r=new Float32Array(4*l),s=new Array(t.length);let o=0,a=0;for(const i of t){const t=o;for(const e of i)r[4*o]=e.x,r[4*o+1]=e.y,r[4*o+2]=e.t,r[4*o+3]=e.speed,o++;s[a++]={startVertex:t,numberOfVertices:i.length,totalTime:i[i.length-1].t,timeSeed:n.getFloat()}}return{lineVertices:r,lineDescriptors:s}}function Rt(t,e){const{lineVertices:n,lineDescriptors:i}=t;let l=0,r=0;for(const f of i)l+=2*f.numberOfVertices,r+=6*(f.numberOfVertices-1);const s=new Float32Array(9*l),o=new Uint32Array(r);let a=0,h=0;function u(){o[h++]=a-2,o[h++]=a,o[h++]=a-1,o[h++]=a,o[h++]=a+1,o[h++]=a-1}function c(t,e,n,i,l,r,o,h){const u=9*a;let c=0;s[u+c++]=t,s[u+c++]=e,s[u+c++]=1,s[u+c++]=n,s[u+c++]=r,s[u+c++]=o,s[u+c++]=i/2,s[u+c++]=l/2,s[u+c++]=h,a++,s[u+c++]=t,s[u+c++]=e,s[u+c++]=-1,s[u+c++]=n,s[u+c++]=r,s[u+c++]=o,s[u+c++]=-i/2,s[u+c++]=-l/2,s[u+c++]=h,a++}for(const f of i){const{totalTime:t,timeSeed:i}=f;let l=null,r=null,s=null,o=null,a=null,h=null;for(let p=0;p<f.numberOfVertices;p++){const d=n[4*(f.startVertex+p)],m=n[4*(f.startVertex+p)+1],g=n[4*(f.startVertex+p)+2],x=n[4*(f.startVertex+p)+3];let w=null,y=null,k=null,M=null;if(p>0){w=d-l,y=m-r;const n=Math.sqrt(w*w+y*y);if(w/=n,y/=n,p>1){let t=w+a,n=y+h;const i=Math.sqrt(t*t+n*n);t/=i,n/=i;const l=Math.min(1/(t*w+n*y),e);t*=l,n*=l,k=-n,M=t}else k=-y,M=w;null!==k&&null!==M&&(c(l,r,s,k,M,t,i,x),u())}l=d,r=m,s=g,a=w,h=y,o=x}c(l,r,s,-h,a,t,i,o)}return{vertexData:s,indexData:o}}function Lt(t){const{lineVertices:e,lineDescriptors:n}=t;let i=0,l=0;for(const I of n){const t=I.numberOfVertices-1;i+=4*t*2,l+=6*t*2}const r=new Float32Array(16*i),s=new Uint32Array(l);let o,a,h,u,c,f,p,d,m,g,x,w,y,k,M=0,A=0;function b(){s[A++]=M-8,s[A++]=M-7,s[A++]=M-6,s[A++]=M-7,s[A++]=M-5,s[A++]=M-6,s[A++]=M-4,s[A++]=M-3,s[A++]=M-2,s[A++]=M-3,s[A++]=M-1,s[A++]=M-2}function v(t,e,n,i,l,s,o,a,h,u,c,f,p,d){const m=16*M;let g=0;for(const x of[1,2])for(const w of[1,2,3,4])r[m+g++]=t,r[m+g++]=e,r[m+g++]=n,r[m+g++]=i,r[m+g++]=o,r[m+g++]=a,r[m+g++]=h,r[m+g++]=u,r[m+g++]=x,r[m+g++]=w,r[m+g++]=p,r[m+g++]=d,r[m+g++]=l/2,r[m+g++]=s/2,r[m+g++]=c/2,r[m+g++]=f/2,M++}function U(t,e){let n=m+x,i=g+w;const l=Math.sqrt(n*n+i*i);n/=l,i/=l;const r=m*n+g*i;n/=r,i/=r;let s=x+y,M=w+k;const A=Math.sqrt(s*s+M*M);s/=A,M/=A;const U=x*s+w*M;s/=U,M/=U,v(o,a,h,u,-i,n,c,f,p,d,-M,s,t,e),b()}function P(t,e,n,i,l,r){if(m=x,g=w,x=y,w=k,null==m&&null==g&&(m=x,g=w),null!=c&&null!=f){y=t-c,k=e-f;const n=Math.sqrt(y*y+k*k);y/=n,k/=n}null!=m&&null!=g&&U(l,r),o=c,a=f,h=p,u=d,c=t,f=e,p=n,d=i}function T(t,e){m=x,g=w,x=y,w=k,null==m&&null==g&&(m=x,g=w),null!=m&&null!=g&&U(t,e)}for(const I of n){o=null,a=null,h=null,u=null,c=null,f=null,p=null,d=null,m=null,g=null,x=null,w=null,y=null,k=null;const{totalTime:t,timeSeed:n}=I;for(let i=0;i<I.numberOfVertices;i++)P(e[4*(I.startVertex+i)],e[4*(I.startVertex+i)+1],e[4*(I.startVertex+i)+2],e[4*(I.startVertex+i)+3],t,n);T(t,n)}return{vertexData:r,indexData:s}}function Nt(t,e){const n=e.pixels,{width:l,height:r}=e,s=new Float32Array(l*r*2),o=e.mask||new Uint8Array(l*r*2);if(e.mask||o.fill(255),"vector-uv"===t)for(let i=0;i<l*r;i++)s[2*i]=n[0][i],s[2*i+1]=-n[1][i];else if("vector-magdir"===t)for(let a=0;a<l*r;a++){const t=n[0][a],e=(0,i.eI)(n[1][a]),l=Math.cos(e-Math.PI/2),r=Math.sin(e-Math.PI/2);s[2*a]=l*t,s[2*a+1]=r*t}return{data:s,mask:o,width:l,height:r}}async function Et(t,e,n,l,r,s){const o=performance.now(),a=(0,i.bF)(e.spatialReference);if(!a){const a=await jt(t,e,n,l,r,s);return(0,i.a$)("esri-2d-profiler")&&It().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-o)),(0,i.a$)("esri-2d-profiler")&&It().info("I.9","Number of parts",1),a}const[h,u]=a.valid,c=u-h,f=Math.ceil(e.width/c),p=e.width/f,d=Math.round(n/f);let m=e.xmin;const g=[],x=performance.now();for(let M=0;M<f;M++){const n=new i.au({xmin:m,xmax:m+p,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});g.push(jt(t,n,d,l,r,s)),m+=p}const w=await Promise.all(g);(0,i.a$)("esri-2d-profiler")&&It().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-x)),(0,i.a$)("esri-2d-profiler")&&It().info("I.9","Number of parts",w.length);const y={data:new Float32Array(n*l*2),mask:new Uint8Array(n*l),width:n,height:l};let k=0;for(const i of w){for(let t=0;t<i.height;t++)for(let e=0;e<i.width;e++)k+e>=n||(y.data[2*(t*n+k+e)]=i.data[2*(t*i.width+e)],y.data[2*(t*n+k+e)+1]=i.data[2*(t*i.width+e)+1],y.mask[t*n+k+e]=i.mask[t*i.width+e]);k+=i.width}return(0,i.a$)("esri-2d-profiler")&&It().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-o)),y}async function jt(t,e,n,i,l,r){const s={requestProjectedLocalDirections:!0,signal:r};if(null!=l&&(s.timeExtent=l),"imagery"===t.type){await t.load({signal:r});const l=t.rasterInfo.dataType,o=await t.fetchImage(e,n,i,s);return null==o?.pixelData?.pixelBlock?{data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i}:Nt(l,o.pixelData.pixelBlock)}await t.load({signal:r});const o=t.serviceRasterInfo.dataType,a=await t.fetchPixels(e,n,i,s);return null==a?.pixelBlock?{data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i}:Nt(o,a.pixelBlock)}}}]);
//# sourceMappingURL=879.9e784a50.js.map