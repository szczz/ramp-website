"use strict";(self["webpackChunkramp_website"]=self["webpackChunkramp_website"]||[]).push([[2753],{81612:function(t,e,r){r.d(e,{E:function(){return a}});var i=r(98503),n=r(30),o=r(41470);const s=()=>i.n.getLogger("esri.views.webgl.BufferObject");class a{static createIndex(t,e,r){return new a(t,o.A.ELEMENT_ARRAY_BUFFER,e,r)}static createVertex(t,e,r){return new a(t,o.A.ARRAY_BUFFER,e,r)}static createUniform(t,e,r){return new a(t,o.A.UNIFORM_BUFFER,e,r)}static createPixelPack(t,e=o.F.STREAM_READ,r){const i=new a(t,o.A.PIXEL_PACK_BUFFER,e);return r&&i.setSize(r),i}static createPixelUnpack(t,e=o.F.STREAM_DRAW,r){return new a(t,o.A.PIXEL_UNPACK_BUFFER,e,r)}static createTransformFeedback(t,e=o.F.STATIC_DRAW,r){const i=new a(t,o.A.TRANSFORM_FEEDBACK_BUFFER,e);return i.setSize(r),i}constructor(t,e,r,i){this._context=t,this.bufferType=e,this.usage=r,this._glName=null,this._size=-1,this._indexType=void 0,t.instanceCounter.increment(o.V.BufferObject,this),this._glName=this._context.gl.createBuffer(),(0,n.u)(this._context.gl),i&&this.setData(i)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get usedMemory(){if(this.bufferType===o.A.ELEMENT_ARRAY_BUFFER){if(this._indexType===o.C.UNSIGNED_INT)return 4*this._size;if(this._indexType===o.C.UNSIGNED_SHORT)return 2*this._size}return this._size}get _isVAOAware(){return this.bufferType===o.A.ELEMENT_ARRAY_BUFFER||this.bufferType===o.A.ARRAY_BUFFER}dispose(){this._context?.gl?(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(o.V.BufferObject,this),this._context=null):this._glName&&s().warn("Leaked WebGL buffer object")}setSize(t,e=null){if(this.bufferType===o.A.ELEMENT_ARRAY_BUFFER&&null!=e)switch(this._indexType=e,e){case o.C.UNSIGNED_SHORT:t*=2;break;case o.C.UNSIGNED_INT:t*=4}this._setBufferData(t)}setData(t){if(!t)return;let e=t.byteLength;this.bufferType===o.A.ELEMENT_ARRAY_BUFFER&&((0,i.cj)(t)?this._indexType=o.C.UNSIGNED_BYTE:(0,i.ck)(t)?(e/=2,this._indexType=o.C.UNSIGNED_SHORT):(0,i.cl)(t)&&(e/=4,this._indexType=o.C.UNSIGNED_INT)),this._setBufferData(e,t)}_setBufferData(t,e=null){this._size=t;const r=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const i=this._context.gl;null!=e?i.bufferData(this.bufferType,e,this.usage):i.bufferData(this.bufferType,t,this.usage),(0,n.u)(i),this._isVAOAware&&this._context.bindVAO(r)}setSubData(t,e,r,i){if(!t)return;const o=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const{gl:s}=this._context;s.bufferSubData(this.bufferType,e*t.BYTES_PER_ELEMENT,t,r,i-r),(0,n.u)(s),this._isVAOAware&&this._context.bindVAO(o)}getSubData(t,e=0,r,i){if(r<0||i<0)return;const n=h(t)?t.BYTES_PER_ELEMENT:1;if(n*((r??0)+(i??0))>t.byteLength)return;e+n*(i??0)>this.usedMemory&&s().warn("Potential problem getting subdata: requested data exceeds buffer size!");const a=this._context.gl;this.bufferType===o.A.TRANSFORM_FEEDBACK_BUFFER?(this._context.bindBuffer(this,o.A.TRANSFORM_FEEDBACK_BUFFER),a.getBufferSubData(o.A.TRANSFORM_FEEDBACK_BUFFER,e,t,r,i),this._context.unbindBuffer(o.A.TRANSFORM_FEEDBACK_BUFFER)):(this._context.bindBuffer(this,o.A.COPY_READ_BUFFER),a.getBufferSubData(o.A.COPY_READ_BUFFER,e,t,r,i),this._context.unbindBuffer(o.A.COPY_READ_BUFFER))}async getSubDataAsync(t,e=0,r,i){await this._context.clientWaitAsync(),this.getSubData(t,e,r,i)}}function h(t){return(0,i.cm)(t)}},52753:function(t,e,r){r.d(e,{i:function(){return a},r:function(){return Q},s:function(){return c},x:function(){return u}});var i=r(98503),n=r(81612),o=r(30),s=r(41470);let a=class{constructor(t,e,r=e){this.internalFormat=t,this.width=e,this.height=r,this.multisampled=!1,this.samples=1}};function h(t){return t.width<=0||t.height<=0||null==t.internalFormat?0:t.width*t.height*(0,o.a)(t.internalFormat)}let c=class{constructor(t,e){this._context=t,this._descriptor=e,this.type=o.e.RenderBuffer,this._context.instanceCounter.increment(s.V.Renderbuffer,this);const r=this._context.gl;this.glName=r.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:i,height:n,internalFormat:a,multisampled:h}=e;h?r.renderbufferStorageMultisample(r.RENDERBUFFER,this.samples,a,i,n):r.renderbufferStorage(r.RENDERBUFFER,a,i,n),this._context.bindRenderbuffer(null)}get descriptor(){return this._descriptor}get samples(){const t=this._descriptor.samples,e=this._context.parameters.maxSamples;return t?Math.min(t,e):e}get usedMemory(){return h(this._descriptor)}resize(t,e){const r=this._descriptor;if(r.width===t&&r.height===e)return;r.width=t,r.height=e;const i=this._context.gl;this._context.bindRenderbuffer(this),r.multisampled?i.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,r.internalFormat,r.width,r.height):i.renderbufferStorage(i.RENDERBUFFER,r.internalFormat,r.width,r.height),this._context.bindRenderbuffer(null)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(s.V.Renderbuffer,this),this._context=null)}};const l=()=>i.n.getLogger("esri.views.webgl.FramebufferObject");let u=class t{constructor(t,e,r=null){this._context=t,this._glName=null,this._colorAttachments=new Map,this._depthStencilBuffer=null,this._depthStencilTexture=null,this._initialized=!1,t.instanceCounter.increment(s.V.FramebufferObject,this);const i=f(e)?e:new o.m(this._context,e);if(this._colorAttachments.set(s.X.COLOR_ATTACHMENT0,i),this._validateTextureDescriptor(i.descriptor),this._validateColorAttachmentPoint(s.X.COLOR_ATTACHMENT0),null!=r)if(d(r))this._depthStencilTexture=f(r)?r:new o.m(this._context,r),this._validateTextureDescriptor(this._depthStencilTexture.descriptor);else{const t=_(r)?r:new c(this._context,r);this._depthStencilBuffer=t,this._validateRenderBufferDescriptor(t.descriptor)}}dispose(){if(0===this._colorAttachments.size&&!this._glName)return;const t=this._context.getBoundFramebufferObject();this._colorAttachments.forEach(((t,e)=>this.detachColorTexture(e)?.dispose())),this.detachDepthStencilBuffer()?.dispose(),this.detachDepthStencilTexture()?.dispose(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(t),this._context.instanceCounter.decrement(s.V.FramebufferObject,this)}get glName(){return this._glName}get colorTexture(){return this._colorAttachments.get(s.X.COLOR_ATTACHMENT0)}get depthStencil(){return this._depthStencilTexture||this._depthStencilBuffer}get depthStencilTexture(){return this._depthStencilTexture}get width(){return this._colorAttachments.get(s.X.COLOR_ATTACHMENT0)?.descriptor?.width??0}get height(){return this._colorAttachments.get(s.X.COLOR_ATTACHMENT0)?.descriptor?.height??0}get usedMemory(){return[...this._colorAttachments].reduce(((t,[e,r])=>t+r.usedMemory),this.depthStencil?.usedMemory??0)}getColorTexture(t){const e=this._colorAttachments.get(t);return e&&f(e)?e:null}get colorAttachments(){return[...this._colorAttachments.keys()]}attachColorTexture(t,e=s.X.COLOR_ATTACHMENT0){if(!t)return;this._validateColorAttachmentPoint(e);const r=t.descriptor;this._validateTextureDescriptor(r),this.detachColorTexture(e)?.dispose(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,e)),this._colorAttachments.set(e,t)}detachColorTexture(t=s.X.COLOR_ATTACHMENT0){const e=this._colorAttachments.get(t);if(e){if(this._initialized){const e=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t),this._context.bindFramebuffer(e)}return this._colorAttachments.delete(t),e}}setColorTextureTarget(t,e=s.X.COLOR_ATTACHMENT0){const r=this._colorAttachments.get(e);r&&this._framebufferTexture2D(r.glName,e,t)}attachDepthStencil(t){if(t)switch(t.type){case o.e.Texture:return this._attachDepthStencilTexture(t);case o.e.RenderBuffer:return this._attachDepthStencilBuffer(t)}}_attachDepthStencilTexture(t){if(null==t)return;const e=t.descriptor;e.pixelFormat!==s.G.DEPTH_STENCIL&&e.pixelFormat!==s.G.DEPTH24_STENCIL8&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),e.dataType!==s.U.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._validateTextureDescriptor(e),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,s.t)),this._depthStencilTexture?.dispose(),this._depthStencilTexture=t}detachDepthStencilTexture(){const t=this._depthStencilTexture;if(t&&this._initialized){const t=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),this._framebufferTexture2D(null,s.t),this._context.bindFramebuffer(t)}return this._depthStencilTexture=null,t}_attachDepthStencilBuffer(t){if(null==t)return;const e=t.descriptor;if(this._validateRenderBufferDescriptor(e),this._disposeDepthStencilAttachments(),this._initialized){this._context.bindFramebuffer(this);const r=this._context.gl,i=this._getGLAttachmentPoint(e);r.framebufferRenderbuffer(s.n.FRAMEBUFFER,i,r.RENDERBUFFER,t.glName)}this._depthStencilBuffer=t}detachDepthStencilBuffer(){const t=this._depthStencilBuffer;if(t&&this._initialized){const e=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this);const r=this._context.gl,i=this._getGLAttachmentPoint(t.descriptor);r.framebufferRenderbuffer(s.n.FRAMEBUFFER,i,r.RENDERBUFFER,null),this._context.bindFramebuffer(e)}return this._depthStencilBuffer=null,t}copyToTexture(t,e,r,i,n,a,h){(t<0||e<0||n<0||a<0)&&console.error("Offsets cannot be negative!"),(r<=0||i<=0)&&console.error("Copy width and height must be greater than zero!");const c=h.descriptor;h.descriptor.target!==s.M.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(null==c?.width||null==c?.height||t+r>this.width||e+i>this.height||n+r>c.width||a+i>c.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const l=this._context,u=l.bindTexture(h,o.m.TEXTURE_UNIT_FOR_UPDATES);l.setActiveTexture(o.m.TEXTURE_UNIT_FOR_UPDATES),l.bindFramebuffer(this),l.gl.copyTexSubImage2D(s.M.TEXTURE_2D,0,n,a,t,e,r,i),l.bindTexture(u,o.m.TEXTURE_UNIT_FOR_UPDATES)}readPixels(t,e,r,i,n,o,s){(r<=0||i<=0)&&console.error("Copy width and height must be greater than zero!"),s||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(t,e,r,i,n,o,s)}async readPixelsAsync(t,e,r,i,o,a,h){const{gl:c}=this._context,l=n.E.createPixelPack(this._context,s.F.STREAM_READ,h.byteLength);this._context.bindBuffer(l);const u=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),c.readPixels(t,e,r,i,o,a,0),this._context.unbindBuffer(s.A.PIXEL_PACK_BUFFER),this._context.bindFramebuffer(u),await l.getSubDataAsync(h),l.dispose()}resize(t,e){if(this.width===t&&this.height===e)return;const r={width:t,height:e};m(r,this._context.parameters.maxTextureSize),this._colorAttachments.forEach((t=>t.resize(r.width,r.height))),this._depthStencilTexture?.resize(r.width,r.height),this._initialized&&(m(r,this._context.parameters.maxRenderbufferSize),this._depthStencilBuffer?.resize(r.width,r.height),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1)}initializeAndBind(t=s.n.FRAMEBUFFER){const e=this._context.gl;if(this._initialized)return void e.bindFramebuffer(t,this.glName);this._glName&&e.deleteFramebuffer(this._glName);const r=e.createFramebuffer();if(e.bindFramebuffer(t,r),this._colorAttachments.forEach(((e,r)=>this._framebufferTexture2D(e.glName,r,g(e),t))),this._depthStencilBuffer){const r=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);e.framebufferRenderbuffer(t,r,e.RENDERBUFFER,this._depthStencilBuffer.glName)}else this._depthStencilTexture&&this._framebufferTexture2D(this._depthStencilTexture.glName,e.DEPTH_STENCIL_ATTACHMENT,g(this._depthStencilTexture),t);(0,o.b)()&&e.checkFramebufferStatus(t)!==e.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=r,this._initialized=!0}_framebufferTexture2D(t,e=s.X.COLOR_ATTACHMENT0,r=s.M.TEXTURE_2D,i=s.n.FRAMEBUFFER,n=0){this._context.gl.framebufferTexture2D(i,e,r,t,n)}_disposeDepthStencilAttachments(){const t=this._context.gl;if(this._depthStencilBuffer){if(this._initialized){this._context.bindFramebuffer(this);const e=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);t.framebufferRenderbuffer(s.n.FRAMEBUFFER,e,t.RENDERBUFFER,null)}this._depthStencilBuffer=(0,i.cF)(this._depthStencilBuffer)}this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture=(0,i.cF)(this._depthStencilTexture))}_validateTextureDescriptor(t){t.target!==s.M.TEXTURE_2D&&t.target!==s.M.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),m(t,this._context.parameters.maxTextureSize),this._validateBufferDimensions(t)}_validateRenderBufferDescriptor(t){m(t,this._context.parameters.maxRenderbufferSize),this._validateBufferDimensions(t)}_validateBufferDimensions(t){t.width<=0&&(t.width=this.width),t.height<=0&&(t.height=this.height),this.width>0&&this.height>0&&(this.width===t.width&&this.height===t.height||console.error("Attachment size must match framebuffer size!"))}_getGLAttachmentPoint(t){switch(t.internalFormat){case s.B.DEPTH_COMPONENT16:case s.B.DEPTH_COMPONENT24:case s.B.DEPTH_COMPONENT32F:return this._context.gl.DEPTH_ATTACHMENT;case s.B.DEPTH24_STENCIL8:case s.B.DEPTH32F_STENCIL8:case s.B.DEPTH_STENCIL:return this._context.gl.DEPTH_STENCIL_ATTACHMENT;case s.B.STENCIL_INDEX8:return this._context.gl.STENCIL_ATTACHMENT}}_validateColorAttachmentPoint(e){if(-1===t._MAX_COLOR_ATTACHMENTS){const{gl:e}=this._context;t._MAX_COLOR_ATTACHMENTS=e.getParameter(e.MAX_COLOR_ATTACHMENTS)}const r=e-s.X.COLOR_ATTACHMENT0;r+1>t._MAX_COLOR_ATTACHMENTS&&i.n.getLogger("esri.views.webgl.FrameBufferObject").error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${r+1}. Implementation supports up to ${t._MAX_COLOR_ATTACHMENTS} color attachments`)}};function f(t){return null!=t&&"type"in t&&t.type===o.e.Texture}function _(t){return null!=t&&"type"in t&&t.type===o.e.RenderBuffer}function d(t){return f(t)||null!=t&&"pixelFormat"in t}function m(t,e){const r=Math.max(t.width,t.height);if(r>e){l().warn(`Resizing FBO attachment size ${t.width}x${t.height} to device limit ${e}`);const i=e/r;return t.width=Math.round(t.width*i),t.height=Math.round(t.height*i),!1}return!0}function g(t){return t.descriptor.target===s.M.TEXTURE_CUBE_MAP?s.M.TEXTURE_CUBE_MAP_POSITIVE_X:s.M.TEXTURE_2D}u._MAX_COLOR_ATTACHMENTS=-1;const p=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"],T=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"],x=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"],E=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT","textureSize","texelFetch"];var b=999,A=9999,S=0,D=1,R=2,F=3,M=4,U=5,C=6,y=7,w=8,N=9,B=10,v=11,P=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function L(){var t,e,r,i=0,n=0,o=b,s=[],a=[],h=1,c=0,l=0,u=!1,f=!1,_="";return function(t){return a=[],null!==t?m(t.replace?t.replace(/\r\n/g,"\n"):t):g()};function d(t){t.length&&a.push({type:P[o],data:t,position:l,line:h,column:c})}function m(e){var s;for(i=0,r=(_+=e).length;t=_[i],i<r;){switch(s=i,o){case S:i=H();break;case D:i=k();break;case R:i=O();break;case F:i=I();break;case M:i=j();break;case v:i=X();break;case U:i=z();break;case A:i=G();break;case N:i=L();break;case b:i=p()}s!==i&&("\n"===_[s]?(c=0,++h):++c)}return n+=i,_=_.slice(i),a}function g(t){return s.length&&d(s.join("")),o=B,d("(eof)"),a}function p(){return s=s.length?[]:s,"/"===e&&"*"===t?(l=n+i-1,o=S,e=t,i+1):"/"===e&&"/"===t?(l=n+i-1,o=D,e=t,i+1):"#"===t?(o=R,l=n+i,i):/\s/.test(t)?(o=N,l=n+i,i):(u=/\d/.test(t),f=/[^\w_]/.test(t),l=n+i,o=u?M:f?F:A,i)}function L(){return/[^\s]/g.test(t)?(d(s.join("")),o=b,i):(s.push(t),e=t,i+1)}function O(){return"\r"!==t&&"\n"!==t||"\\"===e?(s.push(t),e=t,i+1):(d(s.join("")),o=b,i)}function k(){return O()}function H(){return"/"===t&&"*"===e?(s.push(t),d(s.join("")),o=b,i+1):(s.push(t),e=t,i+1)}function I(){if("."===e&&/\d/.test(t))return o=U,i;if("/"===e&&"*"===t)return o=S,i;if("/"===e&&"/"===t)return o=D,i;if("."===t&&s.length){for(;V(s););return o=U,i}if(";"===t||")"===t||"("===t){if(s.length)for(;V(s););return d(t),o=b,i+1}var r=2===s.length&&"="!==t;if(/[\w_\d\s]/.test(t)||r){for(;V(s););return o=b,i}return s.push(t),e=t,i+1}function V(t){for(var e,r,i=0;;){if(e=x.indexOf(t.slice(0,t.length+i).join("")),r=x[e],-1===e){if(i--+t.length>0)continue;r=t.slice(0,1).join("")}return d(r),l+=r.length,(s=s.slice(r.length)).length}}function X(){return/[^a-fA-F0-9]/.test(t)?(d(s.join("")),o=b,i):(s.push(t),e=t,i+1)}function j(){return"."===t||/[eE]/.test(t)?(s.push(t),o=U,e=t,i+1):"x"===t&&1===s.length&&"0"===s[0]?(o=v,s.push(t),e=t,i+1):/[^\d]/.test(t)?(d(s.join("")),o=b,i):(s.push(t),e=t,i+1)}function z(){return"f"===t&&(s.push(t),e=t,i+=1),/[eE]/.test(t)||"-"===t&&/[eE]/.test(e)?(s.push(t),e=t,i+1):/[^\d]/.test(t)?(d(s.join("")),o=b,i):(s.push(t),e=t,i+1)}function G(){if(/[^\d\w_]/.test(t)){var r=s.join("");return o=T.indexOf(r)>-1?w:E.indexOf(r)>-1?y:C,d(s.join("")),o=b,i}return s.push(t),e=t,i+1}}function O(t){var e=L(),r=[];return(r=r.concat(e(t))).concat(e(null))}function k(t){return O(t)}function H(t){return t.map((t=>"eof"!==t.type?t.data:"")).join("")}const I=new Set(["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"]);function V(t,e="100",r="300 es"){const i=/^\s*#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/;for(const n of t)if("preprocessor"===n.type){const t=i.exec(n.data);if(t){const i=t[1].replaceAll(/\s{2,}/g," ");if(i===r)return i;if(i===e)return n.data="#version "+r,e;throw new Error("unknown glsl version: "+i)}}return t.splice(0,0,{type:"preprocessor",data:"#version "+r},{type:"whitespace",data:"\n"}),null}function X(t,e){for(let r=e-1;r>=0;r--){const e=t[r];if("whitespace"!==e.type&&"block-comment"!==e.type){if("keyword"!==e.type)break;if("attribute"===e.data||"in"===e.data)return!0}}return!1}function j(t,e,r,i){i=i||r;for(const n of t)if("ident"===n.type&&n.data===r)return i in e?e[i]++:e[i]=0,j(t,e,i+"_"+e[i],i);return r}function z(t,e,r="afterVersion"){function i(t,e){for(let r=e;r<t.length;r++){const e=t[r];if("operator"===e.type&&";"===e.data)return r}return null}function n(t){let e=-1,n=0,o=-1;for(let s=0;s<t.length;s++){const a=t[s];if("preprocessor"===a.type&&(/#(if|ifdef|ifndef)\s+.+/.test(a.data)?++n:/#endif\s*.*/.test(a.data)&&--n),"afterVersion"!==r&&"afterPrecision"!==r||"preprocessor"===a.type&&a.data.startsWith("#version")&&(o=Math.max(o,s)),"afterPrecision"===r&&"keyword"===a.type&&"precision"===a.data){const e=i(t,s);if(null===e)throw new Error("precision statement not followed by any semicolons!");o=Math.max(o,e)}e<o&&0===n&&(e=s)}return e+1}const o={data:"\n",type:"whitespace"},s=e=>e<t.length&&/[^\r\n]$/.test(t[e].data);let a=n(t);s(a-1)&&t.splice(a++,0,o);for(const h of e)t.splice(a++,0,h);s(a-1)&&s(a)&&t.splice(a,0,o)}function G(t,e,r,i="lowp"){z(t,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:i},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"ident",data:e},{type:"operator",data:";"}],"afterPrecision")}function $(t,e,r,i,n="lowp"){z(t,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:i.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"ident",data:e},{type:"operator",data:";"}],"afterPrecision")}function Y(t,e){let r,i,n=-1;for(let o=e;o<t.length;o++){const e=t[o];if("operator"===e.type&&("["===e.data&&(r=o),"]"===e.data)){i=o;break}"integer"===e.type&&(n=parseInt(e.data,10))}return r&&i&&t.splice(r,i-r+1),n}function K(t,e){if(t.startsWith("#version 300"))return t;const r=k(t);if("300 es"===V(r,"100","300 es"))return t;let i=null,n=null;const o={},a={};for(let h=0;h<r.length;++h){const t=r[h];switch(t.type){case"keyword":e===s.H.VERTEX_SHADER&&"attribute"===t.data?t.data="in":"varying"===t.data&&(t.data=e===s.H.VERTEX_SHADER?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(t.data.trim())&&(t.data=t.data.replaceAll(/(2D|Cube|EXT)/g,"")),e===s.H.FRAGMENT_SHADER&&"gl_FragColor"===t.data&&(i||(i=j(r,o,"fragColor"),G(r,i,"vec4")),t.data=i),e===s.H.FRAGMENT_SHADER&&"gl_FragData"===t.data){const e=Y(r,h+1),i=j(r,o,"fragData");$(r,i,"vec4",e,"mediump"),t.data=i}else e===s.H.FRAGMENT_SHADER&&"gl_FragDepthEXT"===t.data&&(n||(n=j(r,o,"gl_FragDepth")),t.data=n);break;case"ident":if(p.includes(t.data)){if(e===s.H.VERTEX_SHADER&&X(r,h))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");t.data in a||(a[t.data]=j(r,o,t.data)),t.data=a[t.data]}}}for(let s=r.length-1;s>=0;--s){const t=r[s];if("preprocessor"===t.type){const e=t.data.match(/#extension\s+(.*):/);if(e?.[1]&&I.has(e[1].trim())){const t=r[s+1];r.splice(s,t&&"whitespace"===t.type?2:1)}const i=t.data.match(/#ifdef\s+(.*)/);i?.[1]&&I.has(i[1].trim())&&(t.data="#if 1");const n=t.data.match(/#ifndef\s+(.*)/);n?.[1]&&I.has(n[1].trim())&&(t.data="#if 0")}}return q(t,H(r))}function q(t,e){return e}const W=4294967295;class Q{constructor(t,e,r,i,n=new Map,a=[]){this._context=t,this._locations=i,this._uniformBlockBindings=n,this._transformFeedbackVaryings=a,this._refCount=1,this._compiled=!1,this._linesOfCode=0,this._nameToUniformLocation=new Map,this._nameToUniform1=new Map,this._nameToUniform1v=new Map,this._nameToUniform2=new Map,this._nameToUniform3=new Map,this._nameToUniform4=new Map,this._nameToUniformMatrix3=new Map,this._nameToUniformMatrix4=new Map,t||console.error("RenderingContext isn't initialized!"),0===e.length&&console.error("Shaders source should not be empty!"),e=K(e,s.H.VERTEX_SHADER),r=K(r,s.H.FRAGMENT_SHADER),this._vShader=Z(this._context,s.H.VERTEX_SHADER,e),this._fShader=Z(this._context,s.H.FRAGMENT_SHADER,r),this._vShader&&this._fShader||console.error("Error loading shaders!"),this._context.instanceCounter.increment(s.V.Shader,this),(0,o.c)()&&(this.vertexShader=e,this.fragmentShader=r),this.usedMemory=e.length+r.length;const h=this._context.gl,c=h.createProgram();h.attachShader(c,this._vShader),h.attachShader(c,this._fShader),this._locations.forEach(((t,e)=>h.bindAttribLocation(c,t,e))),this._transformFeedbackVaryings?.length&&h.transformFeedbackVaryings(c,this._transformFeedbackVaryings,h.SEPARATE_ATTRIBS),h.linkProgram(c),(0,o.c)()&&!h.getProgramParameter(c,h.LINK_STATUS)&&console.error(`Could not link shader\nvalidated: ${h.getProgramParameter(c,h.VALIDATE_STATUS)}, gl error ${h.getError()}, vertex: ${h.getShaderParameter(this._vShader,h.COMPILE_STATUS)}, fragment: ${h.getShaderParameter(this._fShader,h.COMPILE_STATUS)}, info log: ${h.getProgramInfoLog(c)}, vertex source: ${this.vertexShader}, fragment source: ${this.fragmentShader}`);for(const[o,s]of this._uniformBlockBindings){const t=h.getUniformBlockIndex(c,o);t<W&&h.uniformBlockBinding(c,t,s)}this._glName=c,this._context.instanceCounter.increment(s.V.Program,this)}get glName(){return this._glName}get hasGLName(){return null!=this._glName}get hasTransformFeedbackVaryings(){return!!this._transformFeedbackVaryings?.length}get compiled(){if(this._compiled)return!0;const t=this._context.gl.getExtension("KHR_parallel_shader_compile");return null==t||null==this.glName?(this._compiled=!0,!0):(this._compiled=!!this._context.gl.getProgramParameter(this.glName,t.COMPLETION_STATUS_KHR),this._compiled)}dispose(){if(--this._refCount>0)return;const t=this._context.gl,e=this._context.instanceCounter;this._nameToUniformLocation.forEach((t=>t&&e.decrement(s.V.Uniform,t))),this._nameToUniformLocation.clear(),this._vShader&&(this._linesOfCode>0&&(e.decrement(s.V.LinesOfCode,this._vShader,this._linesOfCode),this._linesOfCode=0),t.deleteShader(this._vShader),this._vShader=null,e.decrement(s.V.Shader,this)),this._fShader&&(t.deleteShader(this._fShader),this._fShader=null),this._glName&&(t.deleteProgram(this._glName),this._glName=null,e.decrement(s.V.Program,this))}ref(){++this._refCount}_getUniformLocation(t){const e=this._nameToUniformLocation.get(t);if(void 0!==e)return e;if(this.glName){const e=this._context.gl.getUniformLocation(this.glName,t);return this._nameToUniformLocation.set(t,e),e&&this._context.instanceCounter.increment(s.V.Uniform,e),e}return null}hasUniform(t){return null!=this._getUniformLocation(t)}setUniform1i(t,e){const r=this._nameToUniform1.get(t);void 0!==r&&e===r||(this._context.gl.uniform1i(this._getUniformLocation(t),e),this._nameToUniform1.set(t,e))}setUniform1iv(t,e){et(this._nameToUniform1v,t,e)&&this._context.gl.uniform1iv(this._getUniformLocation(t),e)}setUniform2iv(t,e){et(this._nameToUniform2,t,e)&&this._context.gl.uniform2iv(this._getUniformLocation(t),e)}setUniform3iv(t,e){et(this._nameToUniform3,t,e)&&this._context.gl.uniform3iv(this._getUniformLocation(t),e)}setUniform4iv(t,e){et(this._nameToUniform4,t,e)&&this._context.gl.uniform4iv(this._getUniformLocation(t),e)}setUniform1f(t,e){const r=this._nameToUniform1.get(t);void 0!==r&&e===r||(this._context.gl.uniform1f(this._getUniformLocation(t),e),this._nameToUniform1.set(t,e))}setUniform1fv(t,e){et(this._nameToUniform1v,t,e)&&this._context.gl.uniform1fv(this._getUniformLocation(t),e)}setUniform2f(t,e,r){const i=this._nameToUniform2.get(t);void 0===i?(this._context.gl.uniform2f(this._getUniformLocation(t),e,r),this._nameToUniform2.set(t,[e,r])):e===i[0]&&r===i[1]||(this._context.gl.uniform2f(this._getUniformLocation(t),e,r),i[0]=e,i[1]=r)}setUniform2fv(t,e){et(this._nameToUniform2,t,e)&&this._context.gl.uniform2fv(this._getUniformLocation(t),e)}setUniform3f(t,e,r,i){const n=this._nameToUniform3.get(t);void 0===n?(this._context.gl.uniform3f(this._getUniformLocation(t),e,r,i),this._nameToUniform3.set(t,[e,r,i])):e===n[0]&&r===n[1]&&i===n[2]||(this._context.gl.uniform3f(this._getUniformLocation(t),e,r,i),n[0]=e,n[1]=r,n[2]=i)}setUniform3fv(t,e){const r=this._getUniformLocation(t);null!=r&&et(this._nameToUniform3,t,e)&&this._context.gl.uniform3fv(r,e)}setUniform4f(t,e,r,i,n){const o=this._nameToUniform4.get(t);void 0===o?(this._context.gl.uniform4f(this._getUniformLocation(t),e,r,i,n),this._nameToUniform4.set(t,[e,r,i,n])):void 0!==o&&e===o[0]&&r===o[1]&&i===o[2]&&n===o[3]||(this._context.gl.uniform4f(this._getUniformLocation(t),e,r,i,n),o[0]=e,o[1]=r,o[2]=i,o[3]=n)}setUniform4fv(t,e){const r=this._getUniformLocation(t);null!=r&&et(this._nameToUniform4,t,e)&&this._context.gl.uniform4fv(r,e)}setUniformMatrix3fv(t,e,r=!1){const i=this._getUniformLocation(t);null!=i&&et(this._nameToUniformMatrix3,t,e)&&this._context.gl.uniformMatrix3fv(i,r,e)}setUniformMatrix4fv(t,e,r=!1){const i=this._getUniformLocation(t);null!=i&&et(this._nameToUniformMatrix4,t,e)&&this._context.gl.uniformMatrix4fv(i,r,e)}stop(){}}function Z(t,e,r){const i=t.gl,n=i.createShader(e);return i.shaderSource(n,r),i.compileShader(n),(0,o.c)()&&!i.getShaderParameter(n,i.COMPILE_STATUS)&&(console.error("Compile error in ".concat(e===s.H.VERTEX_SHADER?"vertex":"fragment"," shader")),console.error(i.getShaderInfoLog(n)),console.error(J(r))),n}function J(t){let e=2;return t.replaceAll("\n",(()=>"\n"+tt(e++)+":"))}function tt(t){return t>=1e3?t.toString():("  "+t).slice(-3)}function et(t,e,r){const i=t.get(e);if(!i)return t.set(e,Array.from(r)),!0;const n=r.length;if(i.length!==n)return t.set(e,Array.from(r)),!0;for(let o=0;o<n;++o){const t=r[o];if(i[o]!==t){for(i[o]=t;o<n;++o)i[o]=r[o];return!0}}return!1}}}]);
//# sourceMappingURL=2753.0a2ba0ef.js.map