"use strict";(self["webpackChunkramp_website"]=self["webpackChunkramp_website"]||[]).push([[1128],{37112:function(e,t,r){r.d(t,{e:function(){return n},o:function(){return o}});var a=r(98503);function n(e,t){return{...s(e,t),readResourcePaths:[]}}function o(e,t,r){const n=(0,a.I)(e.itemUrl);return{...s(e,t),messages:[],writtenProperties:[],blockedRelativeUrls:[],verifyItemRelativeUrls:n?{rootPath:n.path,writtenUrls:[]}:null,resources:r?{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}:null}}function s(e,t){return{origin:t,url:(0,a.I)(e.itemUrl),portal:e.portal||a.b.getDefault(),portalItem:e}}},21128:function(e,t,r){r.d(t,{load:function(){return p}});var a=r(98503),n=r(5948),o=r(33824),s=r(67489),i=r(13338),l=r(37112),u=r(83297),c=r(21355);async function p(e,t){const r=e.instance.portalItem;if(r?.id)return await r.load(t),y(e),e.validateItem&&e.validateItem(r),d(e,t)}function y(e){const t=e.instance.portalItem;if(!t?.type||!e.supportedTypes.includes(t.type))throw new a.s("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:t?.type,expectedType:e.supportedTypes.join(", ")})}async function d(e,t){const r=e.instance,a=r.portalItem;if(!a)return;const{url:n,title:o}=a,i=(0,l.e)(a,"portal-item");if("group"===r.type)return f(r,i,e);n&&"media"!==r.type&&r.read({url:n},i);const u=new s.e,p=await g(e,u,t);return p&&r.read(p,i),r.resourceReferences={portalItem:a,paths:i.readResourcePaths??[]},"subtype-group"!==r.type&&r.read({title:o},i),(0,c.t)(r,i)}async function f(e,t,r){const n=e.portalItem;if(!e.sourceIsPortalItem)return;const{title:o,type:s}=n;if("Group Layer"===s){if(!(0,u.s)(n,"Map"))throw new a.s("portal:invalid-layer-item-typekeyword","'Group Layer' item without 'Map' type keyword is not supported");return m(e)}return e.read({title:o},t),w(e,r)}async function m(e){const t=e.portalItem,r=await t.fetchData("json");if(!r)return;const a=(0,l.e)(t,"web-map");e.read(r,a),await(0,i.N)(e,r,{context:a}),e.resourceReferences={portalItem:t,paths:a.readResourcePaths??[]}}async function w(e,t){let r;const{portalItem:n}=e;if(!n)return;const o=n.type,i=t.layerModuleTypeMap;switch(o){case"Feature Service":case"Feature Collection":r=i.FeatureLayer;break;case"Stream Service":r=i.StreamLayer;break;case"Scene Service":r=i.SceneLayer;break;default:throw new a.s("portal:unsupported-item-type-as-group",`The item type '${o}' is not supported as a 'IGroupLayer'`)}const l=new s.e;let[u,c]=await Promise.all([r(),g(t,l)]),p=()=>u;if("Feature Service"===o){const t=(0,s.l)(c)?.customParameters;c=n.url?await(0,s.a)(c,n.url,l):{},p=await F(c,i)||p;const r=await P(n.url,{customParameters:t,loadContext:l});return await I(e,p,c,r)}return"Scene Service"===o&&n.url&&(c=await(0,s.o)(n,c,l)),(0,s.u)(c)>0?await I(e,p,c):await h(e,p)}async function h(e,t){const{portalItem:r}=e;if(!r?.url)return;const a=await(0,o.t)(r.url);a&&I(e,t,{layers:a.layers?.map(s.t),tables:a.tables?.map(s.t)})}async function I(e,t,r,a){let n=r.layers||[];const s=r.tables||[];if("Feature Collection"===e.portalItem?.type?(n.forEach(((e,t)=>{e.id=t,"Table"===e?.layerDefinition?.type&&s.push(e)})),n=n.filter((e=>"Table"!==e?.layerDefinition?.type))):(n.reverse(),s.reverse()),n.forEach((n=>{const o=a?.(n);if(o||!a){const a=b(e,t(n),r,n,o);e.add(a)}})),s.length){const t=await o.b.FeatureLayer();s.forEach((n=>{const o=a?.(n);if(o||!a){const a=b(e,t,r,n,o);e.tables.add(a)}}))}}function b(e,t,r,n,o){const s=e.portalItem,i={portalItem:s.clone(),layerId:n.id};null!=n.url&&(i.url=n.url);const l=new t(i);if("sourceJSON"in l&&(l.sourceJSON=o),"subtype-group"!==l.type&&"catalog"!==l.type&&(l.sublayerTitleMode="service-name"),"Feature Collection"===s.type){const e={origin:"portal-item",portal:s.portal||a.b.getDefault()};l.read(n,e);const t=r.showLegend;null!=t&&l.read({showLegend:t},e)}return l}async function g(e,t,r){if(!1===e.supportsData)return;const a=e.instance,n=a.portalItem;if(!n)return;let o=null;try{o=await n.fetchData("json",r)}catch{}if(T(a)){let e=null;const r=await v(n,o,t);if((o?.layers||o?.tables)&&r>0){if(null==a.layerId){const e=(0,s.c)(a.type),t=e?(0,s.n)(o,e)[0]:(0,s.l)(o);t&&(a.layerId=t.id)}e=S(o,a),"OrientedImageryLayer"===e?.layerType&&"oriented-imagery"===a.type&&a.supportedSourceTypes.add("Feature Layer"),e&&null!=o.showLegend&&(e.showLegend=o.showLegend)}return r>1&&"sublayerTitleMode"in a&&"service-name"!==a.sublayerTitleMode&&(a.sublayerTitleMode="item-title-and-service-name"),e}return o}async function v(e,t,r){if(t?.layers&&t?.tables)return(0,s.u)(t);const a=(0,n.d)(e.url);if(!a)return 1;const o=await r.fetchServiceMetadata(a.url.path,{customParameters:(0,s.l)(t)?.customParameters}).catch((()=>null));return(t?.layers?.length??o?.layers?.length??0)+(t?.tables?.length??o?.tables?.length??0)}function S(e,t){const{layerId:r}=t,a=e.layers?.find((e=>e.id===r))||e.tables?.find((e=>e.id===r));return a&&L(a,t)?a:null}function T(e){return"stream"!==e.type&&"layerId"in e}function L(e,t){const r="layerType"in e&&e.layerType,{type:a}=t;return!("feature"===a&&r&&"ArcGISFeatureLayer"!==e.layerType||"catalog"===a&&!r||"oriented-imagery"===a&&!r||"subtype-group"===a&&!r)}async function P(e,t){const{layersJSON:r}=await(0,o.a)(e,t);if(!r)return null;const a=[...r.layers,...r.tables];return e=>a.find((t=>t.id===e.id))}async function F(e,t){const{layers:r}=e;if(!r?.length)return;const a=new Set,n=[];for(const{layerType:l}of r){const e=l??"ArcGISFeatureLayer";if(a.has(e))continue;a.add(e);const r=t[(0,s.i)(e)];n.push(r())}const o=await Promise.all(n),i=new Map;return Array.from(a).forEach(((e,t)=>{i.set(e,o[t])})),({layerType:e})=>{const t=e??"ArcGISFeatureLayer";return i.get(t)}}}}]);
//# sourceMappingURL=1128.542614ef.js.map