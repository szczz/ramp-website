"use strict";(self["webpackChunkramp_website"]=self["webpackChunkramp_website"]||[]).push([[1262],{91262:function(e,t,a){a.r(t),a.d(t,{default:function(){return h}});var n=a(98503),l=a(82250);const s='<?xml version="1.0" encoding="UTF-8"?>\n<xsl:stylesheet version="1.0"\n                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"\n                xmlns:gmd="http://www.isotc211.org/2005/gmd"\n                xmlns:gco="http://www.isotc211.org/2005/gco"\n                xmlns:xlink="http://www.w3.org/1999/xlink"\n                xmlns:gmdl="http://www.canada.gc.ca/ns/gmdl"\n                xmlns:napec="http://www.ec.gc.ca/data_donnees/standards/schemas/napec"\n                xmlns:gml="http://www.opengis.net/gml"\n                xmlns:geonet="http://www.fao.org/geonetwork"\n                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n                xsi:schemaLocation="http://www.ec.gc.ca/data_donnees/standards/schemas/napec/schema.xsd">\n\n  <xsl:param name="catalogue_url" />\n  <xsl:decimal-format NaN=""/>\n\n  <xsl:template match="/">\n\n    <div class="metadata-view">\n\n      <xsl:if test="//gmd:abstract/gco:CharacterString/text() != \'\'">\n        <h5 class="text-xl font-bold mb-3">{{metadata.xslt.Abstract}}</h5>\n        <p>\n          <xsl:value-of select="//gmd:abstract/gco:CharacterString/text()" />\n        </p>\n      </xsl:if>\n\n      <xsl:comment>\n        <h5 class="text-xl font-bold mb-3">{{metadata.xslt.Scope}}</h5>\n        <p>{{metadata.xslt.hereBeScope}}</p>\n      </xsl:comment>\n\n      <xsl:if test="//gml:TimePeriod//* != \'\'">\n        <h5 class="text-xl font-bold mb-3">{{metadata.xslt.timePeriod}}</h5>\n        <p>\n          <xsl:value-of select="//gml:TimePeriod//gml:beginPosition" />\n          <xsl:if test="//gml:TimePeriod//gml:beginPosition/text() != \'\' and //gml:TimePeriod//gml:endPosition/text() != \'\'">\n            -\n          </xsl:if>\n          <xsl:value-of select="//gml:TimePeriod//gml:endPosition" />\n        </p>\n      </xsl:if>\n\n      <xsl:comment>\n        <xsl:if test="//gmd:supplementalInformation/gco:CharacterString/text() != \'\'">\n          <h5 class="text-xl font-bold mb-3">{{metadata.xslt.supplementalData}}</h5>\n          <p>\n            <xsl:value-of select="//gmd:supplementalInformation/gco:CharacterString/text()" />\n          </p>\n        </xsl:if>\n      </xsl:comment>\n\n      <xsl:if test="//gmd:pointOfContact//gmd:individualName/* != \'\' \n              or //gmd:pointOfContact//gmd:organisationName/gco:CharacterString/text() != \'\'\n              or //gmd:pointOfContact//gmd:positionName/gco:CharacterString/text() != \'\'\n              or //gmd:pointOfContact//gmd:electronicMailAddress/* != \'\'\n              or //gmd:pointOfContact//gmd:role/gmd:CI_RoleCode/@codeListValue != \'\'">\n        <h5 class="text-xl font-bold mb-3">{{metadata.xslt.contactInfo}}</h5>\n        <p>\n          <xsl:value-of select="//gmd:pointOfContact//gmd:individualName" />\n        </p>\n        <p>\n          <xsl:value-of select="//gmd:pointOfContact//gmd:organisationName/gco:CharacterString/text()" />\n        </p>\n        <p>\n          <xsl:value-of select="//gmd:pointOfContact//gmd:positionName/gco:CharacterString/text()" />\n        </p>\n        <p>\n          <a href="mailto:{//gmd:pointOfContact//gmd:electronicMailAddress/gco:CharacterString/text()}?Subject={//gmd:identificationInfo//gmd:title/gco:CharacterString/text()}">\n            <xsl:value-of select="//gmd:pointOfContact//gmd:electronicMailAddress" />\n          </a>\n        </p>\n        <p>\n          <xsl:variable name="roleCode" >\n            <xsl:value-of select="concat(substring(//gmd:pointOfContact//gmd:role/gmd:CI_RoleCode/@codeListValue,1,1),\n                        substring(//gmd:pointOfContact//gmd:role/gmd:CI_RoleCode/@codeListValue, 2))" />\n          </xsl:variable>\n\n          <xsl:choose>\n            <xsl:when test="$roleCode = \'resourceProvider\'">{{metadata.xslt.resourceProvider}}</xsl:when>\n            <xsl:when test="$roleCode = \'custodian\'">{{metadata.xslt.custodian}}</xsl:when>\n            <xsl:when test="$roleCode = \'owner\'">{{metadata.xslt.owner}}</xsl:when>\n            <xsl:when test="$roleCode = \'user\'">{{metadata.xslt.user}}</xsl:when>\n            <xsl:when test="$roleCode = \'distributor\'">{{metadata.xslt.distributor}}</xsl:when>\n            <xsl:when test="$roleCode = \'originator\'">{{metadata.xslt.originator}}</xsl:when>\n            <xsl:when test="$roleCode = \'pointOfContact\'">{{metadata.xslt.pointOfContact}}</xsl:when>\n            <xsl:when test="$roleCode = \'principalInvestigator\'">{{metadata.xslt.principalInvestigator}}</xsl:when>\n            <xsl:when test="$roleCode = \'processor\'">{{metadata.xslt.processor}}</xsl:when>\n            <xsl:when test="$roleCode = \'publisher\'">{{metadata.xslt.publisher}}</xsl:when>\n            <xsl:when test="$roleCode = \'author\'">{{metadata.xslt.author}}</xsl:when>\n            <xsl:when test="$roleCode = \'collaborator\'">{{metadata.xslt.collaborator}}</xsl:when>\n            <xsl:when test="$roleCode = \'editor\'">{{metadata.xslt.editor}}</xsl:when>\n            <xsl:when test="$roleCode = \'mediator\'">{{metadata.xslt.mediator}}</xsl:when>\n            <xsl:when test="$roleCode = \'rightsHolder\'">{{metadata.xslt.rightsHolder}}</xsl:when>\n          </xsl:choose>\n        </p>\n      </xsl:if>\n\n      <xsl:if test="$catalogue_url != \'\'">\n        <h5 class="text-xl font-bold mb-3">{{metadata.xslt.cataloguePage}}</h5>\n        <p>\n          <a href="{$catalogue_url}"\n             rel="external" target="_blank" class="ui-link">\n            {{metadata.xslt.metadata}}\n          </a>\n        </p>\n      </xsl:if>\n    </div>\n  </xsl:template>\n</xsl:stylesheet>\n',o='<?xml version="1.0" encoding="UTF-8"?>\n<xsl:stylesheet version="1.0"\n                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"\n                xmlns:gmd="http://www.isotc211.org/2005/gmd"\n                xmlns:gco="http://www.isotc211.org/2005/gco"\n                xmlns:xlink="http://www.w3.org/1999/xlink"\n                xmlns:gmdl="http://www.canada.gc.ca/ns/gmdl"\n                xmlns:napec="http://www.ec.gc.ca/data_donnees/standards/schemas/napec"\n                xmlns:gml="http://www.opengis.net/gml"\n                xmlns:geonet="http://www.fao.org/geonetwork"\n                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n                xsi:schemaLocation="http://www.ec.gc.ca/data_donnees/standards/schemas/napec/schema.xsd">\n\n  <xsl:param name="catalogue_url" />\n  <xsl:decimal-format NaN=""/>\n\n  <xsl:template match="/">\n\n    <div class="metadata-view">\n\n      <xsl:if test="//gmd:abstract//gmd:LocalisedCharacterString[@locale=\'#fra\']/text() != \'\'">\n        <h5 class="text-xl font-bold mb-3">{{metadata.xslt.Abstract}}</h5>\n        <p>\n          <xsl:value-of select="//gmd:abstract//gmd:LocalisedCharacterString[@locale=\'#fra\']/text()" />\n        </p>\n      </xsl:if>\n\n      <xsl:comment>\n        <h5 class="text-xl font-bold mb-3">{{metadata.xslt.Scope}}</h5>\n        <p>{{metadata.xslt.hereBeScope}}</p>\n      </xsl:comment>\n\n      <xsl:if test="//gml:TimePeriod//* != \'\'">\n        <h5 class="text-xl font-bold mb-3">{{metadata.xslt.timePeriod}}</h5>\n        <p>\n          <xsl:value-of select="//gml:TimePeriod//gml:beginPosition" />\n          <xsl:if test="//gml:TimePeriod//gml:beginPosition/text() != \'\' and //gml:TimePeriod//gml:endPosition/text() != \'\'">\n            -\n          </xsl:if>\n          <xsl:value-of select="//gml:TimePeriod//gml:endPosition" />\n        </p>\n      </xsl:if>\n\n      <xsl:comment>\n        <xsl:if test="//gmd:supplementalInformation//gmd:LocalisedCharacterString[@locale=\'#fra\']/text() != \'\'">\n          <h5 class="text-xl font-bold mb-3">{{metadata.xslt.supplementalData}}</h5>\n          <p>\n            <xsl:value-of select="//gmd:supplementalInformation//gmd:LocalisedCharacterString[@locale=\'#fra\']/text()" />\n          </p>\n        </xsl:if>\n      </xsl:comment>\n\n      <xsl:if test="//gmd:pointOfContact//gmd:individualName/* != \'\' \n              or //gmd:pointOfContact//gmd:organisationName//gmd:LocalisedCharacterString[@locale=\'#fra\']/text() != \'\'\n              or //gmd:pointOfContact//gmd:positionName//gmd:LocalisedCharacterString[@locale=\'#fra\']/text() != \'\'\n              or //gmd:pointOfContact//gmd:electronicMailAddress/* != \'\'\n              or //gmd:pointOfContact//gmd:role/gmd:CI_RoleCode/@codeListValue != \'\'">\n        <h5 class="text-xl font-bold mb-3">{{metadata.xslt.contactInfo}}</h5>\n        <p>\n          <xsl:value-of select="//gmd:pointOfContact//gmd:individualName" />\n        </p>\n        <p>\n          <xsl:value-of select="//gmd:pointOfContact//gmd:organisationName//gmd:LocalisedCharacterString[@locale=\'#fra\']/text()" />\n        </p>\n        <p>\n          <xsl:value-of select="//gmd:pointOfContact//gmd:positionName//gmd:LocalisedCharacterString[@locale=\'#fra\']/text()" />\n        </p>\n        <p>\n          <a href="mailto:{//gmd:pointOfContact//gmd:electronicMailAddress//gmd:LocalisedCharacterString[@locale=\'#fra\']/text()}?Subject={//gmd:identificationInfo//gmd:title//gmd:LocalisedCharacterString[@locale=\'#fra\']/text()}">\n            <xsl:value-of select="//gmd:pointOfContact//gmd:electronicMailAddress" />\n          </a>\n        </p>\n        <p>\n          <xsl:variable name="roleCode" >\n            <xsl:value-of select="concat(substring(//gmd:pointOfContact//gmd:role/gmd:CI_RoleCode/@codeListValue,1,1),\n                        substring(//gmd:pointOfContact//gmd:role/gmd:CI_RoleCode/@codeListValue, 2))" />\n          </xsl:variable>\n\n          <xsl:choose>\n            <xsl:when test="$roleCode = \'resourceProvider\'">{{metadata.xslt.resourceProvider}}</xsl:when>\n            <xsl:when test="$roleCode = \'custodian\'">{{metadata.xslt.custodian}}</xsl:when>\n            <xsl:when test="$roleCode = \'owner\'">{{metadata.xslt.owner}}</xsl:when>\n            <xsl:when test="$roleCode = \'user\'">{{metadata.xslt.user}}</xsl:when>\n            <xsl:when test="$roleCode = \'distributor\'">{{metadata.xslt.distributor}}</xsl:when>\n            <xsl:when test="$roleCode = \'originator\'">{{metadata.xslt.originator}}</xsl:when>\n            <xsl:when test="$roleCode = \'pointOfContact\'">{{metadata.xslt.pointOfContact}}</xsl:when>\n            <xsl:when test="$roleCode = \'principalInvestigator\'">{{metadata.xslt.principalInvestigator}}</xsl:when>\n            <xsl:when test="$roleCode = \'processor\'">{{metadata.xslt.processor}}</xsl:when>\n            <xsl:when test="$roleCode = \'publisher\'">{{metadata.xslt.publisher}}</xsl:when>\n            <xsl:when test="$roleCode = \'author\'">{{metadata.xslt.author}}</xsl:when>\n            <xsl:when test="$roleCode = \'collaborator\'">{{metadata.xslt.collaborator}}</xsl:when>\n            <xsl:when test="$roleCode = \'editor\'">{{metadata.xslt.editor}}</xsl:when>\n            <xsl:when test="$roleCode = \'mediator\'">{{metadata.xslt.mediator}}</xsl:when>\n            <xsl:when test="$roleCode = \'rightsHolder\'">{{metadata.xslt.rightsHolder}}</xsl:when>\n          </xsl:choose>\n        </p>\n      </xsl:if>\n\n      <xsl:if test="$catalogue_url != \'\'">\n        <h5 class="text-xl font-bold mb-3">{{metadata.xslt.cataloguePage}}</h5>\n        <p>\n          <a href="{$catalogue_url}"\n             rel="external" target="_blank" class="ui-link">\n            {{metadata.xslt.metadata}}\n          </a>\n        </p>\n      </xsl:if>\n    </div>\n  </xsl:template>\n</xsl:stylesheet>\n',r={key:0},d={class:"flex justify-center"},i={key:0,class:"flex flex-col justify-center text-center"},m=["innerHTML"],c=["innerHTML"],x={key:3,class:"flex flex-col justify-center text-center"},g={class:"text-xl mt-20"},p={key:1,class:"p-5"},h=(0,n.dM)({__name:"screen",props:{panel:{type:Object,required:!0},payload:{type:Object,required:!0}},setup(e){const t=(0,n.fa)(),{t:a}=(0,n.dN)(),h=(0,n.e2)("iApi"),u=(0,n.e3)(),f=e,w=(0,n.dQ)((()=>t.status)),C=(0,n.dQ)((()=>t.response)),b=(0,n.e3)(!1),v=(0,n.gd)({}),y=(0,n.gd)([]),$=(0,n.gd)([]);(0,n.e8)((()=>{S(),y.push(h.event.on(n.dE.LAYER_REMOVE,(e=>{f.payload.layer?.uid===e.uid&&f.panel.close()}))),$.push((0,n.e7)((()=>f.payload.layer.uid),((e,t)=>{e!==t&&S()})))})),(0,n.e9)((()=>{y.forEach((e=>h.event.off(e))),$.forEach((e=>e()))}));const S=()=>{b.value=void 0!==f.payload.layer&&!f.payload.layer.isRemoved,"xml"===f.payload.type?P(f.payload.url,[]).then((e=>{if(t.status="success",null!==e){const n=document.createElement("div");n.appendChild(_(`${e.firstElementChild.outerHTML}`)),(f.payload.catalogueUrl||f.payload.url)&&n.appendChild(_(`<h5 class="text-xl font-bold mb-3">${a("metadata.xslt.metadata")}</h5>`)),f.payload.catalogueUrl&&n.appendChild(_(`<p><a style="color: blue;" href="${f.payload.catalogueUrl}" target="_blank">${a("metadata.xslt.cataloguePage")}</a></p>`)),n.appendChild(_(`<p><a style="color: blue;" href="${f.payload.url}" target="_blank">${a("metadata.xslt.metadataPage")}</a> (xml)</p>`)),t.response=n.outerHTML}})):"html"===f.payload.type?O(f.payload.url).then((e=>{t.status=e.status,t.response=e.response})):"md"===f.payload.type&&O(f.payload.url).then((e=>{t.status=e.status,t.response=(0,l.m)(e.response)}))},P=(e,t)=>{let n="en"===h.language?s:o;return n=n.replace(/\{\{([\w.]+)\}\}/g,((e,t)=>a(t))),v[e]?Promise.resolve(L(v[e],n,t)):O(e).then((a=>(v[e]=a.response,L(v[e],n,t))))},L=(e,t,a)=>{let n=null;if(window.XSLTProcessor){const l=new window.XSLTProcessor,s=new DOMParser,o=s.parseFromString(e,"text/xml"),r=s.parseFromString(t,"text/xml");l.importStylesheet(r),a&&a.forEach((e=>l.setParameter("",e.key,e.value||""))),n=l.transformToFragment(o,document)}return n},O=e=>new Promise((t=>{const a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="text",a.onload=()=>{200===a.status?t({status:"success",response:a.response}):t({status:"error",response:"Could not load results from remote service."})},a.onerror=()=>{t({status:"error",response:"Could not load results from remote service."})},a.send()}));function _(e){const t=document.createElement("div");return t.innerHTML=e,t}return(t,l)=>{const s=(0,n.dR)("panel-screen");return(0,n.dU)(),(0,n.dV)(s,{panel:e.panel,ref_key:"el",ref:u},{header:(0,n.dW)((()=>[(0,n.ea)((0,n.d$)((0,n.e0)(a)("metadata.title"))+": "+(0,n.d$)(e.payload.layerName),1)])),content:(0,n.dW)((()=>[b.value?((0,n.dU)(),(0,n.dY)("div",r,[(0,n.dX)("div",d,["loading"==w.value?((0,n.dU)(),(0,n.dY)("div",i,(0,n.d$)((0,n.e0)(a)("metadata.loading")),1)):"xml"===e.payload.type&&"success"==w.value?((0,n.dU)(),(0,n.dY)("div",{key:1,innerHTML:C.value,class:"flex flex-col justify-center xml-content"},null,8,m)):"html"!==e.payload.type&&"md"!==e.payload.type||"success"!=w.value?((0,n.dU)(),(0,n.dY)("div",x,[l[0]||(l[0]=(0,n.dX)("img",{src:"https://i.imgur.com/fA5EqV6.png"},null,-1)),(0,n.dX)("span",g,(0,n.d$)((0,n.e0)(a)("metadata.error")),1)])):((0,n.dU)(),(0,n.dY)("div",{key:2,innerHTML:C.value,class:"flex flex-col justify-center max-w-full metadata-view"},null,8,c))])])):((0,n.dU)(),(0,n.dY)("div",p,[(0,n.dX)("span",null,(0,n.d$)((0,n.e0)(a)("metadata.label.no.layer")),1)]))])),_:1},8,["panel"])}}})}}]);
//# sourceMappingURL=1262.d3c12605.js.map