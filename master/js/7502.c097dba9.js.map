{"version":3,"file":"js/7502.c097dba9.js","mappings":"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","sources":["webpack://ramp-website/./node_modules/ramp-pcar/dist/esDynamic/ProgramTemplate-pHLxykFI.js","webpack://ramp-website/./node_modules/ramp-pcar/dist/esDynamic/StyleDefinition-Ct4HIk9T.js","webpack://ramp-website/./node_modules/ramp-pcar/dist/esDynamic/VertexArrayObject-DSmwcudn.js","webpack://ramp-website/./node_modules/ramp-pcar/dist/esDynamic/WGLContainer-B--kJKFF.js","webpack://ramp-website/./node_modules/ramp-pcar/dist/esDynamic/config-nuMERBvb.js","webpack://ramp-website/./node_modules/ramp-pcar/dist/esDynamic/vec3f32-BS0cezmI.js"],"sourcesContent":["import{r as o}from\"./Program-CnSsU68d.js\";let c=class{constructor(e){this._readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e,t=new Map){if(t.has(e))return t.get(e);const r=this._read(e);if(!r)throw new Error(`cannot find shader file ${e}`);const l=/^[^\\S\\n]*#include\\s+<(\\S+)>[^\\S\\n]?/gm;let s=l.exec(r);const i=[];for(;s!=null;)i.push({path:s[1],start:s.index,length:s[0].length}),s=l.exec(r);let h=0,n=\"\";return i.forEach(a=>{n+=r.slice(h,a.start),n+=t.has(a.path)?\"\":this._resolve(a.path,t),h=a.start+a.length}),n+=r.slice(h),t.set(e,n),n}_read(e){return this._readFile(e)}};function d(e,t,r=\"\"){return new o(e,r+t.shaders.vertexShader,r+t.shaders.fragmentShader,t.attributes)}export{d as a,c as e};\n","import{e as f,n as y}from\"./enums-CpSG_SL3.js\";var p,a,u,n,m,l,o,i,r;(function(e){e[e.BACKGROUND=0]=\"BACKGROUND\",e[e.FILL=1]=\"FILL\",e[e.LINE=2]=\"LINE\",e[e.SYMBOL=3]=\"SYMBOL\",e[e.CIRCLE=4]=\"CIRCLE\"})(p||(p={})),function(e){e[e.VISIBLE=0]=\"VISIBLE\",e[e.NONE=1]=\"NONE\"}(a||(a={})),function(e){e[e.POINT=0]=\"POINT\",e[e.LINE=1]=\"LINE\",e[e.LINE_CENTER=2]=\"LINE_CENTER\"}(u||(u={})),function(e){e[e.MAP=0]=\"MAP\",e[e.VIEWPORT=1]=\"VIEWPORT\",e[e.AUTO=2]=\"AUTO\"}(n||(n={})),function(e){e[e.AUTO=0]=\"AUTO\",e[e.LEFT=1]=\"LEFT\",e[e.CENTER=2]=\"CENTER\",e[e.RIGHT=3]=\"RIGHT\"}(m||(m={})),function(e){e[e.CENTER=0]=\"CENTER\",e[e.LEFT=1]=\"LEFT\",e[e.RIGHT=2]=\"RIGHT\",e[e.TOP=3]=\"TOP\",e[e.BOTTOM=4]=\"BOTTOM\",e[e.TOP_LEFT=5]=\"TOP_LEFT\",e[e.TOP_RIGHT=6]=\"TOP_RIGHT\",e[e.BOTTOM_LEFT=7]=\"BOTTOM_LEFT\",e[e.BOTTOM_RIGHT=8]=\"BOTTOM_RIGHT\"}(l||(l={})),function(e){e[e.NONE=0]=\"NONE\",e[e.UPPERCASE=1]=\"UPPERCASE\",e[e.LOWERCASE=2]=\"LOWERCASE\"}(o||(o={})),function(e){e[e.MAP=0]=\"MAP\",e[e.VIEWPORT=1]=\"VIEWPORT\"}(i||(i={})),function(e){e[e.HORIZONTAL=0]=\"HORIZONTAL\",e[e.VERTICAL=1]=\"VERTICAL\"}(r||(r={}));class t{}t.backgroundLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:a.VISIBLE}},t.fillLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:a.VISIBLE}},t.lineLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:a.VISIBLE},\"line-cap\":{type:\"enum\",values:[\"butt\",\"round\",\"square\"],default:f.BUTT},\"line-join\":{type:\"enum\",values:[\"bevel\",\"round\",\"miter\"],default:y.MITER},\"line-miter-limit\":{type:\"number\",default:2},\"line-round-limit\":{type:\"number\",default:1.05}},t.symbolLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:a.VISIBLE},\"symbol-avoid-edges\":{type:\"boolean\",default:!1},\"symbol-placement\":{type:\"enum\",values:[\"point\",\"line\",\"line-center\"],default:u.POINT},\"symbol-sort-key\":{type:\"number\",default:-1},\"symbol-spacing\":{type:\"number\",minimum:1,default:250},\"icon-allow-overlap\":{type:\"boolean\",default:!1},\"icon-anchor\":{type:\"enum\",values:[\"center\",\"left\",\"right\",\"top\",\"bottom\",\"top-left\",\"top-right\",\"bottom-left\",\"bottom-right\"],default:l.CENTER},\"icon-ignore-placement\":{type:\"boolean\",default:!1},\"icon-image\":{type:\"string\"},\"icon-keep-upright\":{type:\"boolean\",default:!1},\"icon-offset\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"icon-optional\":{type:\"boolean\",default:!1},\"icon-padding\":{type:\"number\",minimum:0,default:2},\"icon-rotate\":{type:\"number\",default:0},\"icon-rotation-alignment\":{type:\"enum\",values:[\"map\",\"viewport\",\"auto\"],default:n.AUTO},\"icon-size\":{type:\"number\",minimum:0,default:1},\"text-allow-overlap\":{type:\"boolean\",default:!1},\"text-anchor\":{type:\"enum\",values:[\"center\",\"left\",\"right\",\"top\",\"bottom\",\"top-left\",\"top-right\",\"bottom-left\",\"bottom-right\"],default:l.CENTER},\"text-field\":{type:\"string\"},\"text-font\":{type:\"array\",value:\"string\",default:[\"Open Sans Regular\",\"Arial Unicode MS Regular\"]},\"text-ignore-placement\":{type:\"boolean\",default:!1},\"text-justify\":{type:\"enum\",values:[\"auto\",\"left\",\"center\",\"right\"],default:m.CENTER},\"text-keep-upright\":{type:\"boolean\",default:!0},\"text-letter-spacing\":{type:\"number\",default:0},\"text-line-height\":{type:\"number\",default:1.2},\"text-max-angle\":{type:\"number\",minimum:0,default:45},\"text-max-width\":{type:\"number\",minimum:0,default:10},\"text-offset\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"text-optional\":{type:\"boolean\",default:!1},\"text-padding\":{type:\"number\",minimum:0,default:2},\"text-rotate\":{type:\"number\",default:0},\"text-rotation-alignment\":{type:\"enum\",values:[\"map\",\"viewport\",\"auto\"],default:n.AUTO},\"text-size\":{type:\"number\",minimum:0,default:16},\"text-transform\":{type:\"enum\",values:[\"none\",\"uppercase\",\"lowercase\"],default:o.NONE},\"text-writing-mode\":{type:\"array\",value:\"enum\",values:[\"horizontal\",\"vertical\"],default:[r.HORIZONTAL]}},t.circleLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:a.VISIBLE}},t.backgroundPaintDefinition={\"background-color\":{type:\"color\",default:[0,0,0,1]},\"background-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"background-pattern\":{type:\"string\"}},t.fillPaintDefinition={\"fill-antialias\":{type:\"boolean\",default:!0},\"fill-color\":{type:\"color\",default:[0,0,0,1]},\"fill-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"fill-outline-color\":{type:\"color\",default:[0,0,0,0]},\"fill-pattern\":{type:\"string\"},\"fill-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"fill-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:i.MAP}},t.linePaintDefinition={\"line-blur\":{type:\"number\",minimum:0,default:0},\"line-color\":{type:\"color\",default:[0,0,0,1]},\"line-dasharray\":{type:\"array\",value:\"number\",default:[]},\"line-gap-width\":{type:\"number\",minimum:0,default:0},\"line-offset\":{type:\"number\",default:0},\"line-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"line-pattern\":{type:\"string\"},\"line-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"line-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:i.MAP},\"line-width\":{type:\"number\",minimum:0,default:1}},t.symbolPaintDefinition={\"icon-color\":{type:\"color\",default:[0,0,0,1]},\"icon-halo-blur\":{type:\"number\",minimum:0,default:0},\"icon-halo-color\":{type:\"color\",default:[0,0,0,0]},\"icon-halo-width\":{type:\"number\",minimum:0,default:0},\"icon-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"icon-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"icon-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:i.MAP},\"text-color\":{type:\"color\",default:[0,0,0,1]},\"text-halo-blur\":{type:\"number\",minimum:0,default:0},\"text-halo-color\":{type:\"color\",default:[0,0,0,0]},\"text-halo-width\":{type:\"number\",minimum:0,default:0},\"text-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"text-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"text-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:i.MAP}},t.rasterPaintDefinition={\"raster-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"raster-hue-rotate\":{type:\"number\",default:0},\"raster-brightness-min\":{type:\"number\",minimum:0,maximum:1,default:0},\"raster-brightness-max\":{type:\"number\",minimum:0,maximum:1,default:1},\"raster-saturation\":{type:\"number\",minimum:-1,maximum:1,default:0},\"raster-contrast\":{type:\"number\",minimum:-1,maximum:1,default:0},\"raster-fade-duration\":{type:\"number\",minimum:0,default:300}},t.circlePaintDefinition={\"circle-blur\":{type:\"number\",minimum:0,default:0},\"circle-color\":{type:\"color\",default:[0,0,0,1]},\"circle-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"circle-radius\":{type:\"number\",minimum:0,default:5},\"circle-stroke-color\":{type:\"color\",default:[0,0,0,1]},\"circle-stroke-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"circle-stroke-width\":{type:\"number\",minimum:0,default:0},\"circle-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"circle-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:i.MAP}};export{p as a,t as f,a as i,n as l,l as m,u as n,o,r as p,i as r,m as u};\n","import{cE as u,cF as a,n as _}from\"./main-I34c1W55.js\";import{V as h}from\"./enums-DBi1-Mm2.js\";import{E as f}from\"./Texture-BwIsV9BJ.js\";const n=()=>_.getLogger(\"esri.views.webgl.VertexArrayObject\");let c=class{constructor(t,e,i,r,s=null){this._context=t,this._locations=e,this._layout=i,this._buffers=r,this._indexBuffer=s,this._glName=null,this._initialized=!1}get glName(){return this._glName}get context(){return this._context}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}get byteSize(){return Array.from(this._buffers.values()).reduce((t,e)=>t+e.usedMemory,this._indexBuffer!=null?this._indexBuffer.usedMemory:0)}get layout(){return this._layout}get locations(){return this._locations}get usedMemory(){return this.byteSize+(Object.keys(this._buffers).length+(this._indexBuffer?1:0))*u}dispose(){this._context?(this._context.getBoundVAO()===this&&this._context.bindVAO(null),this._buffers.forEach(t=>t.dispose()),this._buffers.clear(),this._indexBuffer=a(this._indexBuffer),this.disposeVAOOnly()):(this._glName||Object.getOwnPropertyNames(this._buffers).length>0)&&n().warn(\"Leaked WebGL VAO\")}disposeVAOOnly(){this._glName&&(this._context.gl.deleteVertexArray(this._glName),this._glName=null,this._context.instanceCounter.decrement(h.VertexArrayObject,this)),this._context=null}initialize(){if(this._initialized)return;const{gl:t}=this._context,e=t.createVertexArray();t.bindVertexArray(e),this._bindLayout(),t.bindVertexArray(null),this._glName=e,this._context.instanceCounter.increment(h.VertexArrayObject,this),this._initialized=!0}bind(){this.initialize(),this._context.gl.bindVertexArray(this.glName)}_bindLayout(){const{_buffers:t,_layout:e,_indexBuffer:i}=this;t||n().error(\"Vertex buffer dictionary is empty!\");const r=this._context.gl;this._buffers.forEach((s,l)=>{const o=e.get(l);o?f(this._context,this._locations,s,o):n().error(\"Vertex element descriptor is empty!\")}),i!=null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,i.glName)}unbind(){this.initialize(),this._context.gl.bindVertexArray(null)}};export{c as o};\n","import{a$ as j,af as de,C as Oe,n as _e,cO as Ee,s as me,aE as gt}from\"./main-I34c1W55.js\";import{w as Ae,a as ne,f as ht,g as xt,h as yt,i as St,Z as N,_ as Ce,$ as Pe}from\"./definitions-DJSdSb77.js\";import{e as Tt,b as bt,h as De,f as R,n as se,s as ce,r as It}from\"./LabelMetric-D12aZWIt.js\";import{E as G}from\"./BufferObject-DVFpiBKH.js\";import{C as A,F as Z,E as C,L as w,R as F,O as B,I as Q,N as Ot,D as Et}from\"./enums-DBi1-Mm2.js\";import{o as K}from\"./VertexArrayObject-DSmwcudn.js\";import{t as ee}from\"./VertexElementDescriptor-BAy1DPb3.js\";import{e as At,a as ue}from\"./ProgramTemplate-pHLxykFI.js\";import{d as Ct,n as ve,e as Pt}from\"./Tile-DezsaYvC.js\";import{r as Re,i as pe,s as Dt}from\"./mat3-CC4Foazl.js\";import{e as te,N as ge,S as Le,o as Rt,q as Lt,E as ie}from\"./MapView-BZqtLJZm.js\";import{o as Mt,N as zt}from\"./vec32-CMy-QD9I.js\";import{n as Vt}from\"./vec3f32-BS0cezmI.js\";import{e as Me,n as Nt}from\"./Container-C0Mw67db.js\";import{e as wt}from\"./TileKey-CV-4I4ml.js\";import{p as Ft,m as Bt}from\"./Texture-BwIsV9BJ.js\";import{r as J,l as Y,n as ze}from\"./StyleDefinition-Ct4HIk9T.js\";import{n as Ut,t as Gt}from\"./vec2f32-CVhmN3Me.js\";import{e as Ve}from\"./config-nuMERBvb.js\";import{e as Yt}from\"./earcut-XDcq3zAf.js\";import{o as kt}from\"./vec2-tHZ6OaOy.js\";import{n as Ne}from\"./vec2f64-CeODonrJ.js\";import{Q as Ht,K as Wt}from\"./featureConversionUtils-CpxfICn8.js\";import{s as we}from\"./OptimizedFeature-EIithYlr.js\";let Fe=class{constructor(i,e){this._rctx=i,this._attributes=[{name:\"position\",offset:0,type:A.SHORT,count:2}],this.layout={hash:Tt(this._attributes),attributes:this._attributes,stride:4},this._vertexBuffer=G.createVertex(i,Z.STATIC_DRAW,new Uint16Array(e)),this._vao=new K(i,new Map([[\"a_position\",0]]),new Map([[\"geometry\",[new ee(\"a_position\",2,A.SHORT,0,4)]]]),new Map([[\"geometry\",this._vertexBuffer]])),this._count=e.length/2}bind(){this._rctx.bindVAO(this._vao)}unbind(){this._rctx.bindVAO(null)}dispose(){this._vao.dispose()}draw(){this._rctx.bindVAO(this._vao),this._rctx.drawArrays(C.TRIANGLE_STRIP,0,this._count)}},k=class{constructor(){this.name=this.constructor.name||\"UnnamedBrush\",this.brushEffect=null}prepareState(i,e){}draw(i,e,t){}drawMany(i,e,t){for(const o of e)o.visible&&this.draw(i,o,t)}};const he={nearest:{defines:[],samplingMode:w.NEAREST,mips:!1},bilinear:{defines:[],samplingMode:w.LINEAR,mips:!1},bicubic:{defines:[\"bicubic\"],samplingMode:w.LINEAR,mips:!1},trilinear:{defines:[],samplingMode:w.LINEAR_MIPMAP_LINEAR,mips:!0}},Zt=(i,e,t)=>{if(t.samplingMode===\"dynamic\"){const{state:o}=i,a=e.resolution/e.pixelRatio/o.resolution,r=Math.round(i.pixelRatio)!==i.pixelRatio,l=a>1.05||a<.95;return o.rotation||l||r||e.isSourceScaled||e.rotation?he.bilinear:he.nearest}return he[t.samplingMode]};let Kt=class extends k{constructor(){super(...arguments),this._desc={vsPath:\"raster/bitmap\",fsPath:\"raster/bitmap\",attributes:new Map([[\"a_pos\",0]])}}dispose(){this._quad&&this._quad.dispose()}prepareState({context:i}){i.setBlendingEnabled(!0),i.setColorMask(!0,!0,!0,!0),i.setStencilWriteMask(0),i.setStencilTestEnabled(!0)}draw(i,e){const{context:t,renderingOptions:o,painter:a,requestRender:r,allowDelayedRender:l}=i;if(!e.source||!e.isReady)return;const n=Zt(i,e,o),s=a.materialManager.getProgram(this._desc,n.defines);if(l&&r!=null&&!s.compiled)return void r();i.timeline.begin(this.name),e.blendFunction===\"additive\"?t.setBlendFunctionSeparate(F.ONE,F.ONE,F.ONE,F.ONE):t.setBlendFunctionSeparate(F.ONE,F.ONE_MINUS_SRC_ALPHA,F.ONE,F.ONE_MINUS_SRC_ALPHA),t.setStencilFunction(B.EQUAL,e.stencilRef,255),this._quad||(this._quad=new Fe(t,[0,0,1,0,0,1,1,1]));const{coordScale:u,computedOpacity:c,transforms:f}=e;e.setSamplingProfile(n),e.bind(i.context,Ae),t.useProgram(s),s.setUniformMatrix3fv(\"u_dvsMat3\",f.displayViewScreenMat3),s.setUniform1i(\"u_texture\",Ae),s.setUniform2fv(\"u_coordScale\",u),s.setUniform1f(\"u_opacity\",c),this._quad.draw(),i.timeline.end(this.name)}};function Be(){return new Float32Array(4)}function qt(i){const e=new Float32Array(4);return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e}function H(i,e,t,o){const a=new Float32Array(4);return a[0]=i,a[1]=e,a[2]=t,a[3]=o,a}function jt(i,e){return new Float32Array(i,e,4)}function Ue(){return Be()}function Ge(){return H(1,1,1,1)}function Ye(){return H(1,0,0,0)}function ke(){return H(0,1,0,0)}function He(){return H(0,0,1,0)}function We(){return H(0,0,0,1)}const Xt=Ue(),$t=Ge(),Qt=Ye(),Jt=ke(),ei=He(),ti=We();Object.freeze(Object.defineProperty({__proto__:null,ONES:$t,UNIT_W:ti,UNIT_X:Qt,UNIT_Y:Jt,UNIT_Z:ei,ZEROS:Xt,clone:qt,create:Be,createView:jt,fromValues:H,ones:Ge,unitW:We,unitX:Ye,unitY:ke,unitZ:He,zeros:Ue},Symbol.toStringTag,{value:\"Module\"}));const ii={background:{\"background.frag\":`uniform lowp vec4 u_color;\nvoid main() {\ngl_FragColor = u_color;\n}`,\"background.vert\":`attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump vec2 u_coord_range;\nuniform mediump float u_depth;\nvoid main() {\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\n}`},bitBlit:{\"bitBlit.frag\":`uniform lowp sampler2D u_tex;\nuniform lowp float u_opacity;\nvarying mediump vec2 v_uv;\nvoid main() {\nlowp vec4 color = texture2D(u_tex, v_uv);\ngl_FragColor = color * u_opacity;\n}`,\"bitBlit.vert\":`attribute vec2 a_pos;\nattribute vec2 a_tex;\nvarying mediump vec2 v_uv;\nvoid main(void) {\ngl_Position = vec4(a_pos , 0.0, 1.0);\nv_uv = a_tex;\n}`},debug:{overlay:{\"overlay.frag\":`precision mediump float;\nvarying vec4 v_color;\nvoid main(void) {\ngl_FragColor = v_color;\n}`,\"overlay.vert\":`attribute vec3 a_PositionAndFlags;\nuniform mat3 u_dvsMat3;\nuniform vec4 u_colors[4];\nuniform float u_opacities[4];\nvarying vec4 v_color;\nvoid main(void) {\nvec2 position = a_PositionAndFlags.xy;\nfloat flags = a_PositionAndFlags.z;\nint colorIndex = int(mod(flags, 4.0));\nvec4 color;\nfor (int i = 0; i < 4; i++) {\ncolor = u_colors[i];\nif (i == colorIndex) {\nbreak;\n}\n}\nint opacityIndex = int(mod(floor(flags / 4.0), 4.0));\nfloat opacity;\nfor (int i = 0; i < 4; i++) {\nopacity = u_opacities[i];\nif (i == opacityIndex) {\nbreak;\n}\n}\nv_color = color * opacity;\ngl_Position = vec4((u_dvsMat3 * vec3(position, 1.0)).xy, 0.0, 1.0);\n}`}},dot:{dot:{\"dot.frag\":`precision mediump float;\nvarying vec4 v_color;\nvarying float v_dotRatio;\nvarying float v_invEdgeRatio;\nuniform highp float u_tileZoomFactor;\nvoid main()\n{\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\ngl_FragColor = v_color * alpha;\n}`,\"dot.vert\":`precision highp float;\nattribute vec2 a_pos;\nuniform sampler2D u_texture;\nuniform highp mat3 u_dvsMat3;\nuniform highp float u_tileZoomFactor;\nuniform highp float u_dotSize;\nuniform highp float u_pixelRatio;\nvarying vec2 v_pos;\nvarying vec4 v_color;\nvarying float v_dotRatio;\nvarying float v_invEdgeRatio;\nconst float EPSILON = 0.000001;\nvoid main()\n{\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\n0., -1., 0.,\n0., 1., 1.  );\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\nv_color = texture2D(u_texture, texCoords.xy);\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\nfloat z = 0.;\nz += 2.0 * step(v_color.a, EPSILON);\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\nv_dotRatio = u_dotSize / gl_PointSize;\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\n}`}},filtering:{\"bicubic.glsl\":`vec4 computeWeights(float v) {\nfloat b = 1.0 / 6.0;\nfloat v2 = v * v;\nfloat v3 = v2 * v;\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\nfloat w3 = b * v3;\nreturn vec4(w0, w1, w2, w3);\n}\nvec4 bicubicOffsetsAndWeights(float v) {\nvec4 w = computeWeights(v);\nfloat g0 = w.x + w.y;\nfloat g1 = w.z + w.w;\nfloat h0 = 1.0 - (w.y / g0) + v;\nfloat h1 = 1.0 + (w.w / g1) - v;\nreturn vec4(h0, h1, g0, g1);\n}\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\nvec2 texel = coords * texSize - 0.5;\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\nvec2 coords10 = coords + hgX.x * eX;\nvec2 coords00 = coords - hgX.y * eX;\nvec2 coords11 = coords10 + hgY.x * eY;\nvec2 coords01 = coords00 + hgY.x * eY;\ncoords10 = coords10 - hgY.y * eY;\ncoords00 = coords00 - hgY.y * eY;\nvec4 color00 = texture2D(sampler, coords00);\nvec4 color10 = texture2D(sampler, coords10);\nvec4 color01 = texture2D(sampler, coords01);\nvec4 color11 = texture2D(sampler, coords11);\ncolor00 = mix(color00, color01, hgY.z);\ncolor10 = mix(color10, color11, hgY.z);\ncolor00 = mix(color00, color10, hgX.z);\nreturn color00;\n}`,\"bilinear.glsl\":`vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 texelStart = floor(coords * texSize);\nvec2 coord0 = texelStart / texSize;\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\nvec4 color0 = texture2D(sampler, coord0);\nvec4 color1 = texture2D(sampler, coord1);\nvec4 color2 = texture2D(sampler, coord2);\nvec4 color3 = texture2D(sampler, coord3);\nvec2 blend = fract(coords * texSize);\nvec4 color01 = mix(color0, color1, blend.x);\nvec4 color23 = mix(color2, color3, blend.x);\nvec4 color = mix(color01, color23, blend.y);\n#ifdef NNEDGE\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\n#endif\nreturn color;\n}`,\"epx.glsl\":`vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\nvec2 invSize = 1.0 / texSize;\nvec2 texel = coords * texSize;\nvec2 texel_i = floor(texel);\nvec2 texel_frac = fract(texel);\nvec4 colorP = texture2D(sampler, texel_i * invSize);\nvec4 colorP1 = vec4(colorP);\nvec4 colorP2 = vec4(colorP);\nvec4 colorP3 = vec4(colorP);\nvec4 colorP4 = vec4(colorP);\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\ncolorP1 = colorA;\n}\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\ncolorP2 = colorB;\n}\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\ncolorP3 = colorC;\n}\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\ncolorP4 = colorD;\n}\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\nreturn mix(colorP12, colorP34, texel_frac.y);\n}`},heatmap:{heatmapResolve:{\"heatmapResolve.frag\":`precision highp float;\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\n#define COMPRESSION_FACTOR 4.0\n#else\n#define COMPRESSION_FACTOR 1.0\n#endif\nuniform sampler2D u_texture;\nuniform sampler2D u_gradient;\nuniform vec2 u_densityMinAndInvRange;\nuniform float u_densityNormalization;\nvarying vec2 v_uv;\nvoid main() {\nvec4 data = texture2D(u_texture, v_uv);\nfloat density = data.r * COMPRESSION_FACTOR;\ndensity *= u_densityNormalization;\ndensity = (density - u_densityMinAndInvRange.x) * u_densityMinAndInvRange.y;\nvec4 color = texture2D(u_gradient, vec2(density, 0.5));\ngl_FragColor = vec4(color.rgb * color.a, color.a);\n}`,\"heatmapResolve.vert\":`precision highp float;\nattribute vec2 a_pos;\nvarying vec2 v_uv;\nvoid main() {\nv_uv = a_pos;\ngl_Position = vec4(a_pos * 2.0 - 1.0, 1., 1.);\n}`}},highlight:{\"blur.frag\":`varying mediump vec2 v_texcoord;\nuniform mediump vec4 u_direction;\nuniform mediump mat4 u_channelSelector;\nuniform mediump float u_sigma;\nuniform sampler2D u_texture;\nmediump float gauss1(mediump vec2 dir) {\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\n}\nmediump vec4 selectChannel(mediump vec4 sample) {\nreturn u_channelSelector * sample;\n}\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\nmediump float w = gauss1(i * u_direction.xy);\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\nweight += w;\n}\nvoid main(void) {\nmediump float tot = 0.0;\nmediump float weight = 0.0;\naccumGauss1(-5.0, tot, weight);\naccumGauss1(-4.0, tot, weight);\naccumGauss1(-3.0, tot, weight);\naccumGauss1(-2.0, tot, weight);\naccumGauss1(-1.0, tot, weight);\naccumGauss1(0.0, tot, weight);\naccumGauss1(1.0, tot, weight);\naccumGauss1(2.0, tot, weight);\naccumGauss1(3.0, tot, weight);\naccumGauss1(4.0, tot, weight);\naccumGauss1(5.0, tot, weight);\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\n}`,\"highlight.frag\":`varying mediump vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform mediump float u_sigma;\nuniform sampler2D u_shade;\nuniform mediump vec2 u_minMaxDistance;\nmediump float estimateDistance() {\nmediump float y = texture2D(u_texture, v_texcoord)[3];\nconst mediump float y0 = 0.5;\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\nmediump float d = (y - y0) / m0;\nreturn d;\n}\nmediump vec4 shade(mediump float d) {\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\n}\nvoid main(void) {\nmediump float d = estimateDistance();\ngl_FragColor = shade(d);\n}`,\"textured.vert\":`attribute mediump vec2 a_position;\nattribute mediump vec2 a_texcoord;\nvarying mediump vec2 v_texcoord;\nvoid main(void) {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_texcoord = a_texcoord;\n}`},materials:{\"attributeData.glsl\":`uniform highp sampler2D filterFlags;\nuniform highp sampler2D animation;\nuniform highp sampler2D gpgpu;\nuniform highp sampler2D visualVariableData;\nuniform highp sampler2D dataDriven0;\nuniform highp sampler2D dataDriven1;\nuniform highp sampler2D dataDriven2;\nuniform float size;\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\nhighp vec3  texel = unpackDisplayIdTexel(id);\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\nhighp float col = mod(u32, size);\nhighp float row = (u32 - col) / size;\nhighp float u = col / size;\nhighp float v = row / size;\nreturn vec2(u, v);\n}\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(size));\n}\nhighp vec4 getFilterData(in highp vec3 id) {\nvec2 coords = getAttributeDataCoords(id);\nreturn texture2D(filterFlags, coords);\n}\nhighp vec4 getAnimation(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(animation, coords);\n}\nhighp vec4 getVisualVariableData(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(visualVariableData, coords);\n}\nhighp vec4 getDataDriven0(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(dataDriven0, coords);\n}\nhighp vec4 getDataDriven1(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(dataDriven1, coords);\n}\nhighp vec4 getGPGPU(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(gpgpu, coords);\n}\nhighp vec4 getDataDriven2(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(dataDriven2, coords);\n}\nfloat u88VVToFloat(in vec2 v) {\nbool isMagic = v.x == 255.0 && v.y == 255.0;\nif (isMagic) {\nreturn NAN_MAGIC_NUMBER;\n}\nreturn (v.x + v.y * float(0x100)) - 32768.0;\n}`,\"barycentric.glsl\":`float inTriangle(vec3 bary) {\nvec3 absBary = abs(bary);\nreturn step((absBary.x + absBary.y + absBary.z), 1.05);\n}\nvec3 xyToBarycentric(in vec2 pos, in vec2 v0,  in vec2 v1, in vec2 v2) {\nmat3 xyToBarycentricMat3 = mat3(\nv1.x * v2.y - v2.x * v1.y, v2.x * v0.y - v0.x * v2.y, v0.x * v1.y - v1.x * v0.y,\nv1.y - v2.y, v2.y - v0.y, v0.y - v1.y,\nv2.x - v1.x, v0.x - v2.x, v1.x - v0.x\n);\nfloat A2 = v0.x * (v1.y - v2.y) + v1.x * (v2.y - v0.y) + v2.x * (v0.y - v1.y);\nreturn (1. / A2) * xyToBarycentricMat3 * vec3(1., pos);\n}`,\"constants.glsl\":`const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\nconst float C_RAD_TO_DEG = 180.0 / 3.141592654;\nconst float POSITION_PRECISION = 1.0 / 8.0;\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\nconst float SOFT_EDGE_RATIO = 1.0;\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\nconst float THIN_LINE_HALF_WIDTH = 1.0;\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\nconst float OFFSET_PRECISION = 1.0 / 8.0;\nconst float OUTLINE_SCALE = 1.0 / 5.0;\nconst float SDF_FONT_SIZE = 24.0;\nconst float MAX_SDF_DISTANCE = 8.0;\nconst float PLACEMENT_PADDING = 8.0;\nconst float EPSILON = 0.00001;\nconst float EPSILON_HITTEST = 0.05;\nconst int MAX_FILTER_COUNT = 2;\nconst int ATTR_VV_SIZE = 0;\nconst int ATTR_VV_COLOR = 1;\nconst int ATTR_VV_OPACITY = 2;\nconst int ATTR_VV_ROTATION = 3;\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\nconst int BITSET_GENERIC_CONSIDER_ALPHA_ONLY = 4;\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\nconst int BITSET_FILL_RANDOM_PATTERN_OFFSET = 2;\nconst int BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR = 3;\nconst int BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR = 5;\nconst int BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR = 6;\nconst int BITSET_LINE_SCALE_DASH = 2;`,fill:{\"common.glsl\":`#include <materials/symbologyTypeUtils.glsl>\n#ifdef PATTERN\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_sampleAlphaOnly;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nuniform lowp vec4 u_isActive[ 2 ];\nuniform highp float u_dotValue;\nuniform highp float u_tileDotsOverArea;\nuniform highp float u_dotTextureDotCount;\nuniform mediump float u_tileZoomFactor;\n#endif\nvarying highp vec3 v_id;\nvarying lowp vec4 v_color;\nvarying lowp float v_opacity;\nvarying mediump vec4 v_aux1;\n#ifdef PATTERN\nvarying mediump vec2 v_tileTextureCoord;\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nvarying lowp float v_isOutline;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvarying highp vec2 v_dotTextureCoords;\nvarying highp vec4 v_dotThresholds[ 2 ];\n#endif`,\"fill.frag\":`precision highp float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/fill/common.glsl>\n#ifdef PATTERN\nuniform lowp sampler2D u_texture;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nuniform mediump mat4 u_dotColors[ 2 ];\nuniform sampler2D u_dotTextures[ 2 ];\nuniform vec4 u_dotBackgroundColor;\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.frag>\nlowp vec4 drawLine() {\nfloat v_lineWidth = v_aux1.x;\nvec2  v_normal    = v_aux1.yz;\nLineData inputs = LineData(\nv_color,\nv_normal,\nv_lineWidth,\nv_opacity,\nv_id\n);\nreturn shadeLine(inputs);\n}\n#endif\nlowp vec4 drawFill() {\nlowp vec4 out_color = vec4(0.);\n#ifdef HITTEST\nout_color = v_color;\n#elif defined(PATTERN)\nmediump vec4 v_tlbr = v_aux1;\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\nlowp vec4 color = texture2D(u_texture, samplePos);\nif (v_sampleAlphaOnly > 0.5) {\ncolor.rgb = vec3(color.a);\n}\nout_color = v_opacity * v_color * color;\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY && !defined(HIGHLIGHT)\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\n#ifdef DD_DOT_BLENDING\nvec4 isPositive0 = step(0.0, difference0);\nvec4 isPositive1 = step(0.0, difference1);\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\nfloat lessThanEqZero = step(weightSum, 0.0);\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\nfloat divisor = (weightSum + lessThanEqZero);\nvec4 weights0 = difference0 * isPositive0 / divisor;\nvec4 weights1 = difference1 * isPositive1 / divisor;\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\n#else\nfloat diffMax = max(max4(difference0), max4(difference1));\nfloat lessThanZero = step(diffMax, 0.0);\nfloat greaterOrEqZero = 1.0 - lessThanZero;\nvec4 isMax0 = step(diffMax, difference0);\nvec4 isMax1 = step(diffMax, difference1);\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\n#endif\nout_color = preEffectColor;\n#else\nout_color = v_opacity * v_color;\n#endif\n#ifdef HIGHLIGHT\nout_color.a = 1.0;\n#endif\nreturn out_color;\n}\nvoid main() {\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nif (v_isOutline > 0.5) {\ngl_FragColor = drawLine();\n} else {\ngl_FragColor = drawFill();\n}\n#else\ngl_FragColor = drawFill();\n#endif\n}`,\"fill.vert\":`#include <materials/symbologyTypeUtils.glsl>\n#define PACKED_LINE\nprecision highp float;\nattribute float a_bitset;\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nattribute float a_inverseArea;\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\nvec2 a_zoomRange = vec2(0.0, 10000.0);\n#else\nattribute vec4 a_color;\nattribute vec4 a_aux2;\nattribute vec4 a_aux3;\n#ifndef SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\nattribute vec4 a_aux1;\nattribute vec2 a_zoomRange;\n#else\nvec2 a_zoomRange = vec2(0.0, 10000.0);\n#endif\n#endif\nuniform vec2 u_tileOffset;\nuniform vec2 u_maxIntNumOfCrossing;\n#include <util/encoding.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/fill/common.glsl>\n#include <materials/fill/hittest.glsl>\nconst float INV_SCALE_COMPRESSION_FACTOR = 1.0 / 128.0;\nconst float MAX_REPRESENTABLE_INT = 16777216.0;\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\n}\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.vert>\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\nLineData outputs = buildLine(\nout_pos,\na_id,\na_pos,\na_color,\n(a_aux3.xy - 128.) / 16.,\n(a_aux3.zw - 128.) / 16.,\n0.,\na_aux2.z / 16.,\na_bitset,\nvec4(0.),\nvec2(0.),\na_aux2.w / 16.\n);\nv_id      = outputs.id;\nv_opacity = outputs.opacity;\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\nout_color = outputs.color;\n}\n#endif\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\nfloat a_bitSet = a_bitset;\nout_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\nv_opacity = getOpacity();\nv_id      = norm(a_id);\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\n0., -2. / 512.,  0.,\n-1.,  1.,  1.  );\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\n#else\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\n#endif\n#ifdef PATTERN\nvec4  a_tlbr   = a_aux1;\nfloat a_width  = a_aux2.x;\nfloat a_height = a_aux2.y;\nvec2  a_offset = a_aux2.zw;\nvec2  a_scale  = a_aux3.xy;\nfloat a_angle  = a_aux3.z;\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR) > 0.5) {\na_width *= INV_SCALE_COMPRESSION_FACTOR;\n}\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR) > 0.5) {\na_height *= INV_SCALE_COMPRESSION_FACTOR;\n}\nvec2 scale = INV_SCALE_COMPRESSION_FACTOR * a_scale;\nfloat width = u_zoomFactor * a_width * scale.x;\nfloat height = u_zoomFactor * a_height * scale.y;\nfloat angle = C_256_TO_RAD * a_angle;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nfloat dx = 0.0;\nfloat dy = 0.0;\nif (getBit(a_bitset, BITSET_FILL_RANDOM_PATTERN_OFFSET) > 0.5) {\nfloat id = rgba2float(vec4(a_id, 0.0));\ndx = rand(vec2(id, 0.0));\ndy = rand(vec2(0.0, id));\n}\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\n-sinA / width, cosA / height, 0,\ndx,            dy,           1);\nvec2 patternSize = vec2(a_width, a_height);\nvec2 numPatternsPerMaxInt = vec2(MAX_REPRESENTABLE_INT) / patternSize;\nvec2 maxIntCrossingOffsetCorrection = patternSize * fract(u_maxIntNumOfCrossing * numPatternsPerMaxInt);\nvec2 tileOffset = u_tileOffset + maxIntCrossingOffsetCorrection - 0.5 * patternSize;\ntileOffset = vec2(tileOffset.x * cosA - tileOffset.y * sinA, tileOffset.x * sinA + tileOffset.y * cosA);\ntileOffset = mod(tileOffset, patternSize);\nvec2 symbolOffset = u_zoomFactor * scale * vec2(a_offset - tileOffset) / vec2(width, height);\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\nv_sampleAlphaOnly = getBit(a_bitset, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\nif (getBit(a_bitSet, BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR) > 0.5) {\n#ifdef VV_COLOR\nv_sampleAlphaOnly *= (1.0 - float(isNan(VV_ADATA[ATTR_VV_COLOR]))) * (1.0 - getBit(a_bitSet, BITSET_GENERIC_LOCK_COLOR));\n#else\nv_sampleAlphaOnly = 0.0;\n#endif\n}\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\n#endif\n}\n#ifdef HITTEST\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\nout_pos = vec3(0., 0., 2.);\nreturn;\n}\n#endif\nhittestFill(out_color, out_pos);\ngl_PointSize = 1.0;\n}\n#elif defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\nif (v_isOutline > 0.5) {\ndrawLine(out_color, out_pos);\n} else {\ndrawFill(out_color, out_pos);\n}\n}\n#else\n#define draw drawFill\n#endif\nvoid main()\n{\nINIT;\nhighp vec3 pos  = vec3(0.);\nhighp vec4 color  = vec4(0.);\ndraw(color, pos);\nv_color = color;\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}`,\"hittest.glsl\":`#ifdef HITTEST\n#include <materials/hittest/common.glsl>\nattribute vec2 a_pos1;\nattribute vec2 a_pos2;\nvoid hittestFill(\nout lowp vec4 out_color,\nout highp vec3 out_pos\n) {\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\nfloat hittestDist = u_hittestDist;\nfloat dist = distPointTriangle(u_hittestPos, pos.xy, pos1.xy, pos2.xy);\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif (dist < 0. || dist >= hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, dist == 0. ? (1. / 255.) : 0.);\n}\n#endif`},hittest:{\"common.glsl\":`#ifdef HITTEST\nuniform float hittestDist;\nuniform highp vec2 hittestPos;\nfloat projectScalar(vec2 a, vec2 b) {\nreturn dot(a, normalize(b));\n}\nfloat distPointSegment(vec2 p0, vec2 p1, vec2 p2) {\nvec2 L = p2 - p1;\nvec2 A = p0 - p1;\nfloat projAL = projectScalar(A, L);\nfloat t = clamp(projAL / length(L), 0., 1.);\nreturn distance(p0, p1 + t * (p2 - p1));\n}\nvoid hittestMarker(out lowp vec4 out_color, out highp vec3 out_pos, in highp vec3 pos, float size) {\nfloat dist = distance(pos, vec3(hittestPos, 1.));\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif ((dist - size) > hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, (dist - size) < 0. ? (1. / 255.) : 0.);\n}\nfloat intersectPointTriangleBary(vec2 p, vec2 a, vec2 b, vec2 c) {\nreturn inTriangle(xyToBarycentric(p, a, b, c));\n}\nfloat distPointTriangle(vec2 p, vec2 a, vec2 b, vec2 c) {\nvec2 ba = b - a;\nvec2 ca = c - a;\nfloat crossProduct = ba.x * ca.y - ca.x * ba.y;\nbool isParallel = crossProduct < EPSILON_HITTEST && crossProduct > -EPSILON_HITTEST;\nif (isParallel) {\nreturn -1.;\n}\nif (intersectPointTriangleBary(p.xy, a, b, c) == 1.) {\nreturn 0.;\n}\nfloat distAB = distPointSegment(p, a, b);\nfloat distBC = distPointSegment(p, b, c);\nfloat distCA = distPointSegment(p, c, a);\nreturn min(min(distAB, distBC), distCA);\n}\n#endif`},icon:{\"common.glsl\":`#include <util/encoding.glsl>\nuniform lowp vec2 u_mosaicSize;\nvarying lowp vec4 v_color;\nvarying highp vec3 v_id;\nvarying highp vec4 v_sizeTex;\nvarying mediump vec3 v_pos;\nvarying lowp float v_opacity;\nuniform lowp sampler2D u_texture;\n#ifdef SDF\nvarying lowp vec4 v_outlineColor;\nvarying mediump float v_outlineWidth;\nvarying mediump float v_distRatio;\nvarying mediump float v_overridingOutlineColor;\nvarying mediump float v_isThin;\n#endif\n#ifdef SDF\nvec4 getColor(vec2 v_size, vec2 v_tex) {\n#ifdef HITTEST\nlowp vec4 fillPixelColor = vec4(1.0);\n#else\nlowp vec4 fillPixelColor = v_color;\n#endif\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\nfloat size = max(v_size.x, v_size.y);\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\nfloat outlineWidth = v_outlineWidth;\n#ifdef HIGHLIGHT\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\n#endif\nif (outlineWidth > 0.25) {\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\nfloat clampedOutlineSize = min(outlineWidth, size);\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\n}\nreturn v_opacity * fillPixelColor;\n}\n#else\nvec4 getColor(vec2 _v_size, vec2 v_tex) {\nlowp vec4 texColor = texture2D(u_texture, v_tex);\nreturn v_opacity * texColor * v_color;\n}\n#endif`,heatmapAccumulate:{\"common.glsl\":`varying lowp vec4 v_hittestResult;\nvarying mediump vec2 v_offsetFromCenter;\nvarying highp float v_fieldValue;`,\"heatmapAccumulate.frag\":`precision mediump float;\n#include <materials/icon/heatmapAccumulate/common.glsl>\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\n#define COMPRESSION_FACTOR 0.25\n#else\n#define COMPRESSION_FACTOR 1.0\n#endif\nuniform lowp sampler2D u_texture;\nvoid main() {\n#ifdef HITTEST\ngl_FragColor = v_hittestResult;\n#else\nfloat radius = length(v_offsetFromCenter);\nfloat shapeWeight = step(radius, 1.0);\nfloat oneMinusRadiusSquared = 1.0 - radius * radius;\nfloat kernelWeight = oneMinusRadiusSquared * oneMinusRadiusSquared;\ngl_FragColor = vec4(shapeWeight * kernelWeight * v_fieldValue * COMPRESSION_FACTOR);\n#endif\n}`,\"heatmapAccumulate.vert\":`precision highp float;\nattribute vec2 a_vertexOffset;\nvec4 a_color = vec4(0.0);\nvec2 a_zoomRange = vec2(0.0, 10000.0);\nuniform float u_radius;\nuniform float u_isFieldActive;\n#include <materials/vcommon.glsl>\n#include <materials/hittest/common.glsl>\n#include <materials/icon/heatmapAccumulate/common.glsl>\nvoid main() {\nfloat filterFlags = getFilterFlags();\n#ifdef HITTEST\nhighp vec4 out_hittestResult = vec4(0.);\nhighp vec3 out_pos = vec3(0.);\nvec3 pos = u_viewMat3 * u_tileMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\nhittestMarker(out_hittestResult, out_pos, pos, u_radius);\nv_hittestResult = out_hittestResult;\ngl_PointSize = 1.;\ngl_Position = vec4(clip(a_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\nv_offsetFromCenter = sign(a_vertexOffset);\nv_fieldValue = getAttributeData2(a_id).x * u_isFieldActive + 1.0 - u_isFieldActive;\nvec3 centerPos = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\nvec3 vertexPos = centerPos + u_displayViewMat3 * vec3(v_offsetFromCenter, 0.0) * u_radius;\ngl_Position = vec4(clip(a_color, vertexPos, filterFlags, a_zoomRange), 1.0);\n#endif\n}`},\"hittest.glsl\":`#ifdef HITTEST\n#include <materials/hittest/common.glsl>\nattribute vec2 a_vertexOffset1;\nattribute vec2 a_vertexOffset2;\nattribute vec2 a_texCoords1;\nattribute vec2 a_texCoords2;\nvec2 getTextureCoords(in vec3 bary, in vec2 texCoords0, in vec2 texCoords1, in vec2 texCoords2) {\nreturn texCoords0 * bary.x + texCoords1 * bary.y + texCoords2 * bary.z;\n}\nvoid hittestIcon(\ninout lowp vec4 out_color,\nout highp vec3 out_pos,\nin vec3 pos,\nin vec3 offset,\nin vec2 size,\nin float scaleFactor,\nin float isMapAligned\n) {\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nvec3 posBase = u_viewMat3 * u_tileMat3  * pos;\nvec3 offset1 = scaleFactor * vec3(a_vertexOffset1 / 16.0, 0.);\nvec3 offset2 = scaleFactor * vec3(a_vertexOffset2 / 16.0, 0.);\nvec2 pos0    = (posBase + getMatrixNoDisplay(isMapAligned) * offset).xy;\nvec2 pos1    = (posBase + getMatrixNoDisplay(isMapAligned) * offset1).xy;\nvec2 pos2    = (posBase + getMatrixNoDisplay(isMapAligned) * offset2).xy;\nvec3 bary0 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\nvec3 bary1 = xyToBarycentric(u_hittestPos + vec2(0., -u_hittestDist), pos0, pos1, pos2);\nvec3 bary2 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\nvec3 bary3 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, 0.), pos0, pos1, pos2);\nvec3 bary4 = xyToBarycentric(u_hittestPos, pos0, pos1, pos2);\nvec3 bary5 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, 0.), pos0, pos1, pos2);\nvec3 bary6 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, u_hittestDist), pos0, pos1, pos2);\nvec3 bary7 = xyToBarycentric(u_hittestPos + vec2(0., u_hittestDist), pos0, pos1, pos2);\nvec3 bary8 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, u_hittestDist), pos0, pos1, pos2);\nvec2 tex0 = a_texCoords  / u_mosaicSize;\nvec2 tex1 = a_texCoords1 / u_mosaicSize;\nvec2 tex2 = a_texCoords2 / u_mosaicSize;\nfloat alphaSum = 0.;\nalphaSum += inTriangle(bary0) * getColor(size, getTextureCoords(bary0, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary1) * getColor(size, getTextureCoords(bary1, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary2) * getColor(size, getTextureCoords(bary2, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary3) * getColor(size, getTextureCoords(bary3, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary4) * getColor(size, getTextureCoords(bary4, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary5) * getColor(size, getTextureCoords(bary5, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary6) * getColor(size, getTextureCoords(bary6, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary7) * getColor(size, getTextureCoords(bary7, tex0, tex1, tex2)).a;\nout_pos.z += step(alphaSum, .05) * 2.0;\nout_color = vec4(1. / 255., 0., 0., alphaSum / 255.);\n}\n#endif`,\"icon.frag\":`precision mediump float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/icon/common.glsl>\nvoid main()\n{\n#ifdef HITTEST\nvec4 color = v_color;\n#else\nvec4 color = getColor(v_sizeTex.xy, v_sizeTex.zw);\n#endif\n#ifdef HIGHLIGHT\ncolor.a = step(1.0 / 255.0, color.a);\n#endif\ngl_FragColor = color;\n}`,\"icon.vert\":`precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_outlineColor;\nattribute vec4 a_sizeAndOutlineWidth;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nattribute vec2 a_bitSetAndDistRatio;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/icon/common.glsl>\n#include <materials/icon/hittest.glsl>\nfloat getMarkerScaleFactor(inout vec2 size, in float referenceSize) {\n#ifdef VV_SIZE\nfloat f = getSize(size.y) / size.y;\nfloat sizeFactor = size.y / referenceSize;\nreturn getSize(referenceSize) / referenceSize;\n#else\nreturn 1.;\n#endif\n}\nvoid main()\n{\nINIT;\nfloat a_bitSet = a_bitSetAndDistRatio.x;\nvec3  pos           = vec3(a_pos * POSITION_PRECISION, 1.0);\nvec2  size          = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\nvec3  offset        = vec3(a_vertexOffset / 16.0, 0.);\nfloat outlineSize   = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\nfloat isMapAligned  = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\nfloat referenceSize = a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0;\nfloat scaleSymbolProportionally = getBit(a_bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\nfloat scaleFactor               = getMarkerScaleFactor(size, referenceSize);\nsize.xy     *= scaleFactor;\noffset.xy   *= scaleFactor;\noutlineSize *= scaleSymbolProportionally * (scaleFactor - 1.0) + 1.0;\nvec2 v_tex   = a_texCoords / u_mosaicSize;\nfloat filterFlags = getFilterFlags();\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\nv_opacity  = getOpacity();\nv_id       = norm(a_id);\nv_pos      = u_dvsMat3 * pos + getMatrix(isMapAligned) * getRotation()  * offset;\nv_sizeTex  = vec4(size.xy, v_tex.xy);\n#ifdef SDF\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\n#ifdef VV_COLOR\nv_overridingOutlineColor = v_isThin;\n#else\nv_overridingOutlineColor = 0.0;\n#endif\nv_outlineWidth = min(outlineSize, max(max(size.x, size.y) - 0.99, 0.0));\nv_outlineColor = a_outlineColor;\nv_distRatio = a_bitSetAndDistRatio.y / 128.0;\n#endif\n#ifdef HITTEST\nhighp vec4 out_color = vec4(0.);\nhighp vec3 out_pos   = vec3(0.);\nhittestIcon(out_color, out_pos, pos, offset, size, scaleFactor, isMapAligned);\nv_color = out_color;\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\n#endif\n}`},label:{\"common.glsl\":`uniform mediump float u_zoomLevel;\nuniform mediump float u_mapRotation;\nuniform mediump float u_mapAligned;\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying mediump vec2 v_tex;\nvarying mediump vec4 v_color;\nvarying lowp vec4 v_animation;`,\"label.frag\":\"#include <materials/text/text.frag>\",\"label.vert\":`precision highp float;\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texAndSize;\nattribute vec4 a_refSymbolAndPlacementOffset;\nattribute vec4 a_glyphData;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHaloPass;\nuniform float u_isBackgroundPass;\nuniform float u_mapRotation;\nuniform float u_mapAligned;\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\nfloat glyphAngle = angle * 360.0 / 254.0;\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\nfloat z = 0.0;\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\nreturn z;\n}\nvoid main()\n{\nINIT;\nfloat groupMinZoom    = getMinZoom();\nfloat glyphMinZoom    = a_glyphData.x;\nfloat glyphMaxZoom    = a_glyphData.y;\nfloat glyphAngle      = a_glyphData.z;\nfloat a_isBackground  = a_glyphData.w;\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\nfloat fontSize           = a_texAndSize.z;\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\nfloat isText = 1.0 - a_isBackground;\nfloat isBackground = u_isBackgroundPass * a_isBackground;\nvec4  nonHaloColor = (isBackground + isText) * a_color;\nv_color     = animation * ((1.0 - u_isHaloPass) * nonHaloColor + (u_isHaloPass * a_haloColor));\nv_opacity   = 1.0;\nv_tex       = a_texCoords / u_mosaicSize;\nv_edgeDistanceOffset = u_isHaloPass * haloSize / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\nv_pos.z += 2.0 * isHidden;\ngl_Position = vec4(v_pos, 1.0);\n#ifdef DEBUG\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\n#endif\n}`},line:{\"common.glsl\":`varying lowp vec4 v_color;\nvarying highp vec3 v_id;\nvarying mediump vec2 v_normal;\nvarying mediump float v_lineHalfWidth;\nvarying lowp float v_opacity;\n#ifdef PATTERN\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_patternSize;\n#endif\n#if defined(PATTERN) || defined(SDF)\nvarying highp float v_accumulatedDistance;\n#endif\n#ifdef SDF\nvarying mediump float v_lineWidthRatio;\n#endif`,\"hittest.glsl\":`#include <materials/hittest/common.glsl>\n#ifdef HITTEST\nattribute vec2 a_pos1;\nattribute vec2 a_pos2;\nvoid hittestLine(out lowp vec4 out_color, out highp vec3 out_pos, float halfWidth) {\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nfloat dist = min(distPointSegment(u_hittestPos, pos.xy, pos1.xy),\ndistPointSegment(u_hittestPos, pos.xy, pos2.xy)) - halfWidth;\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif (dist >= u_hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, dist <= 0. ? (1. / 255.) : 0.);\n}\n#endif`,\"line.frag\":`precision lowp float;\n#include <util/encoding.glsl>\n#include <materials/constants.glsl>\n#include <materials/symbologyTypeUtils.glsl>\n#include <materials/line/common.glsl>\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.frag>\n#ifdef HITTEST\nvoid main() {\ngl_FragColor = v_color;\n}\n#else\nvoid main() {\nLineData inputs = LineData(\nv_color,\nv_normal,\nv_lineHalfWidth,\nv_opacity,\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nv_tlbr,\nv_patternSize,\n#endif\n#ifdef SDF\nv_lineWidthRatio,\n#endif\n#if defined(PATTERN) || defined(SDF)\nv_accumulatedDistance,\n#endif\n#endif\nv_id\n);\ngl_FragColor = shadeLine(inputs);\n}\n#endif`,\"line.vert\":`precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_offsetAndNormal;\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\nattribute vec4 a_tlbr;\nattribute vec4 a_segmentDirection;\nattribute vec2 a_aux;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/symbologyTypeUtils.glsl>\n#include <materials/line/common.glsl>\n#include <materials/line/hittest.glsl>\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.vert>\n#ifdef HITTEST\nvoid draw() {\nfloat aa        = 0.5 * u_antialiasing;\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\nfloat a_cimHalfWidth = a_aux.x / 16. ;\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\nhighp vec3 pos  = vec3(0.);\nv_color = vec4(0.);\nhittestLine(v_color, pos, halfWidth);\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}\n#else\nvoid draw()\n{\nhighp vec3 pos = vec3(0.);\nLineData outputs = buildLine(\npos,\na_id,\na_pos,\na_color,\na_offsetAndNormal.xy / 16.,\na_offsetAndNormal.zw / 16.,\na_accumulatedDistanceAndHalfWidth.x,\na_accumulatedDistanceAndHalfWidth.y / 16.,\na_segmentDirection.w,\na_tlbr,\na_segmentDirection.xy / 16.,\na_aux.x / 16.\n);\nv_id              = outputs.id;\nv_color           = outputs.color;\nv_normal          = outputs.normal;\nv_lineHalfWidth   = outputs.lineHalfWidth;\nv_opacity         = outputs.opacity;\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nv_tlbr          = outputs.tlbr;\nv_patternSize   = outputs.patternSize;\n#endif\n#ifdef SDF\nv_lineWidthRatio = outputs.lineWidthRatio;\n#endif\n#if defined(PATTERN) || defined(SDF)\nv_accumulatedDistance = outputs.accumulatedDistance;\n#endif\n#endif\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}\n#endif\nvoid main() {\nINIT;\ndraw();\n}`},pie:{\"pie.common.glsl\":`uniform float outlineWidth;\nuniform mediump float sectorThreshold;\nvarying vec3  v_id;\nvarying vec3  v_pos;\nvarying vec2  v_offset;\nvarying vec4  v_color;\nvarying float v_size;\nvarying float v_numOfEntries;\nvarying float v_maxSectorAngle;\nvarying vec2  v_filteredSectorToColorId[numberOfFields];\nvarying vec2  v_texCoords;\nvarying float v_outlineWidth;\nvarying float v_opacity;\nstruct FilteredChartInfo {\nfloat endSectorAngle;\nint colorId;\n};`,\"pie.frag\":`precision highp float;\n#include <util/atan2.glsl>\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/pie/pie.common.glsl>\nuniform lowp vec4 colors[numberOfFields];\nuniform lowp vec4 defaultColor;\nuniform lowp vec4 othersColor;\nuniform lowp vec4 outlineColor;\nuniform float donutRatio;\nlowp vec4 getSectorColor(in int index, in vec2 filteredSectorToColorId[numberOfFields]) {\nmediump int colorIndex = int(filteredSectorToColorId[index].y);\nreturn colors[colorIndex];\n}\nconst int OTHER_SECTOR_ID = 255;\n#ifdef HITTEST\nvec4 getColor() {\nfloat distanceSize = length(v_offset) * v_size;\nfloat donutSize = donutRatio * v_size;\nfloat alpha = step(donutSize, distanceSize) * (1.0 - step(v_size, distanceSize));\nreturn v_color;\n}\n#else\nvec4 getColor() {\nfloat angle = 90.0 - C_RAD_TO_DEG * atan2(v_offset.y, v_offset.x);\nif (angle < 0.0) {\nangle += 360.0;\n} else if (angle > 360.0) {\nangle = mod(angle, 360.0);\n}\nint numOfEntries = int(v_numOfEntries);\nfloat maxSectorAngle = v_maxSectorAngle;\nlowp vec4 fillColor = (maxSectorAngle > 0.0 || sectorThreshold > 0.0) ? othersColor : defaultColor;\nlowp vec4 prevColor = vec4(0.0);\nlowp vec4 nextColor = vec4(0.0);\nfloat startSectorAngle = 0.0;\nfloat endSectorAngle = 0.0;\nif (angle < maxSectorAngle) {\nfor (int index = 0; index < numberOfFields; ++index) {\nstartSectorAngle = endSectorAngle;\nendSectorAngle = v_filteredSectorToColorId[index].x;\nif (endSectorAngle > angle) {\nfillColor = getSectorColor(index, v_filteredSectorToColorId);\nprevColor = sectorThreshold != 0.0 && index == 0 && abs(360.0 - maxSectorAngle) < EPSILON ? othersColor :\ngetSectorColor(index > 0 ? index - 1 : numOfEntries - 1, v_filteredSectorToColorId);\nnextColor = sectorThreshold != 0.0 && abs(endSectorAngle - maxSectorAngle) < EPSILON ? othersColor :\ngetSectorColor(index < numOfEntries - 1 ? index + 1 : 0, v_filteredSectorToColorId);\nbreak;\n}\nif (index == numOfEntries - 1) {\nbreak;\n}\n}\n} else {\nprevColor = getSectorColor(numOfEntries - 1, v_filteredSectorToColorId);\nnextColor = getSectorColor(0, v_filteredSectorToColorId);\nstartSectorAngle = maxSectorAngle;\nendSectorAngle = 360.0;\n}\nlowp vec4 outlineColor = outlineColor;\nfloat offset = length(v_offset);\nfloat distanceSize = offset * v_size;\nif (startSectorAngle != 0.0 || endSectorAngle != 360.0) {\nfloat distanceToStartSector = (angle - startSectorAngle);\nfloat distanceToEndSector = (endSectorAngle - angle);\nfloat sectorThreshold = 0.6;\nfloat beginSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToStartSector * offset);\nfloat endSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToEndSector * offset);\nif (endSectorAlpha > 0.0) {\nfillColor = mix(nextColor, fillColor, endSectorAlpha);\n} else if (beginSectorAlpha > 0.0) {\nfillColor = mix(prevColor, fillColor, beginSectorAlpha);\n}\n}\nfloat donutSize = donutRatio * (v_size - v_outlineWidth);\nfloat endOfDonut = donutSize - v_outlineWidth;\nfloat aaThreshold = 0.75;\nfloat innerCircleAlpha = endOfDonut - aaThreshold > 0.0 ? smoothstep(endOfDonut - aaThreshold, endOfDonut + aaThreshold, distanceSize) : 1.0;\nfloat outerCircleAlpha = 1.0 - smoothstep(v_size - aaThreshold, v_size + aaThreshold , distanceSize);\nfloat circleAlpha = innerCircleAlpha * outerCircleAlpha;\nfloat startOfOutline = v_size - v_outlineWidth;\nif (startOfOutline > 0.0 && v_outlineWidth > 0.25) {\nfloat outlineFactor = smoothstep(startOfOutline - aaThreshold, startOfOutline + aaThreshold, distanceSize);\nfloat innerLineFactor = donutSize - aaThreshold > 0.0 ? 1.0 - smoothstep(donutSize - aaThreshold, donutSize + aaThreshold , distanceSize) : 0.0;\nfillColor = mix(fillColor, outlineColor, innerLineFactor + outlineFactor);\n}\nreturn v_opacity * circleAlpha * fillColor;\n}\n#endif\nvoid main()\n{\nvec4 color = getColor();\n#ifdef highlight\ncolor.a = step(1.0 / 255.0, color.a);\n#endif\ngl_FragColor = color;\n}`,\"pie.vert\":`#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/barycentric.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/vv.glsl>\n#include <materials/attributeData.glsl>\n#include <materials/pie/pie.common.glsl>\n#include <materials/hittest/common.glsl>\nattribute float a_bitSet;\nattribute vec2  a_offset;\nattribute vec2  a_texCoords;\nattribute vec2  a_size;\nattribute float a_referenceSize;\nattribute vec2  a_zoomRange;\nint filterValue(in float sectorAngle,\nin int currentIndex,\ninout FilteredChartInfo filteredInfo,\ninout vec2 filteredSectorToColorId[numberOfFields]) {\nif (sectorAngle > sectorThreshold * 360.0) {\nfilteredInfo.endSectorAngle += sectorAngle;\nfilteredSectorToColorId[filteredInfo.colorId] = vec2(filteredInfo.endSectorAngle, currentIndex);\n++filteredInfo.colorId;\n}\nreturn 0;\n}\nint filterValues(inout vec2 filteredSectorToColorId[numberOfFields],\ninout FilteredChartInfo filteredInfo,\nin float sectorAngles[numberOfFields]) {\nfor (int index = 0; index < numberOfFields; ++index) {\nfloat sectorValue = sectorAngles[index];\nfilterValue(sectorValue, index, filteredInfo, filteredSectorToColorId);\n}\nreturn filteredInfo.colorId;\n}\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float a_referenceSize, in float bitSet) {\nvec2 outSize = baseSize;\n#ifdef VV_SIZE\nfloat r = getSize(a_referenceSize, currentScale) / a_referenceSize;\noutSize.xy *= r;\noffset.xy *= r;\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\n#endif\nreturn outSize;\n}\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\nvec3  offset       = vec3(in_offset, 0.0);\nreturn getMatrix(isMapAligned) * offset;\n}\nfloat filterNaNValues(in float value) {\nreturn value != NAN_MAGIC_NUMBER && value > 0.0 ? value : 0.0;\n}\nvoid main()\n{\nINIT;\nvec2  a_size   = a_size;\nvec2  a_offset = a_offset / 16.0;\nfloat outlineSize = outlineWidth;\nfloat a_bitSet = a_bitSet;\nfloat a_referenceSize = a_referenceSize;\nvec2 a_texCoords = a_texCoords / 4.0;\nvec2 markerSize = getMarkerSize(a_offset, a_size, outlineSize, a_referenceSize, a_bitSet);\nfloat filterFlags = getFilterFlags();\nvec3  pos         = vec3(a_pos / 10.0, 1.0);\nv_opacity      = getOpacity();\nv_id           = norm(a_id);\nv_pos          = displayViewScreenMat3 * pos + getOffset(a_offset, a_bitSet);\nv_offset       = sign(a_texCoords - 0.5);\nv_size         = max(markerSize.x, markerSize.y);\nv_outlineWidth = outlineSize;\nfloat attributeData[10];\nvec4 attributeData3 = getDataDriven0(a_id);\nattributeData[0] = filterNaNValues(attributeData3.x);\nattributeData[1] = filterNaNValues(attributeData3.y);\nattributeData[2] = filterNaNValues(attributeData3.z);\nattributeData[3] = filterNaNValues(attributeData3.w);\n#if (numberOfFields > 4)\nvec4 attributeData4 = getDataDriven1(a_id);\nattributeData[4] = filterNaNValues(attributeData4.x);\nattributeData[5] = filterNaNValues(attributeData4.y);\nattributeData[6] = filterNaNValues(attributeData4.z);\nattributeData[7] = filterNaNValues(attributeData4.w);\n#endif\n#if (numberOfFields > 8)\nvec4 attributeData5 = getDataDriven2(a_id);\nattributeData[8] = filterNaNValues(attributeData5.x);\nattributeData[9] = filterNaNValues(attributeData5.y);\n#endif\nfloat sum = 0.0;\nfor (int i = 0; i < numberOfFields; ++i) {\nsum += attributeData[i];\n}\nfloat sectorAngles[numberOfFields];\nfor (int i = 0; i < numberOfFields; ++i) {\nsectorAngles[i] = 360.0 * attributeData[i] / sum;\n}\nvec2 filteredSectorToColorId[numberOfFields];\nFilteredChartInfo filteredInfo = FilteredChartInfo(0.0, 0);\nint numOfEntries = filterValues(filteredSectorToColorId, filteredInfo, sectorAngles);\nv_numOfEntries = float(numOfEntries);\nv_maxSectorAngle = filteredInfo.endSectorAngle;\nv_filteredSectorToColorId = filteredSectorToColorId;\n#ifdef HITTEST\nhighp vec3 out_pos = vec3(0.0);\nv_color            = vec4(0.0);\nhittestMarker(v_color, out_pos, viewMat3 * tileMat3 *  pos, v_size);\ngl_PointSize = 1.0;\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\n#endif\n}`},shared:{line:{\"common.glsl\":`#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_sampleAlphaOnly;\n#endif\nstruct LineData {\nlowp vec4 color;\nmediump vec2 normal;\nmediump float lineHalfWidth;\nlowp float opacity;\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nmediump vec4 tlbr;\nmediump vec2 patternSize;\n#endif\n#ifdef SDF\nmediump float lineWidthRatio;\n#endif\n#if defined(PATTERN) || defined(SDF)\nhighp float accumulatedDistance;\n#endif\n#endif\nhighp vec3 id;\n};`,\"line.frag\":`uniform lowp float u_blur;\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && !defined(HIGHLIGHT)\n#if defined(PATTERN) || defined(SDF)\nuniform sampler2D u_texture;\nuniform highp float u_pixelRatio;\n#endif\n#endif\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nlowp vec4 getLineColor(LineData line) {\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\nfloat dist = d * line.lineHalfWidth;\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\n}\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nlowp vec4 getLineColor(LineData line) {\nmediump float lineHalfWidth = line.lineHalfWidth;\nmediump float adjustedPatternHeight = line.patternSize.y * 2.0 * lineHalfWidth / line.patternSize.x;\nmediump float relativeTexY = fract(line.accumulatedDistance / adjustedPatternHeight);\nmediump float relativeTexX = 0.5 + 0.5 * line.normal.y;\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\nlowp vec4 color = texture2D(u_texture, texCoord);\n#ifdef VV_COLOR\nif (v_sampleAlphaOnly > 0.5) {\ncolor.rgb = vec3(color.a);\n}\n#endif\nreturn line.opacity * line.color * color;\n}\n#else\nlowp vec4 getLineColor(LineData line) {\nreturn line.opacity * line.color;\n}\n#endif\nvec4 shadeLine(LineData line)\n{\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\nlowp vec4 out_color = getLineColor(line) * alpha;\n#ifdef HIGHLIGHT\nout_color.a = step(1.0 / 255.0, out_color.a);\n#endif\n#ifdef ID\nif (out_color.a < 1.0 / 255.0) {\ndiscard;\n}\nout_color = vec4(line.id, 0.0);\n#endif\nreturn out_color;\n}`,\"line.vert\":`float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\n#ifdef VV_SIZE\nfloat refLineWidth = 2.0 * referenceHalfWidth;\nreturn 0.5 * (lineHalfWidth / max(referenceHalfWidth, EPSILON)) * getSize(refLineWidth);\n#else\nreturn lineHalfWidth;\n#endif\n}\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\n#ifdef HIGHLIGHT\nhalfWidth = max(halfWidth, 2.0);\n#endif\nreturn halfWidth;\n}\nvec2 getDist(in vec2 offset, in float halfWidth) {\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nreturn thinLineFactor * halfWidth * offset;\n}\nLineData buildLine(\nout vec3 out_pos,\nin vec3 in_id,\nin vec2 in_pos,\nin vec4 in_color,\nin vec2 in_offset,\nin vec2 in_normal,\nin float in_accumulatedDist,\nin float in_lineHalfWidth,\nin float in_bitSet,\nin vec4 in_tlbr,\nin vec2 in_segmentDirection,\nin float in_referenceHalfWidth\n)\n{\nfloat aa        = 0.5 * u_antialiasing;\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\nfloat z         = 2.0 * step(baseWidth, 0.0);\nvec2  dist      = getDist(in_offset, halfWidth);\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nvec4  color     = in_color;\nfloat opacity   = 1.0;\n#else\nvec4  color     = getColor(in_color, in_bitSet, BITSET_GENERIC_LOCK_COLOR);\nfloat opacity   = getOpacity();\n#ifdef SDF\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\n#endif\n#endif\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\nv_sampleAlphaOnly = getBit(in_bitSet, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\n#endif\nout_pos = vec3(pos.xy, z);\nreturn LineData(\ncolor,\nin_normal,\nhalfWidth,\nopacity,\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nin_tlbr / u_mosaicSize.xyxy,\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\n#endif\n#ifdef SDF\nlineWidthRatio,\n#endif\n#if defined(PATTERN) || defined(SDF)\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\n#endif\n#endif\nnorm(in_id)\n);\n}`}},\"symbologyTypeUtils.glsl\":`#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\n#define SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_SIMPLE || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\n#define SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\n#endif`,text:{\"common.glsl\":`uniform highp vec2 u_mosaicSize;\nvarying highp vec3 v_id;\nvarying mediump vec3 v_pos;\nvarying lowp float v_opacity;\nvarying lowp vec4 v_color;\nvarying highp vec2 v_tex;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying lowp float v_transparency;`,\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\",\"text.frag\":`precision mediump float;\n#include <materials/text/common.glsl>\nuniform lowp sampler2D u_texture;\n#ifdef HITTEST\nvec4 getColor() {\nreturn v_color;\n}\n#else\nvec4 getColor()\n{\nfloat SDF_CUTOFF = (2.0 / 8.0);\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\nlowp float dist = texture2D(u_texture, v_tex).a;\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\n#ifdef HIGHLIGHT\nedge /= 2.0;\n#endif\nlowp float aa = v_antialiasingWidth;\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\nreturn alpha * v_color * v_opacity;\n}\n#endif\nvoid main()\n{\ngl_FragColor = getColor();\n}`,\"text.vert\":`precision highp float;\n#include <materials/utils.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\n#include <materials/text/hittest.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texFontSize;\nattribute vec4 a_aux;\nattribute vec2 a_zoomRange;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHaloPass;\nuniform float u_isBackgroundPass;\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\n#ifdef VV_SIZE\nfloat r = getSize(referenceSize) / referenceSize;\nbaseSize *= r;\noffset.xy *= r;\nreturn baseSize;\n#endif\nreturn baseSize;\n}\nvoid main()\n{\nINIT;\nfloat a_isBackground  = a_aux.y;\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\nfloat a_bitSet        = a_aux.w;\nfloat a_fontSize      = a_texFontSize.z;\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\nfloat isText = 1.0 - a_isBackground;\nfloat isBackground = u_isBackgroundPass * a_isBackground;\nvec4  nonHaloColor  = (isBackground * a_color) + (isText * getColor(a_color, a_bitSet, 1));\nv_color   = u_isHaloPass * a_haloColor + (1.0 - u_isHaloPass) * nonHaloColor;\nv_opacity = getOpacity();\nv_id      = norm(a_id);\nv_tex     = a_texCoords / u_mosaicSize;\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\nv_pos.z += 2.0 * isHidden;\nv_edgeDistanceOffset = u_isHaloPass * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\n#ifdef HITTEST\nhighp vec3 out_pos  = vec3(0.);\nv_color = vec4(0.);\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  vec3(a_pos * POSITION_PRECISION, 1.0)\n+ u_tileMat3 * offset, fontSize / 2.);\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, out_pos, getFilterFlags(), a_zoomRange), 1.0);\n#else\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\n#endif\n}`},\"utils.glsl\":`float rshift(in float u32, in int amount) {\nreturn floor(u32 / pow(2.0, float(amount)));\n}\nfloat getBit(in float bitset, in int bitIndex) {\nfloat offset = pow(2.0, float(bitIndex));\nreturn mod(floor(bitset / offset), 2.0);\n}\nconst int maxHighlightReasons = 6;\nfloat getFilterBit(in float bitset, in int bitIndex) {\nreturn getBit(bitset, bitIndex + maxHighlightReasons);\n}\nfloat getHighlightBit(in float bitset, in int bitIndex) {\nreturn getBit(bitset, bitIndex);\n}\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\nfloat isAggregate = getBit(bitset.b, 7);\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\n}\nvec4 unpack(in float u32) {\nfloat r = mod(rshift(u32, 0), 255.0);\nfloat g = mod(rshift(u32, 8), 255.0);\nfloat b = mod(rshift(u32, 16), 255.0);\nfloat a = mod(rshift(u32, 24), 255.0);\nreturn vec4(r, g, b, a);\n}\nvec3 norm(in vec3 v) {\nreturn v /= 255.0;\n}\nvec4 norm(in vec4 v) {\nreturn v /= 255.0;\n}\nfloat max4(vec4 target) {\nreturn max(max(max(target.x, target.y), target.z), target.w);\n}\nvec2 unpack_u8_nf32(vec2 bytes) {\nreturn (bytes - 127.0) / 127.0;\n}\nhighp float rand(in vec2 co) {\nhighp float a = 12.9898;\nhighp float b = 78.233;\nhighp float c = 43758.5453;\nhighp float dt = dot(co, vec2(a,b));\nhighp float sn = mod(dt, 3.14);\nreturn fract(sin(sn) * c);\n}`,\"vcommon.glsl\":`#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/attributeData.glsl>\n#include <materials/vv.glsl>\n#include <materials/barycentric.glsl>\nattribute vec2 a_pos;\nattribute highp vec3 a_id;\nuniform highp mat3 displayViewScreenMat3;\nuniform highp mat3 displayViewMat3;\nuniform highp mat3 displayMat3;\nuniform highp mat3 tileMat3;\nuniform highp mat3 viewMat3;\nuniform highp float pixelRatio;\nuniform mediump float zoomFactor;\nuniform mediump float antialiasing;\nuniform mediump float currentScale;\nuniform mediump float currentZoom;\nuniform mediump float metersPerSRUnit;\nvec4 VV_ADATA = vec4(0.0);\nvoid loadVisualVariableData(inout vec4 target) {\ntarget.rgba = getVisualVariableData(a_id);\n}\n#ifdef VV\n#define INIT loadVisualVariableData(VV_ADATA)\n#else\n#define INIT\n#endif\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\n#ifdef VV_COLOR\nfloat isColorLocked   = getBit(a_bitSet, index);\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\n#else\nreturn a_color;\n#endif\n}\nfloat getOpacity() {\n#ifdef VV_OPACITY\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\n#else\nreturn 1.0;\n#endif\n}\nfloat getSize(in float in_size, in float currentScale) {\n#ifdef VV_SIZE\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE], currentScale);\n#else\nreturn in_size;\n#endif\n}\nmat3 getRotation() {\n#ifdef VV_ROTATION\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\n#else\nreturn mat3(1.0);\n#endif\n}\nfloat getFilterFlags() {\n#ifdef IGNORES_SAMPLER_PRECISION\nreturn ceil(getFilterData(a_id).x * 255.0);\n#else\nreturn getFilterData(a_id).x * 255.0;\n#endif\n}\nvec4 getAnimationState() {\nreturn getAnimation(a_id);\n}\nfloat getMinZoom() {\nvec4 data0 = getFilterData(a_id) * 255.0;\nreturn data0.g;\n}\nmat3 getMatrixNoDisplay(float isMapAligned) {\nreturn isMapAligned * viewMat3 * tileMat3 + (1.0 - isMapAligned) * tileMat3;\n}\nmat3 getMatrix(float isMapAligned) {\nreturn isMapAligned * displayViewMat3 + (1.0 - isMapAligned) * displayMat3;\n}\nfloat checkHighlightBit(float filterFlags, int index) {\nreturn getHighlightBit(filterFlags, index);\n}\nfloat checkHighlight(float filterFlags) {\nfloat result = checkHighlightBit(filterFlags, 0);\nfor (int i = 1; i < maxHighlightReasons; i++) {\nresult = result + checkHighlightBit(filterFlags, i);\n}\nreturn step(0.1, result);\n}\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\n#ifdef inside\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\n#elif defined(outside)\npos.z += 2.0 * getFilterBit(filterFlags, 1);\n#elif defined(highlight)\n#if !defined(highlight_all)\npos.z += 2.0 * (1.0 - checkHighlight(filterFlags));\n#endif\n#endif\npos.z += 2.0 * (step(minMaxZoom.y, currentZoom) + (1.0 - step(minMaxZoom.x, currentZoom)));\nreturn pos;\n}`,\"vv.glsl\":`#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\n#define VV_SIZE\n#endif\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\n#define VV\n#endif\n#ifdef VV_COLOR\nuniform highp float colorValues[8];\nuniform vec4 colors[8];\n#endif\n#ifdef VV_SIZE_MIN_MAX_VALUE\nuniform highp vec4 minMaxValueAndSize;\n#endif\n#ifdef VV_SIZE_SCALE_STOPS\nuniform highp float values[8];\nuniform float sizes[8];\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nuniform highp float values[8];\nuniform float sizes[8];\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nuniform highp float unitMeterRatio;\n#endif\n#ifdef VV_OPACITY\nuniform highp float opacityValues[8];\nuniform float opacities[8];\n#endif\n#ifdef VV_ROTATION\nuniform lowp float rotationType;\n#endif\nbool isNan(float val) {\nreturn (val == NAN_MAGIC_NUMBER);\n}\n#ifdef VV_SIZE_MIN_MAX_VALUE\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nfloat interpolationRatio = (sizeValue  - minMaxValueAndSize.x) / (minMaxValueAndSize.y - minMaxValueAndSize.x);\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\nreturn minMaxValueAndSize.z + interpolationRatio * (minMaxValueAndSize.w - minMaxValueAndSize.z);\n}\n#endif\n#ifdef VV_SIZE_SCALE_STOPS\nfloat getVVScaleStopsSize(float currentScale) {\nfloat outSize;\nif (currentScale <= values[0]) {\noutSize = sizes[0];\n} else {\nif (currentScale >= values[7]) {\noutSize = sizes[7];\n} else {\nint index;\nindex = -1;\nfor (int i = 0; i < 8; i++) {\nif (values[i] > currentScale) {\nindex = i;\nbreak;\n}\n}\nint prevIndex = index - 1;\nfloat a = currentScale - values[prevIndex];\nfloat b = values[index] - values[prevIndex];\noutSize = mix(sizes[prevIndex], sizes[index], a / b);\n}\n}\nreturn outSize;\n}\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nconst int VV_SIZE_N = 8;\nfloat getVVStopsSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nif (sizeValue <= values[0]) {\nreturn sizes[0];\n}\nif (sizeValue >= values[VV_SIZE_N - 1]) {\nreturn sizes[VV_SIZE_N - 1];\n}\nfor (int i = 1; i < VV_SIZE_N; ++i) {\nif (values[i] >= sizeValue) {\nfloat f = (sizeValue - values[i-1]) / (values[i] - values[i-1]);\nreturn mix(sizes[i-1], sizes[i], f);\n}\n}\nreturn sizes[VV_SIZE_N - 1];\n}\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nfloat getVVUnitValue(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nreturn sizeValue * (metersPerSRUnit / unitMeterRatio);\n}\n#endif\n#ifdef VV_OPACITY\nconst int VV_OPACITY_N = 8;\nfloat getVVOpacity(float opacityValue) {\nif (isNan(opacityValue)) {\nreturn 1.0;\n}\nif (opacityValue <= opacityValues[0]) {\nreturn opacities[0];\n}\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\nif (opacityValues[i] >= opacityValue) {\nfloat f = (opacityValue - opacityValues[i-1]) / (opacityValues[i] - opacityValues[i-1]);\nreturn mix(opacities[i-1], opacities[i], f);\n}\n}\nreturn opacities[VV_OPACITY_N - 1];\n}\n#endif\n#ifdef VV_ROTATION\nmat4 getVVRotation(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat4(1, 0, 0, 0,\n0, 1, 0, 0,\n0, 0, 1, 0,\n0, 0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (rotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat4(cosA, sinA, 0, 0,\n-sinA,  cosA, 0, 0,\n0,     0, 1, 0,\n0,     0, 0, 1);\n}\nmat3 getVVRotationMat3(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat3(1, 0, 0,\n0, 1, 0,\n0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (rotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * -rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat3(cosA, -sinA, 0,\nsinA, cosA, 0,\n0,    0,    1);\n}\n#endif\n#ifdef VV_COLOR\nconst int VV_COLOR_N = 8;\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\nif (isNan(colorValue) || isColorLocked == 1.0) {\nreturn fallback;\n}\nif (colorValue <= colorValues[0]) {\nreturn colors[0];\n}\nfor (int i = 1; i < VV_COLOR_N; ++i) {\nif (colorValues[i] >= colorValue) {\nfloat f = (colorValue - colorValues[i-1]) / (colorValues[i] - colorValues[i-1]);\nreturn mix(colors[i-1], colors[i], f);\n}\n}\nreturn colors[VV_COLOR_N - 1];\n}\n#endif\nfloat getVVSize(in float size, in float vvSize, in float currentScale)  {\n#ifdef VV_SIZE_MIN_MAX_VALUE\nreturn getVVMinMaxSize(vvSize, size);\n#elif defined(VV_SIZE_SCALE_STOPS)\nfloat outSize = getVVScaleStopsSize(currentScale);\nreturn isNan(outSize) ? size : outSize;\n#elif defined(VV_SIZE_FIELD_STOPS)\nfloat outSize = getVVStopsSize(vvSize, size);\nreturn isNan(outSize) ? size : outSize;\n#elif defined(VV_SIZE_UNIT_VALUE)\nreturn getVVUnitValue(vvSize, size);\n#else\nreturn size;\n#endif\n}`},\"post-processing\":{blit:{\"blit.frag\":`precision mediump float;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\ngl_FragColor = texture2D(u_texture, v_uv);\n}`},bloom:{composite:{\"composite.frag\":`precision mediump float;\nvarying vec2 v_uv;\nuniform sampler2D u_blurTexture1;\nuniform sampler2D u_blurTexture2;\nuniform sampler2D u_blurTexture3;\nuniform sampler2D u_blurTexture4;\nuniform sampler2D u_blurTexture5;\nuniform float u_bloomStrength;\nuniform float u_bloomRadius;\nuniform float u_bloomFactors[NUMMIPS];\nuniform vec3 u_bloomTintColors[NUMMIPS];\nfloat lerpBloomFactor(const in float factor) {\nfloat mirrorFactor = 1.2 - factor;\nreturn mix(factor, mirrorFactor, u_bloomRadius);\n}\nvoid main() {\nvec4 color = u_bloomStrength * (\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\n);\ngl_FragColor = clamp(color, 0.0, 1.0);\n}`},gaussianBlur:{\"gaussianBlur.frag\":`precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\n#define SIGMA RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = float(SIGMA);\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}`},luminosityHighPass:{\"luminosityHighPass.frag\":`precision mediump float;\nuniform sampler2D u_texture;\nuniform vec3 u_defaultColor;\nuniform float u_defaultOpacity;\nuniform float u_luminosityThreshold;\nuniform float u_smoothWidth;\nvarying vec2 v_uv;\nvoid main() {\nvec4 texel = texture2D(u_texture, v_uv);\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat v = dot(texel.xyz, luma);\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\ngl_FragColor = mix(outputColor, texel, alpha);\n}`}},blur:{gaussianBlur:{\"gaussianBlur.frag\":`precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nuniform float u_sigma;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = u_sigma;\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}`},\"radial-blur\":{\"radial-blur.frag\":`precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nconst float sampleDist = 1.0;\nconst float sampleStrength = 2.2;\nvoid main(void) {\nfloat samples[10];\nsamples[0] = -0.08;\nsamples[1] = -0.05;\nsamples[2] = -0.03;\nsamples[3] = -0.02;\nsamples[4] = -0.01;\nsamples[5] =  0.01;\nsamples[6] =  0.02;\nsamples[7] =  0.03;\nsamples[8] =  0.05;\nsamples[9] =  0.08;\nvec2 dir = 0.5 - v_uv;\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\ndir = dir / dist;\nvec4 color = texture2D(u_colorTexture,v_uv);\nvec4 sum = color;\nfor (int i = 0; i < 10; i++) {\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\n}\nsum *= 1.0 / 11.0;\nfloat t = dist * sampleStrength;\nt = clamp(t, 0.0, 1.0);\ngl_FragColor = mix(color, sum, t);\n}`}},dra:{\"dra.frag\":`precision mediump float;\nuniform sampler2D u_minColor;\nuniform sampler2D u_maxColor;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\nvec4 color = texture2D(u_texture, v_uv);\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\nvec3 colorUnpremultiply = color.rgb / color.a;\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\n}`,\"min-max\":{\"min-max.frag\":`#extension GL_EXT_draw_buffers : require\nprecision mediump float;\n#define CELL_SIZE 2\nuniform sampler2D u_minTexture;\nuniform sampler2D u_maxTexture;\nuniform vec2 u_srcResolution;\nuniform vec2 u_dstResolution;\nvarying vec2 v_uv;\nvoid main() {\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\nvec2 onePixel = vec2(1.0) / u_srcResolution;\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\nvec4 minColor = vec4(1.0);\nvec4 maxColor = vec4(0.0);\nfor (int y = 0; y < CELL_SIZE; ++y) {\nfor (int x = 0; x < CELL_SIZE; ++x) {\nvec2 offset = uv + vec2(x, y) * onePixel;\nminColor = min(minColor, texture2D(u_minTexture, offset));\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\n}\n}\ngl_FragData[0] = minColor;\ngl_FragData[1] = maxColor;\n}`}},\"drop-shadow\":{composite:{\"composite.frag\":`precision mediump float;\nuniform sampler2D u_layerFBOTexture;\nuniform sampler2D u_blurTexture;\nuniform vec4 u_shadowColor;\nuniform vec2 u_shadowOffset;\nuniform highp mat3 u_displayViewMat3;\nvarying vec2 v_uv;\nvoid main() {\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\n}`}},\"edge-detect\":{\"frei-chen\":{\"frei-chen.frag\":`precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nvarying vec2 v_uv;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[9];\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\nvoid main() {\nG[0] = g0,\nG[1] = g1,\nG[2] = g2,\nG[3] = g3,\nG[4] = g4,\nG[5] = g5,\nG[6] = g6,\nG[7] = g7,\nG[8] = g8;\nmat3 I;\nfloat cnv[9];\nvec3 sample;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 9; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\n}`},sobel:{\"sobel.frag\":`precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\n}`}},\"edge-enhance\":{\"edge-enhance.frag\":`precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nvec4 color = texture2D(u_colorTexture, v_uv);\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\n}`},filterEffect:{\"filterEffect.frag\":`precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform mat4 u_coefficients;\nvarying vec2 v_uv;\nvoid main() {\nvec4 color = texture2D(u_colorTexture, v_uv);\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\nfloat a = color.a;\ngl_FragColor = vec4(a * rgbw.rgb, a);\n}`},pp:{\"pp.vert\":`precision mediump float;\nattribute vec2 a_position;\nvarying vec2 v_uv;\nvoid main() {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_uv = (a_position + 1.0) / 2.0;\n}`}},raster:{bitmap:{\"bitmap.frag\":`precision mediump float;\nvarying highp vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform highp vec2 u_coordScale;\nuniform lowp float u_opacity;\n#include <filtering/bicubic.glsl>\nvoid main() {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\n#else\nvec4 color = texture2D(u_texture, v_texcoord);\n#endif\ngl_FragColor = vec4(color.rgb * u_opacity, color.a * u_opacity);\n}`,\"bitmap.vert\":`precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}`},common:{\"common.glsl\":`uniform sampler2D u_image;\nuniform int u_bandCount;\nuniform bool u_flipY;\nuniform float u_opacity;\nuniform int u_resampling;\nuniform vec2 u_srcImageSize;\n#ifdef APPLY_PROJECTION\n#include <raster/common/projection.glsl>\n#endif\n#ifdef BICUBIC\n#include <filtering/bicubic.glsl>\n#endif\n#ifdef BILINEAR\n#include <filtering/bilinear.glsl>\n#endif\nvec2 getPixelLocation(vec2 coords) {\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\n#ifdef APPLY_PROJECTION\ntargetLocation = projectPixelLocation(targetLocation);\n#endif\nreturn targetLocation;\n}\nbool isOutside(vec2 coords){\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\nreturn true;\n} else {\nreturn false;\n}\n}\nvec4 getPixel(vec2 pixelLocation) {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\n#elif defined(BILINEAR)\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\n#else\nvec4 color = texture2D(u_image, pixelLocation);\n#endif\nreturn color;\n}`,\"common.vert\":`precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform highp float u_scale;\nuniform highp vec2 u_offset;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos * u_scale + u_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}`,\"contrastBrightness.glsl\":`uniform float u_contrastOffset;\nuniform float u_brightnessOffset;\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\nfloat maxI = 255.0;\nfloat mid = 128.0;\nfloat c = u_contrastOffset;\nfloat b = u_brightnessOffset;\nvec4 v;\nif (c > 0.0 && c < 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\n} else if (c <= 0.0 && c > -100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\n} else if (c == 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\nv = (sign(v) + 1.0) / 2.0;\n} else if (c == -100.0) {\nv = vec4(mid, mid, mid, currentPixel.a);\n}\nvec3 rgb = clamp(v.rgb / 255.0, 0.0, 1.0);\nreturn vec4(rgb, currentPixel.a);\n}`,\"getSurfaceValues.glsl\":`#include <raster/common/mirror.glsl>\nvoid getSurfaceValues(sampler2D imageTexture, vec2 texCoord, vec2 srcImageSize, inout float values[10]) {\nvec2 onePixel = 1.0 / srcImageSize;\nvec4 va = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, -1.0)));\nvec4 vb = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(0.0, -1.0)));\nvec4 vc = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, -1.0)));\nvec4 vd = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, 0.0)));\nvec4 ve = texture2D(imageTexture, mirror(texCoord));\nvec4 vf = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, 0.0)));\nvec4 vg = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, 1.0)));\nvec4 vh = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(0.0, 1.0)));\nvec4 vi = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, 1.0)));\nfloat alpha = va.a * vb.a * vc.a * vd.a * ve.a * vf.a * vg.a * vh.a * vi.a;\nvalues[0] = va.r;\nvalues[1] = vb.r;\nvalues[2] = vc.r;\nvalues[3] = vd.r;\nvalues[4] = ve.r;\nvalues[5] = vf.r;\nvalues[6] = vg.r;\nvalues[7] = vh.r;\nvalues[8] = vi.r;\nvalues[9] = alpha;\n}`,\"inverse.glsl\":`float invertValue(float value) {\nfloat s = sign(value);\nreturn (s * s) / (value + abs(s) - 1.0);\n}`,\"mirror.glsl\":`vec2 mirror(vec2 pos) {\nvec2 pos1 = abs(pos);\nreturn step(pos1, vec2(1.0, 1.0)) * pos1 + step(1.0, pos1) * (2.0 - pos1);\n}`,\"projection.glsl\":`uniform sampler2D u_transformGrid;\nuniform vec2 u_transformSpacing;\nuniform vec2 u_transformGridSize;\nuniform vec2 u_targetImageSize;\nvec2 projectPixelLocation(vec2 coords) {\n#ifdef LOOKUP_PROJECTION\nvec4 pv = texture2D(u_transformGrid, coords);\nreturn vec2(pv.r, pv.g);\n#endif\nvec2 index_image = floor(coords * u_targetImageSize);\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\nvec2 srcLocation;\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\nif (pos.s <= pos.t) {\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\n} else {\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\n}\nreturn srcLocation;\n}`},flow:{\"getFadeOpacity.glsl\":`uniform float u_decayRate;\nuniform float u_fadeToZero;\nfloat getFadeOpacity(float x) {\nfloat cutOff = mix(0.0, exp(-u_decayRate), u_fadeToZero);\nreturn (exp(-u_decayRate * x) - cutOff) / (1.0 - cutOff);\n}`,\"getFragmentColor.glsl\":`vec4 getFragmentColor(vec4 color, float dist, float size, float featheringSize) {\nfloat featheringStart = clamp(0.5 - featheringSize / size, 0.0, 0.5);\nif (dist > featheringStart) {\ncolor *= 1.0 - (dist - featheringStart) / (0.5 - featheringStart);\n}\nreturn color;\n}`,imagery:{\"imagery.frag\":`precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform float u_Min;\nuniform float u_Max;\nuniform float u_featheringSize;\n#include <raster/flow/vv.glsl>\nfloat getIntensity(float v) {\nreturn u_Min + v * (u_Max - u_Min);\n}\nvoid main(void) {\nvec4 sampled = texture2D(u_texture, v_texcoord);\nfloat intensity = getIntensity(sampled.r);\ngl_FragColor = getColor(intensity);\ngl_FragColor.a *= getOpacity(sampled.r);\ngl_FragColor.a *= sampled.a;\ngl_FragColor.rgb *= gl_FragColor.a;\n}`,\"imagery.vert\":`attribute vec2 a_position;\nattribute vec2 a_texcoord;\nuniform mat3 u_dvsMat3;\nvarying vec2 v_texcoord;\nvoid main(void) {\nvec2 xy = (u_dvsMat3 * vec3(a_position, 1.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_texcoord = a_texcoord;\n}`},particles:{\"particles.frag\":`precision highp float;\nvarying vec4 v_color;\nvarying vec2 v_texcoord;\nvarying float v_size;\nuniform float u_featheringSize;\n#include <raster/flow/getFragmentColor.glsl>\nvoid main(void) {\ngl_FragColor = getFragmentColor(v_color, length(v_texcoord - 0.5), v_size, u_featheringSize);\n}`,\"particles.vert\":`attribute vec4 a_xyts0;\nattribute vec4 a_xyts1;\nattribute vec4 a_typeIdDurationSeed;\nattribute vec4 a_extrudeInfo;\nuniform mat3 u_dvsMat3;\nuniform mat3 u_displayViewMat3;\nuniform float u_time;\nuniform float u_trailLength;\nuniform float u_flowSpeed;\nvarying vec4 v_color;\nvarying vec2 v_texcoord;\nvarying float v_size;\nuniform float u_featheringSize;\nuniform float u_introFade;\n#include <raster/flow/vv.glsl>\n#include <raster/flow/getFadeOpacity.glsl>\nvoid main(void) {\nvec2 position0 = a_xyts0.xy;\nfloat t0 = a_xyts0.z;\nfloat speed0 = a_xyts0.w;\nvec2 position1 = a_xyts1.xy;\nfloat t1 = a_xyts1.z;\nfloat speed1 = a_xyts1.w;\nfloat type = a_typeIdDurationSeed.x;\nfloat id = a_typeIdDurationSeed.y;\nfloat duration = a_typeIdDurationSeed.z;\nfloat seed = a_typeIdDurationSeed.w;\nvec2 e0 = a_extrudeInfo.xy;\nvec2 e1 = a_extrudeInfo.zw;\nfloat animationPeriod = duration + u_trailLength;\nfloat scaledTime = u_time * u_flowSpeed;\nfloat randomizedTime = scaledTime + seed * animationPeriod;\nfloat t = mod(randomizedTime, animationPeriod);\nfloat fUnclamped = (t - t0) / (t1 - t0);\nfloat f = clamp(fUnclamped, 0.0, 1.0);\nfloat clampedTime = mix(t0, t1, f);\nfloat speed = mix(speed0, speed1, f);\nvec2 extrude;\nvec2 position;\nfloat fadeOpacity;\nfloat introOpacity;\nif (type == 2.0) {\nif (fUnclamped < 0.0 || (fUnclamped > 1.0 && t1 != duration)) {\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\nreturn;\n}\nvec2 ortho = mix(e0, e1, f);\nvec2 parallel;\nparallel = normalize(position1 - position0) * 0.5;\nif (id == 1.0) {\nextrude = ortho;\nv_texcoord = vec2(0.5, 0.0);\n} else if (id == 2.0) {\nextrude = -ortho;\nv_texcoord = vec2(0.5, 1.0);\n} else if (id == 3.0) {\nextrude = ortho + parallel;\nv_texcoord = vec2(1.0, 0.0);\n} else if (id == 4.0) {\nextrude = -ortho + parallel;\nv_texcoord = vec2(1.0, 1.0);\n}\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n} else {\nif (fUnclamped < 0.0) {\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\nreturn;\n}\nif (id == 1.0) {\nextrude = e0;\nv_texcoord = vec2(0.5, 0.0);\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\nintroOpacity = 1.0 - exp(-t0);\nv_size = getSize(speed0);\nv_color = getColor(speed0);\nv_color.a *= getOpacity(speed0);\nposition = position0;\n} else if (id == 2.0) {\nextrude = -e0;\nv_texcoord = vec2(0.5, 1.0);\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\nintroOpacity = 1.0 - exp(-t0);\nv_size = getSize(speed0);\nv_color = getColor(speed0);\nv_color.a *= getOpacity(speed0);\nposition = position0;\n} else if (id == 3.0) {\nextrude = mix(e0, e1, f);\nv_texcoord = vec2(0.5, 0.0);\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n} else if (id == 4.0) {\nextrude = -mix(e0, e1, f);\nv_texcoord = vec2(0.5, 1.0);\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n}\n}\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(extrude * v_size, 0.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_color.a *= fadeOpacity;\nv_color.a *= mix(1.0, introOpacity, u_introFade);\nv_color.rgb *= v_color.a;\n}`},streamlines:{\"streamlines.frag\":`precision highp float;\nvarying float v_side;\nvarying float v_time;\nvarying float v_totalTime;\nvarying float v_timeSeed;\nvarying vec4 v_color;\nvarying float v_size;\nuniform float u_time;\nuniform float u_trailLength;\nuniform float u_flowSpeed;\nuniform float u_featheringSize;\nuniform float u_introFade;\n#include <raster/flow/getFragmentColor.glsl>\n#include <raster/flow/getFadeOpacity.glsl>\nvoid main(void) {\nfloat t = mod(v_timeSeed * (v_totalTime + u_trailLength) + u_time * u_flowSpeed, v_totalTime + u_trailLength) - v_time;\nvec4 color = v_color * step(0.0, t) * getFadeOpacity(t / u_trailLength);\ncolor *= mix(1.0, 1.0 - exp(-v_time), u_introFade);\ngl_FragColor = getFragmentColor(color, length((v_side + 1.0) / 2.0 - 0.5), v_size, u_featheringSize);\n}`,\"streamlines.vert\":`attribute vec3 a_positionAndSide;\nattribute vec3 a_timeInfo;\nattribute vec2 a_extrude;\nattribute float a_speed;\nuniform mat3 u_dvsMat3;\nuniform mat3 u_displayViewMat3;\nvarying float v_time;\nvarying float v_totalTime;\nvarying float v_timeSeed;\nvarying vec4 v_color;\nvarying float v_side;\nvarying float v_size;\nuniform float u_featheringSize;\n#include <raster/flow/vv.glsl>\nvoid main(void) {\nvec4 lineColor = getColor(a_speed);\nfloat lineOpacity = getOpacity(a_speed);\nfloat lineSize = getSize(a_speed);\nvec2 position = a_positionAndSide.xy;\nv_side = a_positionAndSide.z;\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineSize, 0.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_time = a_timeInfo.x;\nv_totalTime = a_timeInfo.y;\nv_timeSeed = a_timeInfo.z;\nv_color = lineColor;\nv_color.a *= lineOpacity;\nv_color.rgb *= v_color.a;\nv_size = lineSize;\n}`},\"vv.glsl\":`#define MAX_STOPS 8\n#ifdef VV_COLOR\nuniform float u_color_stops[MAX_STOPS];\nuniform vec4 u_color_values[MAX_STOPS];\nuniform int u_color_count;\n#else\nuniform vec4 u_color;\n#endif\n#ifdef VV_OPACITY\nuniform float u_opacity_stops[MAX_STOPS];\nuniform float u_opacity_values[MAX_STOPS];\nuniform int u_opacity_count;\n#else\nuniform float u_opacity;\n#endif\n#ifdef VV_SIZE\nuniform float u_size_stops[MAX_STOPS];\nuniform float u_size_values[MAX_STOPS];\nuniform int u_size_count;\n#else\nuniform float u_size;\n#endif\nuniform float u_featheringOffset;\nvec4 getColor(float x) {\n#ifdef VV_COLOR\nvec4 color = u_color_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_color_count) {\nbreak;\n}\nfloat x1 = u_color_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_color_stops[i];\nvec4 y2 = u_color_values[i];\nif (x < x2) {\nvec4 y1 = u_color_values[i - 1];\ncolor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\ncolor = y2;\n}\n}\n}\n#else\nvec4 color = u_color;\n#endif\nreturn color;\n}\nfloat getOpacity(float x) {\n#ifdef VV_OPACITY\nfloat opacity = u_opacity_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_opacity_count) {\nbreak;\n}\nfloat x1 = u_opacity_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_opacity_stops[i];\nfloat y2 = u_opacity_values[i];\nif (x < x2) {\nfloat y1 = u_opacity_values[i - 1];\nopacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\nopacity = y2;\n}\n}\n}\n#else\nfloat opacity = u_opacity;\n#endif\nreturn opacity;\n}\nfloat getSize(float x) {\n#ifdef VV_SIZE\nfloat size = u_size_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_size_count) {\nbreak;\n}\nfloat x1 = u_size_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_size_stops[i];\nfloat y2 = u_size_values[i];\nif (x < x2) {\nfloat y1 = u_size_values[i - 1];\nsize = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\nsize = y2;\n}\n}\n}\n#else\nfloat size = u_size;\n#endif\nreturn size + 2.0 * u_featheringSize * u_featheringOffset;\n}`},hillshade:{\"hillshade.frag\":`precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform int u_hillshadeType;\nuniform float u_sinZcosAs[6];\nuniform float u_sinZsinAs[6];\nuniform float u_cosZs[6];\nuniform float u_weights[6];\nuniform vec2 u_factor;\nuniform float u_minValue;\nuniform float u_maxValue;\nuniform float u_scaling;\n#include <raster/lut/colorize.glsl>\n#include <raster/common/getSurfaceValues.glsl>\nvec3 rgb2hsv(vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\nvec3 hsv = rgb2hsv(rgb.xyz);\nhsv.z = hillshade;\nreturn vec4(hsv2rgb(hsv) * u_scaling, 1.0) * rgb.a;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nif (currentPixel.a == 0.0) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nfloat pv[10];\ngetSurfaceValues(u_image, pixelLocation, u_srcImageSize, pv);\nfloat alpha = pv[9];\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) * u_factor.s;\nfloat dzy = (pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) * u_factor.t;\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\nfloat hillshade = 0.0;\nif (u_hillshadeType == 0){\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\nif (z < 0.0)  z = 0.0;\nhillshade = z;\n} else {\nfor (int k = 0; k < 6; k++) {\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\nif (z < 0.0) z = 0.0;\nhillshade = hillshade + z * u_weights[k];\nif (k == 5) break;\n}\n}\n#ifdef APPLY_COLORMAP\nvec4 result = overlay(pv[4], u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\n#else\nhillshade *= u_scaling;\nvec4 result = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\n#endif\n#ifdef ROUND_OUTPUT\nresult = vec4(floor(result.xyz + 0.5), result.a);\n#endif\ngl_FragColor = result;\n}`},lut:{\"colorize.glsl\":`uniform sampler2D u_colormap;\nuniform float u_colormapOffset;\nuniform float u_colormapMaxIndex;\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\nvec4 color = texture2D(u_colormap, clrPosition);\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\nreturn result;\n}\nvec4 colorizeNoClamp(vec4 currentPixel, float scaleFactor) {\nfloat value = currentPixel.r * scaleFactor - u_colormapOffset;\nvec4 result = colorize(currentPixel, scaleFactor);\nreturn result * step(0.0, value) * step(value, u_colormapMaxIndex);\n}`,\"lut.frag\":`precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\n#include <raster/lut/colorize.glsl>\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nvec4 result = colorizeNoClamp(currentPixel, 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\n}`},magdir:{\"magdir.frag\":`precision mediump float;\nvarying vec4 v_color;\nuniform lowp float u_opacity;\nvoid main() {\ngl_FragColor = v_color * u_opacity;\n}`,\"magdir.vert\":`precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_vv;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform vec2 u_symbolSize;\nuniform vec2 u_symbolPercentRange;\nuniform vec2 u_dataRange;\nuniform float u_rotation;\nuniform vec4 u_colors[12];\nvarying vec4 v_color;\nvoid main()\n{\nfloat angle = a_offset.y + u_rotation;\n#ifndef ROTATION_GEOGRAPHIC\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\n#endif\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\n#ifdef DATA_RANGE\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\n#else\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\n#endif\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\nv_color = u_colors[int(a_vv.x)];\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\n}`},reproject:{\"reproject.frag\":`precision mediump float;\nvarying vec2 v_texcoord;\n#include <raster/common/common.glsl>\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\n}`,\"reproject.vert\":`precision mediump float;\nattribute vec2 a_position;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_position;\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\n}`},rfx:{aspect:{\"aspect.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform vec2 u_cellSize;\nuniform vec2 u_srcImageSize;\n#include <raster/common/getSurfaceValues.glsl>\nconst float pi = 3.14159265359;\nvoid main() {\nfloat pv[10];\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\nfloat alpha = pv[9];\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) / (8.0 * u_cellSize[0]);\nfloat dzy = -(pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) / (8.0 * u_cellSize[1]);\nalpha *= sign(abs(dzx) + abs(dzy));\nfloat aspect_rad = (dzx == 0.0) ? (step(0.0, dzy) * 0.5 * pi + step(dzy, 0.0) * 1.5 * pi) : mod((2.5 * pi + atan(dzy, -dzx)), 2.0 * pi);\nfloat aspect = aspect_rad * 180.0 / pi;\ngl_FragColor = vec4(aspect, aspect, aspect, 1.0) * alpha;\n}`},bandarithmetic:{\"bandarithmetic.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform mediump mat3 u_bandIndexMat3;\nuniform float u_adjustments[3];\n#include <raster/common/inverse.glsl>\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\nfloat nir = pv2.r;\nfloat red = pv2.g;\nfloat index;\n#ifdef NDXI\nindex = (nir - red) * invertValue(nir + red);\n#elif defined(SR)\nindex = nir * invertValue(red);\n#elif defined(CI)\nindex = nir * invertValue(red) - 1.0;\n#elif defined(SAVI)\nindex = (nir - red) * invertValue(nir + red + u_adjustments[0]) * (1.0 + u_adjustments[0]);\n#elif defined(TSAVI)\nfloat s = u_adjustments[0];\nfloat a = u_adjustments[1];\nfloat x = u_adjustments[2];\nfloat y = -a * s + x * (1.0 + s * s);\nindex = (s * (nir - s * red - a)) * invertValue(a * nir + red + y);\n#elif defined(MSAVI)\nfloat nir2 = 2.0 * nir + 1.0;\nindex = 0.5 * (nir2 - sqrt(nir2 * nir2 - 8.0 * (nir - red)));\n#elif defined(GEMI)\nfloat eta = (2.0 * (nir * nir - red * red) + 1.5 * nir + 0.5 * red) * invertValue(nir + red + 0.5);\nindex = eta * (1.0 - 0.25 * eta) - (red - 0.125) * invertValue(1.0 - red);\n#elif defined(PVI)\nfloat a = u_adjustments[0];\nfloat b = u_adjustments[1];\nfloat y = sqrt(1.0 + a * a);\nindex = (nir - a * red - b) * invertValue(y);\n#elif defined(VARI)\nindex = (pv2.g - pv2.r) * invertValue(pv2.g + pv2.r - pv2.b);\n#elif defined(MTVI)\nfloat green = pv2.b;\nfloat v = sqrt(pow((2.0 * nir + 1.0), 2.0) - (6.0 * nir - 5.0 * sqrt(red)) - 0.5);\nindex = 1.5 * (1.2 * (nir - green) - 2.5 * (red - green)) * invertValue(v);\n#elif defined(RTVICORE)\nfloat green = pv2.b;\nindex = 100.0 * (nir - red) - 10.0 * (nir - green);\n#elif defined(EVI)\nfloat blue = pv2.b;\nfloat denom = nir + 6.0 * red - 7.5 * blue + 1.0;\nindex =  (2.5 * (nir - red)) * invertValue(denom);\n#elif defined(WNDWI)\nfloat g = pv2.r;\nfloat n = pv2.g;\nfloat s = pv2.b;\nfloat a = u_adjustments[0];\nfloat denom = g + a * n + (1.0 - a) * s;\nindex = (g - a * n - (1.0 - a) * s) * invertValue(denom);\n#elif defined(BAI)\nindex = invertValue(pow((0.1 - red), 2.0) + pow((0.06 - nir), 2.0));\n#else\ngl_FragColor = pv;\nreturn;\n#endif\n#ifdef ROUND_OUTPUT\nindex = floor(index + 0.5);\n#endif\ngl_FragColor = vec4(index, index, index, pv.a);\n}`},colormap2rgb:{\"colormap2rgb.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\n#include <raster/lut/colorize.glsl>\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nvec4 result = colorizeNoClamp(vec4(pv.r, pv.r, pv.r, 1.0), 1.0);\ngl_FragColor = vec4(result.xyz * 255.0, 1.0) * result.a * pv.a;\n}`},compositeband:{\"compositeband.frag\":`precision mediump float;\nuniform sampler2D u_image;\nuniform sampler2D u_image1;\nuniform sampler2D u_image2;\n#ifdef ONE_CONSTANT\nuniform float u_image1Const;\n#ifdef TWO_CONSTANT\nuniform float u_image2Const;\n#endif\nuniform mat3 u_imageSwap;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\nvec4 pv0 = texture2D(u_image, v_texcoord);\nfloat a = pv0.r;\nfloat alpha = pv0.a;\n#ifdef TWO_CONSTANT\nfloat b = u_image1Const;\nfloat c = u_image2Const;\nvec3 abc = u_imageSwap * vec3(a, b, c);\na = abc.s;\nb = abc.t;\nc = abc.p;\n#elif defined(ONE_CONSTANT)\nvec4 pv1 = texture2D(u_image1, v_texcoord);\nfloat b = pv1.r;\nfloat c = u_image1Const;\nvec3 abc = u_imageSwap * vec3(a, b, c);\na = abc.s;\nb = abc.t;\nc = abc.p;\nalpha *= pv1.a;\n#else\nvec4 pv1 = texture2D(u_image1, v_texcoord);\nvec4 pv2 = texture2D(u_image2, v_texcoord);\nfloat b = pv1.r;\nfloat c = pv2.r;\nalpha = alpha * pv1.a * pv2.a;\n#endif\ngl_FragColor = vec4(a, b, c, alpha);\n}`},computechange:{\"computechange.frag\":`precision mediump float;\nuniform sampler2D u_image;\nuniform sampler2D u_image1;\n#ifdef ONE_CONSTANT\nuniform float u_image1Const;\nuniform mat3 u_imageSwap;\n#endif\nvarying vec2 v_texcoord;\nuniform vec2 u_domainRange;\n#include <raster/common/inverse.glsl>\nvoid main() {\nvec4 pv0 = texture2D(u_image, v_texcoord);\nfloat a = pv0.r;\n#ifdef ONE_CONSTANT\nfloat b = u_image1Const;\nvec3 abc = u_imageSwap * vec3(a, b, 0);\na = abc.s;\nb = abc.t;\n#else\nvec4 pv1 = texture2D(u_image1, v_texcoord);\nfloat b = pv1.r;\n#endif\nfloat result = a;\nfloat alpha = pv0.a;\n#ifdef DIFFERENCE\nresult = a - b;\n#elif defined(RELATIVE)\nresult = (a - b) * invertValue(max(abs(a), abs(b)));\n#endif\nbool isInvalid = result < u_domainRange.s || result > u_domainRange.t;\nresult = isInvalid ? 0.0 : result;\nalpha *= float(!isInvalid);\n#ifdef ROUND_OUTPUT\nresult = floor(result + 0.5);\n#endif\ngl_FragColor = vec4(result, result, result, alpha);\n}`},contrast:{\"contrast.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\n#include <raster/common/contrastBrightness.glsl>\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nvec4 result = adjustContrastBrightness(pv, false);\ngl_FragColor = vec4(floor(result.rgb * 255.0 + 0.5), result.a);\n}`},convolution:{\"convolution.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform vec2 u_srcImageSize;\n#define KERNEL_SIZE_ROWS ROWS\n#define KERNEL_SIZE_COLS COLS\nuniform vec2 u_clampRange;\nuniform float u_kernel[25];\n#include <raster/common/mirror.glsl>\nvoid main() {\nvec3 rgb = vec3(0.0, 0.0, 0.0);\nvec2 resolution = 1.0 / u_srcImageSize;\nfloat rowOffset = -float(floor(float(KERNEL_SIZE_ROWS) / 2.0));\nfloat colOffset = -float(floor(float(KERNEL_SIZE_COLS) / 2.0));\nfloat alpha = 1.0;\nfor (int row = 0; row < KERNEL_SIZE_ROWS; row++) {\nfloat pos_row = rowOffset + float(row);\nfor (int col = 0; col < KERNEL_SIZE_COLS; col++) {\nvec2 pos = v_texcoord + vec2(colOffset + float(col), pos_row) * resolution;\nvec4 pv = texture2D(u_image, mirror(pos));\nrgb += pv.rgb * u_kernel[row * KERNEL_SIZE_COLS + col];\nalpha *= pv.a;\n}\n}\nrgb = clamp(rgb, u_clampRange.s, u_clampRange.t);\ngl_FragColor = vec4(rgb * alpha, alpha);\n}`},curvature:{\"curvature.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform float u_zlFactor;\nuniform vec2 u_srcImageSize;\n#include <raster/common/getSurfaceValues.glsl>\nvoid main() {\nfloat pv[10];\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\nfloat alpha = pv[9];\nfloat d = ((pv[3] + pv[5]) * 0.5 - pv[4]);\nfloat e = ((pv[1] + pv[7]) * 0.5 - pv[4]);\nfloat curvature = 0.0;\n#ifdef STANDARD\ncurvature = -u_zlFactor * (d + e);\ngl_FragColor = vec4(curvature, curvature, curvature, alpha);\n#else\nfloat f = (-pv[0] + pv[2] + pv[6] - pv[8]) / 4.0;\nfloat g = (-pv[3] + pv[5]) / 2.0;\nfloat h = (pv[1] - pv[7]) / 2.0;\nfloat g2 = g * g;\nfloat h2 = h * h;\n#ifdef PROFILE\ncurvature = (u_zlFactor * (d * g2 + e * h2 + f * g * h)) / (g2 + h2);\n#else\ncurvature = (-u_zlFactor * (d * h2 + e * g2 - f * g * h)) / (g2 + h2);\n#endif\n#endif\ngl_FragColor = vec4(curvature, curvature, curvature, alpha);\n}`},extractband:{\"extractband.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform mediump mat3 u_bandIndexMat3;\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\ngl_FragColor = vec4(pv2, pv.a);\n}`},focalstatistics:{\"focalstatistics.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform vec2 u_srcImageSize;\n#define KERNEL_SIZE_ROWS ROWS\n#define KERNEL_SIZE_COLS COLS\nuniform vec2 u_clampRange;\n#include <raster/common/mirror.glsl>\n#include <raster/common/inverse.glsl>\nvoid main() {\nvec2 resolution = 1.0 / u_srcImageSize;\nfloat rowOffset = -float(floor(float(KERNEL_SIZE_ROWS) / 2.0));\nfloat colOffset = -float(floor(float(KERNEL_SIZE_COLS) / 2.0));\nfloat count = 0.0;\n#ifdef STDDEV\nvec3 sum = vec3(0.0, 0.0, 0.0);\nvec3 sum2 = vec3(0.0, 0.0, 0.0);\n#endif\nvec4 currentPixel = texture2D(u_image, v_texcoord);\nvec3 rgb = currentPixel.rgb;\nfor (int row = 0; row < KERNEL_SIZE_ROWS; row++) {\nfloat pos_row = rowOffset + float(row);\nfor (int col = 0; col < KERNEL_SIZE_COLS; col++) {\nvec2 pos = v_texcoord + vec2(colOffset + float(col), pos_row) * resolution;\nvec4 pv = texture2D(u_image, mirror(pos));\ncount += pv.a;\n#ifdef MIN\nrgb = min(rgb, pv.rgb);\n#elif defined(MAX)\nrgb = max(rgb, pv.rgb);\n#elif defined(MEAN)\nrgb += pv.rgb;\n#elif defined(STDDEV)\nsum += pv.rgb;\nsum2 += (pv.rgb * pv.rgb);\n#endif\n}\n}\n#ifdef MEAN\nrgb *= invertValue(count);\n#elif defined(STDDEV)\nrgb = sqrt((sum2 - sum * sum * invertValue(count)) * invertValue(count));\n#endif\nfloat alpha = step(0.9999, count);\nrgb = clamp(rgb, u_clampRange.s, u_clampRange.t);\n#ifdef FILL\nrgb = (1.0 - currentPixel.a) * rgb + currentPixel.a * currentPixel.rgb;\n#endif\ngl_FragColor = vec4(rgb * alpha, alpha);\n}`},grayscale:{\"grayscale.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform vec3 u_weights;\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nfloat value = dot(u_weights, pv.rgb);\ngl_FragColor = vec4(value, value, value, pv.a);\n}`},local:{\"local.frag\":`precision highp float;\nuniform sampler2D u_image;\nuniform sampler2D u_image1;\n#ifdef ONE_CONSTANT\nuniform float u_image1Const;\n#ifdef TWO_CONSTANT\nuniform float u_image2Const;\n#endif\nuniform mat3 u_imageSwap;\n#endif\nvarying vec2 v_texcoord;\nuniform vec2 u_domainRange;\n#include <raster/common/inverse.glsl>\nvoid main() {\nvec4 pv0 = texture2D(u_image, v_texcoord);\nfloat a = pv0.r;\n#ifdef TWO_IMAGES\n#ifdef ONE_CONSTANT\nfloat b = u_image1Const;\nvec3 abc = u_imageSwap * vec3(a, b, 0);\na = abc.s;\nb = abc.t;\n#else\nvec4 pv1 = texture2D(u_image1, v_texcoord);\nfloat b = pv1.r;\n#endif\n#elif defined(CONDITIONAL)\n#ifdef TWO_CONSTANT\nfloat b = u_image1Const;\nfloat c = u_image2Const;\nvec3 abc = u_imageSwap * vec3(a, b, c);\na = abc.s;\nb = abc.t;\nc = abc.p;\n#elif defined(ONE_CONSTANT)\nvec4 pv1 = texture2D(u_image1, v_texcoord);\nfloat b = pv1.r;\nfloat c = u_image1Const;\nvec3 abc = u_imageSwap * vec3(a, b, c);\na = abc.s;\nb = abc.t;\nc = abc.p;\n#else\nvec4 pv1 = texture2D(u_image1, v_texcoord);\nvec4 pv2 = texture2D(u_image2, v_texcoord);\nfloat b = pv1.r;\nfloat c = pv2.r;\n#endif\n#endif\nfloat result = a;\nfloat alpha = pv0.a;\n#ifdef PLUS\nresult = a + b;\n#elif defined(MINUS)\nresult = a - b;\n#elif defined(TIMES)\nresult = a * b;\n#elif defined(DIVIDE)\nresult = a * invertValue(b);\nalpha *= float(abs(sign(b)));\n#elif defined(FLOATDIVIDE)\nresult = a * invertValue(b);\nalpha *= float(abs(sign(b)));\n#elif defined(FLOORDIVIDE)\nresult = floor(a * invertValue(b));\nalpha *= float(abs(sign(b)));\n#elif defined(SQUARE)\nresult = a * a;\n#elif defined(SQRT)\nresult = sqrt(a);\n#elif defined(POWER)\nresult = pow(a, b);\n#elif defined(LN)\nresult = a <= 0.0 ? 0.0: log(a);\nalpha *= float(a > 0.0);\n#elif defined(LOG_1_0)\nresult = a <= 0.0 ? 0.0: log2(a) * invertValue(log2(10.0));\nalpha *= float(a > 0.0);\n#elif defined(LOG_2)\nresult = a <= 0.0 ? 0.0: log2(a);\nalpha *= float(a > 0.0);\n#elif defined(EXP)\nresult = exp(a);\n#elif defined(EXP_1_0)\nresult = pow(10.0, a);\n#elif defined(EXP_2)\nresult = pow(2.0, a);\n#elif defined(ROUNDDOWN)\nresult = floor(a);\n#elif defined(ROUNDUP)\nresult = ceil(a);\n#elif defined(INT)\nresult = float(sign(a)) * floor(abs(a));\n#elif defined(MOD)\nresult = mod(a, b);\n#elif defined(NEGATE)\nresult = -a;\n#elif defined(ABS)\nresult = abs(a);\n#elif defined(ACOS)\nresult = abs(a) > 1.0 ? 0.0: acos(a);\nalpha *= step(abs(a), 1.00001);\n#elif defined(ACOSH)\nresult = acosh(a);\n#elif defined(ASIN)\nresult = abs(a) > 1.0 ? 0.0: asin(a);\nalpha *= step(abs(a), 1.00001);\n#elif defined(ASINH)\nresult = asinh(a);\n#elif defined(ATAN)\nresult = atan(a);\n#elif defined(ATANH)\nresult = abs(a) > 1.0 ? 0.0: atanh(a);\nalpha *= step(abs(a), 1.0);\n#elif defined(ATAN_2)\nresult = atan(a, b);\n#elif defined(COS)\nresult = cos(a);\n#elif defined(COSH)\nresult = cosh(a);\n#elif defined(SIN)\nresult = sin(a);\n#elif defined(SINH)\nresult = sinh(a);\n#elif defined(TAN)\nresult = tan(a);\n#elif defined(TANH)\nresult = tanh(a);\n#elif defined(BITWISEAND)\nresult = float(int(a) & int(b));\n#elif defined(BITWISEOR)\nresult = float(int(a) | int(b));\n#elif defined(BITWISELEFTSHIFT)\nresult = float(int(a) << int(b));\n#elif defined(BITWISERIGHTSHIFT)\nresult = float(int(a) >> int(b));\n#elif defined(BITWISENOT)\nresult = float(~(int(a)));\n#elif defined(BITWISEXOR)\nresult = float(int(a) ^ int(b));\n#elif defined(BOOLEANAND)\nresult = float((a != 0.0) && (b != 0.0));\n#elif defined(BOOLEANNOT)\nresult = float(a == 0.0);\n#elif defined(BOOLEANOR)\nresult = float((a != 0.0) || (b != 0.0));\n#elif defined(BOOLEANXOR)\nresult = float((a != 0.0) ^^ (b != 0.0));\n#elif defined(GREATERTHAN)\nresult = float(a > b);\n#elif defined(GREATERTHANEQUAL)\nresult = float(a >= b);\n#elif defined(LESSTHAN)\nresult = float(a < b);\n#elif defined(LESSTHANEQUAL)\nresult = float(a <= b);\n#elif defined(EQUALTO)\nresult = float(a == b);\n#elif defined(NOTEQUAL)\nresult = float(a != b);\n#elif defined(ISNULL)\nresult = float(alpha == 0.0);\nalpha = 1.0;\n#elif defined(SETNULL)\nfloat maskValue = float(a == 0.0);\nresult = maskValue * b;\nalpha *= maskValue;\n#elif defined(CONDITIONAL)\nfloat weight = float(abs(sign(a)));\nresult = weight * b + (1.0 - weight) * c;\n#endif\nfloat rangeFactor = step(u_domainRange.s, result) * step(result, u_domainRange.t);\nresult *= rangeFactor;\nalpha *= rangeFactor;\n#ifdef ROUND_OUTPUT\nresult = floor(result + 0.5);\n#endif\ngl_FragColor = vec4(result, result, result, alpha);\n}`},mask:{\"mask.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\n#define LEN_INCLUDED_RANGES 6\n#define LEN_NODATA_VALUES 6\nuniform highp float u_includedRanges[6];\nuniform highp float u_noDataValues[6];\nfloat maskFactor(float bandValue, float fromValue, float to) {\nfloat factor = 1.0;\nfor (int i = 0; i < LEN_NODATA_VALUES; i++) {\nfactor *= float(u_noDataValues[i] != bandValue);\n}\nfactor *= step(fromValue, bandValue) * step(bandValue, to);\nreturn factor;\n}\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nfloat redFactor = maskFactor(pv.r, u_includedRanges[0], u_includedRanges[1]);\n#ifdef MULTI_BAND\nfloat greenFactor = maskFactor(pv.g, u_includedRanges[2], u_includedRanges[3]);\nfloat blueFactor = maskFactor(pv.b, u_includedRanges[4], u_includedRanges[5]);\nfloat maskFactor = redFactor * greenFactor * blueFactor;\ngl_FragColor = pv * maskFactor;\n#else\ngl_FragColor = pv * redFactor;\n#endif\n}`},ndvi:{\"ndvi.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform mediump mat3 u_bandIndexMat3;\n#include <raster/common/inverse.glsl>\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\nfloat nir = pv2.r;\nfloat red = pv2.g;\nfloat index = (nir - red) * invertValue(nir + red);\n#ifdef SCALED\nindex = floor((index + 1.0) * 100.0 + 0.5);\n#endif\ngl_FragColor = vec4(index, index, index, pv.a);\n}`},remap:{\"remap.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\n#define LEN_REMAP_RANGES 18\n#define LEN_NODATA_RANGES 12\nuniform highp float u_rangeMaps[18];\nuniform highp float u_noDataRanges[12];\nuniform highp float u_unmatchMask;\nuniform vec2 u_clampRange;\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nfloat factor = 1.0;\nfloat bandValue = pv.r;\nfor (int i = 0; i < LEN_NODATA_RANGES; i+=2) {\nfloat inside = 1.0 - step(u_noDataRanges[i], bandValue) * step(bandValue, u_noDataRanges[i+1]);\nfactor *= inside;\n}\nfloat mapValue = 0.0;\nfloat includeMask = 0.0;\nfor (int i = 0; i < LEN_REMAP_RANGES; i+=3) {\nfloat stepMask = step(u_rangeMaps[i], bandValue) * step(bandValue, u_rangeMaps[i+1]);\nincludeMask = (1.0 - stepMask) * includeMask + stepMask;\nmapValue = (1.0 - stepMask) * mapValue + stepMask * u_rangeMaps[i+2];\n}\nbandValue = factor * (mapValue + (1.0 - includeMask) * u_unmatchMask * pv.r);\nfloat bandMask = factor * max(u_unmatchMask, includeMask);\nbandValue = clamp(bandValue, u_clampRange.s, u_clampRange.t);\ngl_FragColor = vec4(bandValue, bandValue, bandValue, bandMask * pv.a);\n}`},slope:{\"slope.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform vec2 u_cellSize;\nuniform float u_zFactor;\nuniform vec2 u_srcImageSize;\nuniform float u_pixelSizePower;\nuniform float u_pixelSizeFactor;\n#include <raster/common/getSurfaceValues.glsl>\nvoid main() {\nfloat pv[10];\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\nfloat alpha = pv[9];\nfloat xf = (u_zFactor + pow(u_cellSize[0], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[0]);\nfloat yf = (u_zFactor + pow(u_cellSize[1], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[1]);\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) * xf;\nfloat dzy = -(pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) * yf;\nfloat rise2run = sqrt(dzx * dzx + dzy * dzy);\n#ifdef PERCENT_RISE\nfloat result = rise2run * 100.0;\n#else\nfloat result = atan(rise2run) * 57.2957795;\n#endif\n#ifdef ROUND_OUTPUT\nresult = floor(result + 0.5);\n#endif\ngl_FragColor = vec4(result, result, result, alpha);\n}`},stretch:{\"stretch.frag\":`precision mediump float;\nuniform sampler2D u_image;\nvarying highp vec2 v_texcoord;\nuniform float u_minCutOff[3];\nuniform float u_maxCutOff[3];\nuniform float u_minOutput;\nuniform float u_maxOutput;\nuniform float u_factor[3];\nuniform float u_gamma[3];\nuniform float u_gammaCorrection[3];\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, float gamma, float gammaCorrection) {\nval = clamp(val, minCutOff, maxCutOff);\nfloat stretchedVal;\n#ifdef USE_GAMMA\nfloat tempf = 1.0;\nfloat outRange = maxOutput - minOutput;\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\ntempf -= step(1.0, gamma) * sign(gamma - 1.0) * pow(1.0 / outRange, relativeVal * gammaCorrection);\nstretchedVal = tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput;\nstretchedVal = clamp(stretchedVal, minOutput, maxOutput);\n#else\nstretchedVal = minOutput + (val - minCutOff) * factor;\n#endif\n#ifdef ROUND_OUTPUT\nstretchedVal = floor(stretchedVal + 0.5);\n#endif\nreturn stretchedVal;\n}\nvoid main() {\nvec4 currentPixel = texture2D(u_image, v_texcoord);\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_gamma[0], u_gammaCorrection[0]);\n#ifdef MULTI_BAND\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_gamma[1], u_gammaCorrection[1]);\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_gamma[2], u_gammaCorrection[2]);\ngl_FragColor = vec4(redVal, greenVal, blueVal, currentPixel.a);\n#else\ngl_FragColor = vec4(redVal, redVal, redVal, currentPixel.a);\n#endif\n}`},vs:{\"vs.vert\":`precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}`}},scalar:{\"scalar.frag\":`precision mediump float;\nuniform lowp float u_opacity;\nvarying vec2 v_pos;\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\nconst float outlineSize = 0.02;\nconst float innerRadius = 0.25;\nconst float outerRadius = 0.42;\nconst float innerSquareLength = 0.15;\nvoid main() {\nmediump float dist = length(v_pos);\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\n#ifdef INNER_CIRCLE\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\n#else\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\n#endif\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\n}`,\"scalar.vert\":`precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_vv;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform vec2 u_symbolSize;\nuniform vec2 u_symbolPercentRange;\nuniform vec2 u_dataRange;\nvarying vec2 v_pos;\nvoid main()\n{\n#ifdef DATA_RANGE\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\n#else\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\n#endif\nvec2 size = u_symbolSize * sizePercentage;\nvec2 pos = a_pos + a_offset * size;\nv_pos = a_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\n}`},stretch:{\"stretch.frag\":`precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform float u_minCutOff[3];\nuniform float u_maxCutOff[3];\nuniform float u_minOutput;\nuniform float u_maxOutput;\nuniform float u_factor[3];\nuniform bool u_useGamma;\nuniform float u_gamma[3];\nuniform float u_gammaCorrection[3];\n#include <raster/lut/colorize.glsl>\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\nif (val >= maxCutOff) {\nreturn maxOutput;\n} else if (val <= minCutOff) {\nreturn minOutput;\n}\nfloat stretchedVal;\nif (useGamma) {\nfloat tempf = 1.0;\nfloat outRange = maxOutput - minOutput;\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\nif (gamma > 1.0) {\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\n}\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\n} else {\nstretchedVal = minOutput + (val - minCutOff) * factor;\n}\n#ifdef ROUND_OUTPUT\nstretchedVal = floor(stretchedVal + 0.5);\n#endif\nreturn stretchedVal;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\n#ifdef NOOP\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\nreturn;\n#endif\nif (u_bandCount == 1) {\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\n#ifdef APPLY_COLORMAP\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\n#else\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\n#endif\n} else {\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\n}\n}`}},stencil:{\"stencil.frag\":`void main() {\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n}`,\"stencil.vert\":`attribute vec2 a_pos;\nuniform mat3 u_worldExtent;\nvoid main() {\ngl_Position = vec4(u_worldExtent * vec3(a_pos, 1.0), 1.0);\n}`},test:{\"TestShader.common.glsl\":`#ifndef RETURN_RED\nvarying    vec4      v_color;\n#endif\nvarying    vec2      v_offset;`,\"TestShader.frag\":`precision highp float;\n#include <test/TestShader.common.glsl>\nvoid main() {\nif (v_offset.x > -.5 && v_offset.y > -.5 && v_offset.x < .5 && v_offset.y < .5) {\ndiscard;\n}\n#ifdef RETURN_RED\ngl_FragColor = vec4(1., 0., 0., 1.);\n#else\ngl_FragColor = v_color;\n#endif\n}`,\"TestShader.vert\":`const float POS_PRECISION_FACTOR = 10.;\nconst float OFFSET_PRECISION_FACTOR = 10.;\nconst float SIZE_PRECISION_FACTOR = 10.;\nattribute  vec2      a_pos_packed;\nattribute  vec2      a_offset_packed;\nattribute  float     a_size_packed;\n#ifdef DATA_DRIVEN_COLOR\nconst float u_dataDrivenColor_validValues[4] = float[4](0., 0., 1., 0.);\nuniform    vec4      u_dataDrivenColor_colorFallback;\nuniform    vec4      u_dataDrivenColor_color;\n#endif\nuniform    float     u_view_zoomLevel;\n#include <test/TestShader.common.glsl>\n#ifdef DATA_DRIVEN_COLOR\nvec4 getColor(float value) {\nint index = -1;\nfor (int i = 0; i < 4; i++) {\nif (u_dataDrivenColor_validValues[i] == value) {\nindex = i;\nbreak;\n}\n}\nif (index == -1) {\nreturn u_dataDrivenColor_colorFallback;\n}\nreturn u_dataDrivenColor_color;\n}\n#endif\nvoid main() {\nvec2  a_pos = a_pos_packed / POS_PRECISION_FACTOR;\nvec2  a_offset = a_offset_packed / OFFSET_PRECISION_FACTOR;\nfloat a_size = a_size_packed / SIZE_PRECISION_FACTOR;\nvec4 color = vec4(1., 0., 0., 1.);\n#ifdef DATA_DRIVEN_COLOR\ncolor = getColor(1.);\n#endif\nvec2 offsetScaled = a_offset * a_size;\nvec4 pos = vec4(a_pos.xy + offsetScaled, 0., 1.);\ngl_Position = pos;\n#ifndef RETURN_RED\nv_color = color;\n#endif\nv_offset = a_offset;\n}`},tileInfo:{\"tileInfo.frag\":`uniform mediump sampler2D u_texture;\nvarying mediump vec2 v_tex;\nvoid main(void) {\nlowp vec4 color = texture2D(u_texture, v_tex);\ncolor.rgb *= color.a;\ngl_FragColor = color;\n}`,\"tileInfo.vert\":`attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump float u_depth;\nuniform mediump vec2 u_coord_ratio;\nuniform mediump vec2 u_delta;\nuniform mediump vec2 u_dimensions;\nvarying mediump vec2 v_tex;\nvoid main() {\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\nv_tex = a_pos;\n}`},util:{\"atan2.glsl\":`float atan2(in float y, in float x) {\nfloat t0, t1, t2, t3, t4;\nt3 = abs(x);\nt1 = abs(y);\nt0 = max(t3, t1);\nt1 = min(t3, t1);\nt3 = 1.0 / t0;\nt3 = t1 * t3;\nt4 = t3 * t3;\nt0 =         - 0.013480470;\nt0 = t0 * t4 + 0.057477314;\nt0 = t0 * t4 - 0.121239071;\nt0 = t0 * t4 + 0.195635925;\nt0 = t0 * t4 - 0.332994597;\nt0 = t0 * t4 + 0.999995630;\nt3 = t0 * t3;\nt3 = (abs(y) > abs(x)) ? 1.570796327 - t3 : t3;\nt3 = x < 0.0 ?  3.141592654 - t3 : t3;\nt3 = y < 0.0 ? -t3 : t3;\nreturn t3;\n}`,\"encoding.glsl\":`const vec4 rgba2float_factors = vec4(\n255.0 / (256.0),\n255.0 / (256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n);\nfloat rgba2float(vec4 rgba) {\nreturn dot(rgba, rgba2float_factors);\n}`}};function oi(i){return function(e){let t=i;return e.split(\"/\").forEach(o=>{t&&(t=t[o])}),t}}const ai=new At(oi(ii));function oe(i){return ai.resolveIncludes(i)}const ae={shaders:{vertexShader:oe(\"background/background.vert\"),fragmentShader:oe(\"background/background.frag\")},attributes:new Map([[\"a_pos\",0]])},ri=()=>bt(\"clip\",{geometry:[{location:0,name:\"a_pos\",count:2,type:A.SHORT}]});let li=class extends k{constructor(){super(...arguments),this._color=H(0,1,0,1)}dispose(){this._program&&this._program.dispose()}prepareState({context:i}){i.setStencilTestEnabled(!0),i.setBlendingEnabled(!1),i.setFaceCullingEnabled(!1),i.setColorMask(!1,!1,!1,!1),i.setStencilOp(Q.KEEP,Q.KEEP,Q.REPLACE),i.setStencilWriteMask(255),i.setStencilFunction(B.ALWAYS,0,255)}draw(i,e){const{context:t,state:o,requestRender:a,allowDelayedRender:r}=i,l=ri(),n=e.getVAO(t,o,l.attributes,l.bufferLayouts);n.indexBuffer!=null&&(this._program||(this._program=ue(t,ae)),!r||a==null||this._program.compiled?(t.useProgram(this._program),this._program.setUniform2fv(\"u_coord_range\",[1,1]),this._program.setUniform4fv(\"u_color\",this._color),this._program.setUniformMatrix3fv(\"u_dvsMat3\",o.displayMat3),t.bindVAO(n),t.drawElements(C.TRIANGLES,n.indexBuffer.size,A.UNSIGNED_INT,0),t.bindVAO()):a())}};const xe=new Map([[\"geometry\",[new ee(\"a_pos\",2,A.BYTE,0,2)]]]),ni=new Map([[\"geometry\",[new ee(\"a_pos\",2,A.BYTE,0,4),new ee(\"a_tex\",2,A.BYTE,2,4)]]]),si=new Map([[\"geometry\",[new ee(\"a_pos\",2,A.UNSIGNED_SHORT,0,4)]]]);let Ze=class extends k{constructor(){super(...arguments),this._color=H(1,0,0,1),this._initialized=!1}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}prepareState({context:i}){i.setDepthWriteEnabled(!1),i.setDepthTestEnabled(!1),i.setStencilTestEnabled(!0),i.setBlendingEnabled(!1),i.setColorMask(!1,!1,!1,!1),i.setStencilOp(Q.KEEP,Q.KEEP,Q.REPLACE),i.setStencilWriteMask(255)}draw(i,e){const{context:t,requestRender:o,allowDelayedRender:a}=i;this._initialized||this._initialize(t),!a||o==null||this._solidProgram.compiled?(t.setStencilFunctionSeparate(Ot.FRONT_AND_BACK,B.GREATER,e.stencilRef,255),t.bindVAO(this._solidVertexArrayObject),t.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.displayViewScreenMat3),this._solidProgram.setUniform2fv(\"u_coord_range\",[e.rangeX,e.rangeY]),this._solidProgram.setUniform1f(\"u_depth\",0),this._solidProgram.setUniform4fv(\"u_color\",this._color),t.drawArrays(C.TRIANGLE_STRIP,0,4),t.bindVAO()):o()}_initialize(i){if(this._initialized)return!0;const e=ue(i,ae);if(!e)return!1;const t=new Int8Array([0,0,1,0,0,1,1,1]),o=G.createVertex(i,Z.STATIC_DRAW,t),a=new K(i,ae.attributes,xe,new Map([[\"geometry\",o]]));return this._solidProgram=e,this._solidVertexArrayObject=a,this._initialized=!0,!0}},Ke=class extends Me{constructor(i,e,t,o,a,r,l=a,n=r){super(),this.tileDebugInfoTexture=null,this.debugInfo={display:{length:0,minOrderedLength:0,minUnorderedLength:0,triangleCount:0},memory:{bytesUsed:0,bytesReserved:0}},this._destroyed=!1,this.key=new wt(i),this.resolution=e,this.x=t,this.y=o,this.width=a,this.height=r,this.rangeX=l,this.rangeY=n}destroy(){this.tileDebugInfoTexture&&(this.tileDebugInfoTexture.dispose(),this.tileDebugInfoTexture=null),this._destroyed=!0}get debugSlot(){let i=this;for(;i.parent!==this._stage;){if(!i.parent)return 0;i=i.parent}return this._stage.children.indexOf(i)}setTransform(i){const e=this.resolution/(i.resolution*i.pixelRatio),t=this.transforms.tileMat3,[o,a]=i.toScreenNoRotation([0,0],[this.x,this.y]),r=this.width/this.rangeX*e,l=this.height/this.rangeY*e;Re(t,r,0,0,0,l,0,o,a,1),pe(this.transforms.displayViewScreenMat3,i.displayViewMat3,t)}get destroyed(){return this._destroyed}};const qe=te(),ye=Vt();let ci=class extends Ke{constructor(i,e,t,o){super(i,e,t,o,ne,ne)}destroy(){super.destroy()}setTransform(i){const e=this.resolution/i.resolution,t=this.transforms.tileMat3,[o,a]=i.toScreenNoRotation([0,0],[this.x,this.y]),r=this.width/this.rangeX*e,l=this.height/this.rangeY*e;Re(t,r,0,0,0,l,0,o,a,1),pe(this.transforms.displayViewScreenMat3,i.displayViewMat3,t);const n=Ct(ve(),r,0,0,l,o,a);Pt(this.transforms.labelMat2d,i.viewMat2d,n)}_createTransforms(){return{labelMat2d:ve(),tileMat3:te(),displayViewScreenMat3:te()}}containsScreenPoint(i,e,t){const o=pe(qe,i.viewMat3,this.transforms.tileMat3),a=Dt(qe,o);if(a==null)return!0;Mt(ye,...e,1);const r=zt(ye,ye,a),l=t*(this.resolution/i.resolution);return r[0]>=-l&&r[0]<this.width+l&&r[1]>=-l&&r[1]<this.height+l}},W=class ut{constructor(e){if(this.next=null,!Array.isArray(e))return void(this.data=e);this.data=e[0];let t=this;for(let o=1;o<e.length;o++)t.next=new ut([e[o]]),t=t.next}*values(){let e=this;for(;e;)yield e.data,e=e.next}forEach(e){let t=this;for(;t;)e(t.data),t=t.next}get last(){return this.next?this.next.last:this}},je=class{constructor(i){this._head=null,i!=null&&(this._head=new W(i))}get head(){return this._head}maxAvailableSpace(){if(this._head==null)return 0;let i=0;return this._head.forEach(e=>{const t=e.end-e.start;i=Math.max(i,t)}),i}firstFit(i){if(this._head==null)return null;let e=null,t=this._head;for(;t;){const o=t.data.end-t.data.start;if(o===i)return e?e.next=t.next:this._head=t.next,t.data.start;if(o>i){const a=t.data.start;return t.data.start+=i,a}e=t,t=t.next}return null}free(i,e){const t=i+e;if(this._head==null){const l=new W({start:i,end:t});return void(this._head=l)}if(t<=this._head.data.start){if(t===this._head.data.start)return void(this._head.data.start-=e);const l=new W({start:i,end:t});return l.next=this._head,void(this._head=l)}let o=this._head,a=o.next;for(;a;){if(a.data.start>=t){if(o.data.end===i){if(o.data.end+=e,o.data.end===a.data.start){const n=a.data.end-a.data.start;return o.data.end+=n,void(o.next=a.next)}return}if(a.data.start===t)return void(a.data.start-=e);const l=new W({start:i,end:t});return l.next=o.next,void(o.next=l)}o=a,a=a.next}if(i===o.data.end)return void(o.data.end+=e);const r=new W({start:i,end:t});o.next=r}clear(){this._head=null}};function ui(i,e){return i<<16|255&e}function fi(i){return 255&i}let re=class{constructor(i,e,t,o,a){this.instance=i,this.materialKey=e,this.target=t,this.start=o,this.count=a}get textureKey(){return fi(this.materialKey)}get indexEnd(){return this.start+this.count}extend(i){this.count+=i}render(i){this.instance.techniqueRef.render(i,this)}getStencilReference(){return this.target.stencilRef}getAttributePrecisionPackFactors(){const i=this.instance.instanceId;return this.target.getMesh(i).getAttributePrecisionPackFactors()}draw(i,e){Rt(i)?this.drawCompute(i.context,e):this.drawGeometry(i.context,e)}drawCompute(i,e){const t=this.instance.instanceId,o=this.target.getMesh(t).getComputeVAO(i,e),a=this.start*Uint32Array.BYTES_PER_ELEMENT/3;i.bindVAO(o),i.drawElements(C.POINTS,this.count/3,A.UNSIGNED_INT,a),i.bindVAO(null)}drawGeometry(i,e){const t=this.instance.instanceId,o=this.target.getMesh(t).getGeometryVAO(i,e),a=this.start*Uint32Array.BYTES_PER_ELEMENT;i.bindVAO(o),i.drawElements(C.TRIANGLES,this.count,A.UNSIGNED_INT,a),i.bindVAO(null)}},di=class ft{constructor(){this._length=0,this._minOrderedLength=0,this._materialKeys=new Set}static fromDisplayEntities(e,t,o,a){const r=new ft;for(const l of e.values())for(const n of l.records){const s=o.getInstance(n.instanceId),u=ui(s.instanceId,n.textureKey);r.addRecord(s,u,n.indexStart,n.indexCount,n.vertexStart,n.vertexCount,t,a)}return r}get length(){return this._length}get minOrderedLength(){return this._minOrderedLength}get minUnorderedLength(){return this._materialKeys.size}render(e,t){const{drawPhase:o}=e;for(const a of this.infos()){const r=a.instance.techniqueRef;r.drawPhase&o&&(t==null||r.type===t)&&a.render(e)}}addRecord(e,t,o,a,r,l,n,s){let u=o,c=a;if(c||(u=r,c=l),!c)return;if(this._head==null){const g=new re(e,t,n,u,c);return this._head=new W(g),this._tail=this._head,this._length++,void this._minOrderedLength++}if(s===ge.STRICT_ORDER)return this._insert(e,t,n,u,c,this._tail,null);let f=null,d=this._head;const _=e.instanceId,x=e.techniqueRef.symbologyPlane;if(s===ge.STRICT_MARKERS_AND_TEXT&&(x===Le.MARKER||x===Le.TEXT))return this._insert(e,t,n,u,c,this._tail,null);for(;d;){const g=d.data.instance,b=g.instanceId,E=g.techniqueRef.symbologyPlane,S=f?.data.instance.instanceId;if(x<E||_===S&&_!==b)return this._insert(e,t,n,u,c,f,d);f=d,d=d.next}this._insert(e,t,n,u,c,f,null)}*infos(){if(this._head!=null)for(const e of this._head.values())yield e}_insert(e,t,o,a,r,l,n){if(l==null&&n==null){const s=new re(e,t,o,a,r);return this._head=new W(s),this._tail=this._head,this._length++,void this._minOrderedLength++}return t!==this._tail.data.materialKey&&this._minOrderedLength++,this._materialKeys.add(t),l==null&&n!=null?this._insertAtHead(e,t,o,a,r,n):l!=null&&n==null?this._insertAtEnd(e,t,o,a,r,l):l!=null&&n!=null?this._insertAtMiddle(e,t,o,a,r,l,n):void 0}_insertAtHead(e,t,o,a,r,l){const n=a+r;if(t===l.data.materialKey&&o===l.data.target&&n===l.data.start)l.data.start=a,l.data.count+=r;else{const s=new re(e,t,o,a,r);this._head=new W(s),this._head.next=l,this._length++}}_insertAtEnd(e,t,o,a,r,l){if(l.data.materialKey===t&&l.data.indexEnd===a)l.data.count+=r;else{const n=new re(e,t,o,a,r);this._tail=new W(n),l.next=this._tail,this._length++}}_insertAtMiddle(e,t,o,a,r,l,n){const s=a+r;if(l.data.materialKey===t&&l.data.target===o&&l.data.indexEnd===a)l.data.count+=r,l.data.materialKey===n.data.materialKey&&l.data.target===n.data.target&&l.data.indexEnd===n.data.start&&(l.data.count+=n.data.count,l.next=n.next,this._length--);else if(t===n.data.materialKey&&o===n.data.target&&s===n.data.start)n.data.start=a,n.data.count+=r;else{const u=new re(e,t,o,a,r),c=new W(u);l.next=c,c.next=n,this._length++}}},_i=class{constructor(i){this._indexOnly=i,this.vertex={count:0,operations:[]},this.index={count:0,operations:[]}}copyRecord(i){let e=0;this._indexOnly||(e=this.vertex.count-i.vertexStart,this.vertex.operations.push({srcFrom:i.vertexStart,dstFrom:this.vertex.count,count:i.vertexCount,mutate:0}),i.vertexStart=this.vertex.count,this.vertex.count+=i.vertexCount);let t=!1;if(this._indexOnly&&this.index.operations.length>=1){const o=this.index.operations[this.index.operations.length-1];o.srcFrom+o.count===i.indexStart&&(o.count+=i.indexCount,t=!0)}t||this.index.operations.push({srcFrom:i.indexStart,dstFrom:this.index.count,count:i.indexCount,mutate:e}),i.indexStart=this.index.count,this.index.count+=i.indexCount}};const Xe=j(\"esri-2d-log-allocations\");let $e=class dt{static create(e,t){const o=t.acquireUint32Array(e);return new dt(o,t)}constructor(e,t){this._array=e,this._pool=t}get array(){return this._array}get length(){return this._array.length}getUint32View(e,t){return new Uint32Array(this._array.buffer,e+this._array.byteOffset,t)}expand(e){if(e<=this._array.byteLength)return;const t=this._pool.acquireUint32Array(e);t.set(this._array),this._pool.releaseUint32Array(this._array),this._array=t}destroy(){this._pool.releaseUint32Array(this._array)}},Se=class _t{constructor(){this._data=new ArrayBuffer(_t.BYTE_LENGTH),this._freeList=new je({start:0,end:this._data.byteLength})}static get BYTE_LENGTH(){return 16e6}get buffer(){return this._data}acquireUint32Array(e){const t=this._freeList.firstFit(e);return t==null?null:new Uint32Array(this._data,t,e/Uint32Array.BYTES_PER_ELEMENT)}releaseUint32Array(e){this._freeList.free(e.byteOffset,e.byteLength)}};class mi{constructor(){this._pages=[],this._pagesByBuffer=new Map,this._bytesAllocated=0}destroy(){this._pages=[],this._pagesByBuffer=null}get _bytesTotal(){return this._pages.length*Se.BYTE_LENGTH}acquireUint32Array(e){if(this._bytesAllocated+=e,Xe&&console.log(`Allocating ${e}, (${this._bytesAllocated} / ${this._bytesTotal})`),e>=Se.BYTE_LENGTH)return new Uint32Array(e/Uint32Array.BYTES_PER_ELEMENT);for(const o of this._pages){const a=o.acquireUint32Array(e);if(a!=null)return a}const t=this._addPage().acquireUint32Array(e);return de(t,\"Expected to allocate page\"),t}releaseUint32Array(e){this._bytesAllocated-=e.byteLength,Xe&&console.log(`Freeing ${e.byteLength}, (${this._bytesAllocated} / ${this._bytesTotal})`);const t=this._pagesByBuffer.get(e.buffer);t&&t.releaseUint32Array(e)}_addPage(){const e=new Se;return this._pages.push(e),this._pagesByBuffer.set(e.buffer,e),e}}const vi=1.25,Qe=32767,pi=Qe<<16|Qe;let Je=class{constructor(i,e,t,o){this._pool=o;const a=$e.create(e*t*Uint32Array.BYTES_PER_ELEMENT,this._pool);this.size=e,this.strideInt=t,this.bufferType=i,this.dirty={start:1/0,end:0},this.memoryStats={bytesUsed:0,bytesReserved:e*t*Uint32Array.BYTES_PER_ELEMENT},this._gpu=null,this._cpu=a,this.clear()}get elementSize(){return this._cpu.length/this.strideInt}get intSize(){return this.fillPointer*this.strideInt}get byteSize(){return this.intSize*Uint32Array.BYTES_PER_ELEMENT}get invalidated(){return this.bufferSize>0&&!this._gpu}get invalidatedComputeBuffer(){return this.bufferSize>0&&!this._gpuComputeTriangles}invalidate(){this._invalidateTriangleBuffer(),this._gpu?.dispose(),this._gpu=null}_invalidateTriangleBuffer(){this._gpuComputeTriangles?.dispose(),this._gpuComputeTriangles=null}destroy(){this._gpu?.dispose(),this._gpuComputeTriangles?.dispose(),this._cpu?.destroy()}clear(){this.dirty.start=1/0,this.dirty.end=0,this.freeList=new je({start:0,end:this._cpu.length/this.strideInt}),this.fillPointer=0}ensure(i){if(!(this.maxAvailableSpace()>=i)&&i*this.strideInt>this._cpu.length-this.fillPointer){this.invalidate();const e=this._cpu.length/this.strideInt,t=Math.round((e+i)*vi),o=t*this.strideInt;this._cpu.expand(o*Uint32Array.BYTES_PER_ELEMENT),this.freeList.free(e,t-e),this.memoryStats.bytesReserved+=(t-e)*this.strideInt*Uint32Array.BYTES_PER_ELEMENT}}set(i,e){this._cpu.array[i]!==e&&(this._cpu.array[i]=e,this.dirty.start=Math.min(i,this.dirty.start),this.dirty.end=Math.max(i+1,this.dirty.end))}getGPUBuffer(i,e=!1){if(!this.bufferSize)return null;if(e){if(this.bufferType!==\"index\")throw new Error(\"Tired to get triangle buffer, but target is not an index buffer\");return this._gpuComputeTriangles==null&&(this._gpuComputeTriangles=this._createComputeBuffer(i)),this._gpuComputeTriangles}return this._gpu==null&&(this._gpu=this._createBuffer(i)),this._gpu}getView(i,e){return this._cpu.getUint32View(i,e/Uint32Array.BYTES_PER_ELEMENT)}get bufferSize(){return this._cpu.length/this.strideInt}maxAvailableSpace(){return this.freeList.maxAvailableSpace()}insert(i,e,t,o){const a=t*this.strideInt;if(!a)return 0;const r=e*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,l=new Uint32Array(i,r,a),n=this.freeList.firstFit(t);de(n,\"First fit region must be defined\");const s=n*this.strideInt,u=a;if(this._cpu.array.set(l,s),o!==0)for(let c=0;c<l.length;c++)this._cpu.array[c+s]+=o;return this.dirty.start=Math.min(this.dirty.start,s),this.dirty.end=Math.max(this.dirty.end,s+u),this.fillPointer=Math.max(this.fillPointer,s+u),this.memoryStats.bytesUsed+=t*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,n}copyFrom(i,e,t,o,a){const r=t*this.strideInt;if(!r)return 0;const l=e*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,n=i._cpu.getUint32View(l,r),s=this.freeList.firstFit(t);de(s,\"First fit region must be defined\");const u=s*this.strideInt,c=r;if(this._cpu.array.set(n,u),o!==0)for(let f=0;f<r;f++)this._cpu.array[u+f*this.strideInt+a]+=o;return this.dirty.start=Math.min(this.dirty.start,u),this.dirty.end=Math.max(this.dirty.end,u+c),this.fillPointer=Math.max(this.fillPointer,u+c),this.memoryStats.bytesUsed+=t*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,s}free(i,e,t){const o=i*this.strideInt,a=(i+e)*this.strideInt;if(t===!0)for(let r=i;r!==i+e;r++)this._cpu.array[r*this.strideInt]=pi;this.dirty.start=Math.min(this.dirty.start,o),this.dirty.end=Math.max(this.dirty.end,a),this.freeList.free(i,e),this.memoryStats.bytesUsed-=e*this.strideInt*Uint32Array.BYTES_PER_ELEMENT}upload(){if(this.dirty.end){if(this._invalidateTriangleBuffer(),this._gpu==null)return this.dirty.start=1/0,void(this.dirty.end=0);this._gpu.setSubData(this._cpu.array,this.dirty.start,this.dirty.start,this.dirty.end),this.dirty.start=1/0,this.dirty.end=0}}reshuffle(i,e){if(e.length===0)return;const t=this.byteSize,o=i*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,a=t>o,r=this._cpu,l=$e.create(o,this._pool);a||l.array.set(this._cpu.getUint32View(0,this.intSize));for(const n of e)if(a||n.srcFrom!==n.dstFrom||n.mutate!==0){this.dirty.start=Math.min(this.dirty.start,n.dstFrom*this.strideInt),this.dirty.end=Math.max(this.dirty.end,(n.dstFrom+n.count)*this.strideInt);for(let s=0;s<n.count;s++){const u=(n.dstFrom+s)*this.strideInt,c=(n.srcFrom+s)*this.strideInt;for(let f=0;f<this.strideInt;f++)l.array[u+f]=r.array[c+f]+n.mutate}}this._cpu.destroy(),this._cpu=l,a&&this.invalidate(),this.freeList.clear(),this.memoryStats.bytesUsed=this.memoryStats.bytesReserved=o}_createBuffer(i){const e=Z.DYNAMIC_DRAW;return this.bufferType===\"index\"?G.createIndex(i,e,this._cpu.array):G.createVertex(i,e,this._cpu.array)}_createComputeBuffer(i){const e=Z.DYNAMIC_DRAW,t=new Uint32Array(this.fillPointer/3);for(let o=0;o<this.fillPointer;o+=3)t[o/3]=this._cpu.array[o];return G.createIndex(i,e,t)}};const et=1e3;function gi(i,e){const t=i.attributes.filter(o=>e.locations.has(o.name)).map(o=>({name:o.name,type:o.type,count:o.count,divisor:0,normalized:o.normalized??!1,offset:o.offset,stride:i.stride}));return new Map([[\"geometry\",t]])}function hi(i,e){const t=[],o=i.attributes.filter(a=>e.locations.has(a.name));for(const a of o){t.push({name:a.name,type:a.type,count:a.count,divisor:0,normalized:a.normalized??!1,offset:a.offset,stride:i.stride});const r=e.computeAttributeMap[a.name];r!=null&&r.length===2&&(t.push({name:r[0],count:a.count,divisor:0,type:a.type,normalized:a.normalized??!1,offset:a.offset+i.stride,stride:i.stride}),t.push({name:r[1],count:a.count,divisor:0,type:a.type,normalized:a.normalized??!1,offset:a.offset+2*i.stride,stride:i.stride}))}return new Map([[\"geometry\",t]])}let xi=class{constructor(i,e){if(this._bufferPool=i,this._layout=e,this._invalidatedGeometry=!1,this._invalidatedCompute=!1,this._position=this._layout.attributes.find(t=>t.name===\"pos\"||t.name===\"position\"),!this._position)throw new Error(\"InternalError: Unable to find position attribute\")}destroy(){this._indexBuffer=Oe(this._indexBuffer),this._vertexBuffer=Oe(this._vertexBuffer),this._computeVAO?.disposeVAOOnly(),this._geometryVAO?.disposeVAOOnly()}get layout(){return this._layout}getDrawArgs(i,e,t,o){return o?{primitive:C.POINTS,count:e/3,offset:t/3}:{primitive:i,count:e,offset:t}}getAttributePrecisionPackFactors(){const i={};for(const e of this.layout.attributes)e.packPrecisionFactor&&(i[e.name]=e.packPrecisionFactor);return i}getDebugVertexInfo(i=!1,e){if(!this._vertexBuffer)return null;const t=this._layout,o=t.stride,a=this._vertexBuffer.getView(0,this._vertexBuffer.byteSize),r=[];if(i)if(e==null)console.log(\"must provide location info to see compute attributes\");else for(const f of t.attributes){const d=e.computeAttributeMap[f.name];d!=null&&d.length===2&&(r.push({...f,name:d[0],offset:f.offset+o}),r.push({...f,name:d[1],offset:f.offset+2*o}))}const l=new DataView(a.slice().buffer);let n=a.byteLength/o;i&&(n=this._indexBuffer.fillPointer/3);const s=this._indexBuffer.getView(0,this._indexBuffer.byteSize);let u=0;const c=[];for(let f=0;f<n;f++){i&&(u=s[3*f]*o);const d={};for(const _ of[...t.attributes,...r]){let x=`${_.offset} ${_.name}`,g=De(l,_,u);if(_.packPrecisionFactor)if(x+=` (precision: ${_.packPrecisionFactor})`,typeof g==\"number\")g/=_.packPrecisionFactor;else for(let b=0;b<g.length;b++)g[b]/=_.packPrecisionFactor;d[x]=g}u+=o,c.push(d)}return{vertices:c,layout:t}}_ensure(i,e){if(this._vertexBuffer&&this._indexBuffer)this._indexBuffer.ensure(Math.max(i,1e3)),this._vertexBuffer.ensure(Math.max(e,1e3));else{const t=this._layout.stride/Uint32Array.BYTES_PER_ELEMENT;this._indexBuffer=new Je(\"index\",Math.max(i,et),1,this._bufferPool),this._vertexBuffer=new Je(\"vertex\",Math.max(e,et),t,this._bufferPool)}}append(i){const e=i.layout.stride,t=i.indices.byteLength/Uint32Array.BYTES_PER_ELEMENT,o=i.vertices.byteLength/e;this._ensure(t,o);const{vertices:a,indices:r}=i,l=this._vertexBuffer.insert(a,0,a.byteLength/e,0);return{vertexFrom:l,indexFrom:this._indexBuffer.insert(r,0,r.byteLength/4,l)}}copyRecordFrom(i,e,t,o){const{indexStart:a,indexCount:r,vertexStart:l,vertexCount:n}=e;this._ensure(r,n);const s=i._position,u=t*(s.packPrecisionFactor??1),c=o*(s.packPrecisionFactor??1),f=s.offset,d=R(u,c),_=this._vertexBuffer.copyFrom(i._vertexBuffer,l,n,d,f),x=this._indexBuffer.copyFrom(i._indexBuffer,a,r,_-l,0),g=e.clone();return g.vertexStart=_,g.indexStart=x,g.overlaps=0,g}remove(i,e,t,o){this._indexBuffer.free(i,e),this._vertexBuffer.free(t,o)}upload(){this._invalidatedGeometry=!0,this._invalidatedCompute=!0}getGeometryVAO(i,e){if(!this._vertexBuffer||!this._indexBuffer||!this._vertexBuffer.bufferSize)return null;if(this._invalidatedGeometry){(this._vertexBuffer.invalidated||this._indexBuffer.invalidated)&&(this._vertexBuffer.invalidate(),this._indexBuffer.invalidate(),this._geometryVAO?.disposeVAOOnly(),this._geometryVAO=null),this._vertexBuffer.upload(),this._indexBuffer.upload();const t=this._indexBuffer.getGPUBuffer(i,!1),o=this._vertexBuffer.getGPUBuffer(i);this._geometryVAO||(this._geometryVAO=new K(i,e.locations,gi(this.layout,e),new Map([[\"geometry\",o]]),t)),this._invalidatedGeometry=!1}return this._geometryVAO}getComputeVAO(i,e){if(!this._vertexBuffer||!this._indexBuffer||!this._vertexBuffer.bufferSize)return null;if(this._invalidatedCompute){(this._vertexBuffer.invalidated||this._indexBuffer.invalidatedComputeBuffer)&&(this._vertexBuffer.invalidate(),this._indexBuffer.invalidate(),this._computeVAO?.disposeVAOOnly(),this._computeVAO=null),this._vertexBuffer.upload(),this._indexBuffer.upload();const t=this._indexBuffer.getGPUBuffer(i,!0),o=this._vertexBuffer.getGPUBuffer(i);this._computeVAO||(this._computeVAO=new K(i,e.locations,hi(this.layout,e),new Map([[\"geometry\",o]]),t),this._invalidatedCompute=!1)}return this._computeVAO}get memoryStats(){return{bytesUsed:this._vertexBuffer.memoryStats.bytesUsed+this._indexBuffer.memoryStats.bytesUsed,bytesReserved:this._vertexBuffer.memoryStats.bytesReserved+this._indexBuffer.memoryStats.bytesReserved,vertex:this._vertexBuffer.memoryStats,index:this._indexBuffer.memoryStats}}reshuffle(i){this._vertexBuffer&&this._vertexBuffer.reshuffle(i.vertex.count,i.vertex.operations),this._indexBuffer&&this._indexBuffer.reshuffle(i.index.count,i.index.operations)}},fe=class{constructor(i){this._pos=0,this._buffer=i,this._i32View=new Int32Array(this._buffer),this._f32View=new Float32Array(this._buffer)}readInt32(){return this._i32View[this._pos++]}readF32(){return this._f32View[this._pos++]}};function tt(i){return i?{entities:se(new fe(i.entities),ce),vertexData:i.data.map(yi)}:null}function yi(i){const e=i.layout.stride,t=new DataView(i.vertices),o=[],a=i.vertices.byteLength/e;let r=0;for(let l=0;l<a;l++){const n={};for(const s of i.layout.attributes){let u=`${s.offset} ${s.name}`,c=De(t,s,r);if(s.packPrecisionFactor)if(u+=` (precision: ${s.packPrecisionFactor})`,typeof c==\"number\")c/=s.packPrecisionFactor;else for(let f=0;f<c.length;f++)c[f]/=s.packPrecisionFactor;n[u]=c}r+=e,o.push(n)}return{vertices:o,layout:i.layout}}const Si=()=>_e.getLogger(\"esri.views.2d.engine.webgl.FeatureTile\");let Ti=0,it=class extends ci{constructor(i,e,t,o,a=!1){super(i,e,t,o),this._meshes=new Map,this._entities=[],this._invalidated=!1,this._nextUploadAllowed=!1,this.tileAge=Ti++,this._metrics=[],this._entityIds=new Set,this._entityIdsFromBuffer=new Set,this._attributeEpoch=0,this._encounteredEnd=!1,this._objectIdMap=null,this.visible=!0,this.transforms.labelMat2d=ve(),this.enableDeferredUploads=a}destroy(){super.destroy(),this.clear()}clear(){for(const i of this._meshes.values())i.destroy();this._meshes.clear(),this._entities=[],this._metrics=[],this._displayList=null,this._invalidated=!0,this._entityIds.clear(),this._nextUploadAllowed=!0}beforeRender(i){super.beforeRender(i),this._needsReshuffle&&i.reshuffleManager.schedule(this)}tryReady(i){const e=this._invalidated&&!this._uploadAllowed;return!(this.isReady||e||!this._encounteredEnd||!(i>=this._attributeEpoch))&&(j(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.ready [epoch=${i}]`),this.ready(),this.requestRender(),!0)}get labelMetrics(){return this._metrics}get hasData(){return!!this._meshes.size}get hasAnimations(){return!!this._objectIdMap}get needsUpload(){return this._invalidated}get _uploadAllowed(){return!this.enableDeferredUploads||this._nextUploadAllowed}upload(){this._nextUploadAllowed=!0}getDisplayList(i,e){if(this._uploadAllowed&&this._invalidated){this._entities.sort((t,o)=>{const a=o.sortKey,r=t.sortKey;return r===a?t.id-o.id:r-a}),e===ge.BATCHING&&this.reshuffle(!0),this._displayList=di.fromDisplayEntities(this._entities,this,i,e);for(const t of this._meshes.values())t.upload();this.debugInfo.display.length=this._displayList.length,this.debugInfo.display.minOrderedLength=this._displayList.minOrderedLength,this.debugInfo.display.minUnorderedLength=this._displayList.minUnorderedLength,this.requestRender(),this._invalidated=!1,this._nextUploadAllowed=!1}return this._displayList}getMesh(i){if(!this._meshes.has(i))throw new Error(`InternalError: Unable to find VAO for instance: ${i}`);return this._meshes.get(i)}getSortKeys(i){const e=new Map;for(const{id:t,sortKey:o}of this._entities)if(i.has(t)&&e.set(t,o),e.size===i.size)break;return e}onMessage(i){if(i.objectIdMap)for(const e in i.objectIdMap)this._objectIdMap||(this._objectIdMap={}),this._objectIdMap[e]=i.objectIdMap[e];switch(i.type){case\"append\":this._onAppendMessage(i);break;case\"update\":this._onUpdateMessage(i)}if(this._aggregateMemoryStats(),this.requestRender(),i.end){if(j(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.end [epoch=${i.attributeEpoch}]`),!i.attributeEpoch)throw new Error(\"InternalError: Attribute epoch not defined.\");this._attributeEpoch=i.attributeEpoch,this._encounteredEnd=!0}}_onAppendMessage(i){if(j(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.append`,{append:tt(i?.append)}),i.clear&&this.clear(),!i.append)return;const e=se(new fe(i.append.entities),ce);this._insert(e,i.append.data,!1)}_onUpdateMessage(i){j(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.update`,{isPixelBuffer:i.isPixelBuffer,modify:tt(i.modify),remove:i.remove});const e=se(new fe(i.modify.entities),ce),t=e.map(r=>r.id),o=i.isPixelBuffer??!1,a=[...i.remove,...t];o?this._removeByIdsFromBuffer(a):this._removeByIds(a),this._insert(e,i.modify.data,o)}reshuffle(i=!1){if(this.destroyed)return;const e=new Map;for(const t of this._entities)for(const o of t.records){const a=this._meshes.get(o.instanceId);let r=e.get(a);r||(r=new _i(i),e.set(a,r)),r.copyRecord(o)}for(const[t,o]of e)t.reshuffle(o);this._invalidated=!0,this._aggregateMemoryStats(),j(\"esri-2d-update-debug\")&&Si().info(`Tile ${this.key.id} was reshuffled.`)}copyPixelBufferedEntitesFrom(i,e,t,o){const a=t*ne,r=o*ne;for(const l of i._entities){let n=null;for(const s of l.records)if(s.overlaps&e){const u=i.getMesh(s.instanceId),c=this._ensureMesh(s.instanceId,u.layout).copyRecordFrom(u,s,a,r);n||(n=new ce(l.id,l.sortKey),this._entityIdsFromBuffer.add(l.id),this._entities.push(n)),n.records.push(c)}}this._invalidated=!0}_ensureMesh(i,e){return this._meshes.has(i)||this._meshes.set(i,new xi(this._stage.bufferPool,e)),this._meshes.get(i)}_insert(i,e,t){if(!i.length)return;this._removeDuplicatedBufferedEntites(i);const o=this._insertVertexData(e);for(const a of i){for(const r of a.records)r.updateBaseOffsets(o.get(r.instanceId));t?this._tryInsertBufferedEntity(a):this._insertEntity(a)}this._invalidated=!0}_insertVertexData(i){const e=new Map;for(const t of i){const{instanceId:o,layout:a}=t,r=this._ensureMesh(o,a).append(t);if(t.metrics){const l=se(new fe(t.metrics),It)??[];this._metrics.push(...l)}e.set(o,r)}return e}_insertEntity(i){j(\"esri-2d-update-debug\")&&this._entityIds.has(i.id)&&console.error(`Tile ${this.key.id} insertEnitty: Already have entityId ${i.id}`),this._entityIds.add(i.id),this._entities.push(i)}_tryInsertBufferedEntity(i){this._entityIds.has(i.id)?this._removeRecordsFromMesh(i.records):(this._entityIdsFromBuffer.add(i.id),this._entities.push(i))}_removeDuplicatedBufferedEntites(i){if(!this._entityIdsFromBuffer.size)return;const e=[];for(const t of i)this._entityIdsFromBuffer.has(t.id)&&e.push(t.id);this._removeByIds(e)}_removeByIdsFromBuffer(i){this._removeByIds(i.filter(e=>this._entityIdsFromBuffer.has(e)))}_removeByIds(i){if(i.length===0)return;const e=new Set(i),t=[];for(const o of this._entities)e.has(o.id)?this._remove(o):t.push(o);this._entities=t,this._invalidated=!0}_remove(i){this._removeRecordsFromMesh(i.records),this._entityIds.delete(i.id),this._entityIdsFromBuffer.delete(i.id);for(let e=this._metrics.length-1;e>=0;e--)this._metrics[e].entityTexel===i.id&&this._metrics.splice(e,1)}_removeRecordsFromMesh(i){for(const e of i){const{instanceId:t,indexStart:o,indexCount:a,vertexStart:r,vertexCount:l}=e;this._meshes.get(t)?.remove(o,a,r,l)}}_aggregateMemoryStats(){this.debugInfo.memory.bytesUsed=0,this.debugInfo.memory.bytesReserved=0;for(const i of this._meshes.values())this.debugInfo.memory.bytesUsed+=i.memoryStats.bytesUsed,this.debugInfo.memory.bytesReserved+=i.memoryStats.bytesReserved}get _needsReshuffle(){if(this.destroyed)return!1;const{bytesUsed:i,bytesReserved:e}=this.debugInfo.memory,t=i/e,{minOrderedLength:o,length:a}=this.debugInfo.display;return e>ht&&t<xt||a>yt&&o/a<St}get entityIds(){return this._objectIdMap?this._entities.map(({id:i})=>({objectId:this._objectIdMap[i],displayId:i})):[]}};const ot={shaders:{vertexShader:oe(\"tileInfo/tileInfo.vert\"),fragmentShader:oe(\"tileInfo/tileInfo.frag\")},attributes:new Map([[\"a_pos\",0]])},at=512,Te=512,X=16,M=8,bi=(Te-2*M)/5;let rt=class extends k{constructor(){super(...arguments),this._color=H(1,0,0,1)}dispose(){this._outlineProgram?.dispose(),this._outlineProgram=null,this._tileInfoProgram?.dispose(),this._tileInfoProgram=null,this._outlineVertexArrayObject?.dispose(),this._outlineVertexArrayObject=null,this._tileInfoVertexArrayObject?.dispose(),this._tileInfoVertexArrayObject=null,this._ctx=null}prepareState({context:i}){i.setBlendingEnabled(!0),i.setBlendFunctionSeparate(F.ONE,F.ONE_MINUS_SRC_ALPHA,F.ONE,F.ONE_MINUS_SRC_ALPHA),i.setColorMask(!0,!0,!0,!0),i.setStencilWriteMask(0),i.setStencilTestEnabled(!1)}draw(i,e){const{context:t,requestRender:o,allowDelayedRender:a}=i;if(!e.isReady&&e instanceof it&&e.hasData)return;if(this._loadWGLResources(t),a&&o!=null&&(!this._outlineProgram.compiled||!this._tileInfoProgram.compiled))return void o();t.bindVAO(this._outlineVertexArrayObject),t.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.displayViewScreenMat3),this._outlineProgram.setUniform2f(\"u_coord_range\",e.rangeX,e.rangeY),this._outlineProgram.setUniform1f(\"u_depth\",0),this._outlineProgram.setUniform4fv(\"u_color\",this._color),t.drawArrays(C.LINE_STRIP,0,4);const r=this._getTexture(t,e);r&&(t.bindVAO(this._tileInfoVertexArrayObject),t.useProgram(this._tileInfoProgram),t.bindTexture(r,0),this._tileInfoProgram.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.displayViewScreenMat3),this._tileInfoProgram.setUniform1f(\"u_depth\",0),this._tileInfoProgram.setUniform2f(\"u_coord_ratio\",e.rangeX/e.width,e.rangeY/e.height),this._tileInfoProgram.setUniform2f(\"u_delta\",0,0),this._tileInfoProgram.setUniform2f(\"u_dimensions\",r.descriptor.width,r.descriptor.height),t.drawArrays(C.TRIANGLE_STRIP,0,4)),t.bindVAO()}_loadWGLResources(i){if(this._outlineProgram&&this._tileInfoProgram)return;const e=ue(i,ae),t=ue(i,ot),o=new Int8Array([0,0,1,0,1,1,0,1]),a=G.createVertex(i,Z.STATIC_DRAW,o),r=new K(i,ae.attributes,xe,new Map([[\"geometry\",a]])),l=new Int8Array([0,0,1,0,0,1,1,1]),n=G.createVertex(i,Z.STATIC_DRAW,l),s=new K(i,ot.attributes,xe,new Map([[\"geometry\",n]]));this._outlineProgram=e,this._tileInfoProgram=t,this._outlineVertexArrayObject=r,this._tileInfoVertexArrayObject=s}_getTexture(i,e){if(!this._ctx){const n=document.createElement(\"canvas\");n.width=at,n.height=Te,this._ctx=n.getContext(\"2d\")}if(!e.tileDebugInfoTexture){const n=new Ft;n.wrapMode=Et.CLAMP_TO_EDGE,n.samplingMode=w.LINEAR,n.isImmutable=!0,n.width=at,n.height=Te,e.tileDebugInfoTexture=new Bt(i,n)}const t=this._ctx;t.clearRect(0,0,t.canvas.width,t.canvas.height),t.textAlign=\"left\",t.textBaseline=\"top\",t.font=X-2+\"px sans-serif\",t.lineWidth=2,t.fillStyle=\"white\",t.strokeStyle=\"black\";const{debugSlot:o}=e;let a=M+bi*o;const r=`${o}) ${e.key.id} (${e.constructor.name})`;t.strokeText(r,M,a),t.fillText(r,M,a),a+=X;const{debugInfo:l}=e;if(l){const{length:n,minOrderedLength:s,minUnorderedLength:u,triangleCount:c}=l.display;if(n>0){const _=`Length: ${n}`;t.strokeText(_,M,a),t.fillText(_,M,a),a+=X}if(s){const _=`Min ordered length: ${s}`;t.strokeText(_,M,a),t.fillText(_,M,a),a+=X}if(u){const _=`Min unordered length: ${u}`;t.strokeText(_,M,a),t.fillText(_,M,a),a+=X}if(c>0){c>1e5&&(t.fillStyle=\"red\",t.strokeStyle=\"white\");const _=`Triangle count: ${c}`;t.strokeText(_,M,a),t.fillText(_,M,a),a+=X}const{bytesUsed:f,bytesReserved:d}=l.memory;if(t.fillStyle=\"white\",t.strokeStyle=\"black\",f>0||d>0){const _=`Memory usage: ${f} of ${d} bytes`;t.strokeText(_,M,a),t.fillText(_,M,a),a+=X}}return e.tileDebugInfoTexture.setData(t.canvas),e.tileDebugInfoTexture}},Ii=class extends k{constructor(){super(...arguments),this._color=H(1,0,0,1),this._patternMatrix=te(),this._programOptions={id:!1,pattern:!1}}dispose(){this._vao&&(this._vao.dispose(),this._vao=null)}drawMany(i,e){const{context:t,painter:o,requestRender:a,allowDelayedRender:r}=i;this._loadWGLResources(i);const l=i.displayLevel,n=i.styleLayer,s=n.backgroundMaterial,u=o.vectorTilesMaterialManager,c=n.getPaintValue(\"background-color\",l),f=n.getPaintValue(\"background-opacity\",l),d=n.getPaintValue(\"background-pattern\",l),_=d!==void 0,x=1|window.devicePixelRatio,g=i.spriteMosaic;let b,E;const S=x>Ce?2:1,T=this._programOptions;T.pattern=_;const v=u.getMaterialProgram(t,s,T);if(!r||a==null||v.compiled){if(t.bindVAO(this._vao),t.useProgram(v),_){const p=g.getMosaicItemPosition(d,!0);if(p!=null){const{tl:h,br:y,page:I}=p;b=y[0]-h[0],E=y[1]-h[1];const m=g.getPageSize(I);m!=null&&(g.bind(t,w.LINEAR,I,N),v.setUniform4f(\"u_tlbr\",h[0],h[1],y[0],y[1]),v.setUniform2fv(\"u_mosaicSize\",m),v.setUniform1i(\"u_texture\",N))}v.setUniform1f(\"u_opacity\",f)}else{const p=c[3]*f;this._color[0]=p*c[0],this._color[1]=p*c[1],this._color[2]=p*c[2],this._color[3]=p,v.setUniform4fv(\"u_color\",this._color)}v.setUniform1f(\"u_depth\",n.z||0);for(const p of e){if(v.setUniform1f(\"u_coord_range\",p.rangeX),v.setUniformMatrix3fv(\"u_dvsMat3\",p.transforms.displayViewScreenMat3),_){const h=Math.max(2**(Math.round(l)-p.key.level),1),y=S*p.width*h,I=y/Ee(b),m=y/Ee(E);this._patternMatrix[0]=I,this._patternMatrix[4]=m,v.setUniformMatrix3fv(\"u_pattern_matrix\",this._patternMatrix)}t.setStencilFunction(B.EQUAL,0,255),t.drawArrays(C.TRIANGLE_STRIP,0,4)}}else a()}_loadWGLResources(i){if(this._vao)return;const{context:e,styleLayer:t}=i,o=t.backgroundMaterial,a=new Int8Array([0,0,1,0,0,1,1,1]),r=G.createVertex(e,Z.STATIC_DRAW,a),l=new K(e,o.getAttributeLocations(),o.getLayoutInfo(),new Map([[\"geometry\",r]]));this._vao=l}},Oi=class extends k{constructor(){super(...arguments),this._programOptions={id:!1}}dispose(){}drawMany(i,e){const{context:t,displayLevel:o,requiredLevel:a,state:r,painter:l,spriteMosaic:n,styleLayerUID:s,requestRender:u,allowDelayedRender:c}=i;if(!e.some(v=>v.layerData.get(s)?.circleIndexCount??!1))return;const f=i.styleLayer,d=f.circleMaterial,_=l.vectorTilesMaterialManager,x=1.2,g=f.getPaintValue(\"circle-translate\",o),b=f.getPaintValue(\"circle-translate-anchor\",o),E=this._programOptions,S=_.getMaterialProgram(t,d,E);if(c&&u!=null&&!S.compiled)return void u();t.useProgram(S),S.setUniformMatrix3fv(\"u_displayMat3\",b===J.VIEWPORT?r.displayMat3:r.displayViewMat3),S.setUniform2fv(\"u_circleTranslation\",g),S.setUniform1f(\"u_depth\",f.z),S.setUniform1f(\"u_antialiasingWidth\",x);let T=-1;for(const v of e){if(!v.layerData.has(s))continue;v.key.level!==T&&(T=v.key.level,d.setDataUniforms(S,o,f,T,n));const p=v.layerData.get(s);if(!p.circleIndexCount)continue;p.prepareForRendering(t);const h=p.vao;h!=null&&(t.bindVAO(h),S.setUniformMatrix3fv(\"u_dvsMat3\",v.transforms.displayViewScreenMat3),a!==v.key.level?t.setStencilFunction(B.EQUAL,v.stencilRef,255):t.setStencilFunction(B.GREATER,255,255),t.drawElements(C.TRIANGLES,p.circleIndexCount,A.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*p.circleIndexStart),v.triangleCount+=p.circleIndexCount/3)}}};const lt=1/65536;class Ei extends k{constructor(){super(...arguments),this._fillProgramOptions={id:!1,pattern:!1},this._outlineProgramOptions={id:!1}}dispose(){}drawMany(e,t){const{displayLevel:o,renderPass:a,spriteMosaic:r,styleLayerUID:l}=e;let n=!1;for(const T of t)if(T.layerData.has(l)){const v=T.layerData.get(l);if(v.fillIndexCount>0||v.outlineIndexCount>0){n=!0;break}}if(!n)return;const s=e.styleLayer,u=s.getPaintProperty(\"fill-pattern\"),c=u!==void 0,f=c&&u.isDataDriven;let d;if(c&&!f){const T=u.getValue(o);d=r.getMosaicItemPosition(T,!0)}const _=!c&&s.getPaintValue(\"fill-antialias\",o);let x=!0,g=1;if(!c){const T=s.getPaintProperty(\"fill-color\"),v=s.getPaintProperty(\"fill-opacity\");if(!T?.isDataDriven&&!v?.isDataDriven){const p=s.getPaintValue(\"fill-color\",o);g=s.getPaintValue(\"fill-opacity\",o)*p[3],g>=1&&(x=!1)}}if(x&&a===\"opaque\")return;const b=s.getPaintValue(\"fill-translate\",o),E=s.getPaintValue(\"fill-translate-anchor\",o);(x||a!==\"translucent\")&&this._drawFill(e,l,s,t,b,E,c,d,f);const S=!s.hasDataDrivenOutlineColor&&s.outlineUsesFillColor&&g<1;_&&a!==\"opaque\"&&!S&&this._drawOutline(e,l,s,t,b,E)}_drawFill(e,t,o,a,r,l,n,s,u){if(n&&!u&&s==null)return;const{context:c,displayLevel:f,state:d,painter:_,pixelRatio:x,spriteMosaic:g,requestRender:b,allowDelayedRender:E}=e,S=o.fillMaterial,T=_.vectorTilesMaterialManager,v=x>Ce?2:1,p=this._fillProgramOptions;p.pattern=n;const h=T.getMaterialProgram(c,S,p);if(E&&b!=null&&!h.compiled)return void b();if(c.useProgram(h),s!=null){const{page:I}=s,m=g.getPageSize(I);m!=null&&(g.bind(c,w.LINEAR,I,N),h.setUniform2fv(\"u_mosaicSize\",m),h.setUniform1i(\"u_texture\",N))}h.setUniformMatrix3fv(\"u_displayMat3\",l===J.VIEWPORT?d.displayMat3:d.displayViewMat3),h.setUniform2fv(\"u_fillTranslation\",r),h.setUniform1f(\"u_depth\",o.z+lt);let y=-1;for(const I of a){if(!I.layerData.has(t))continue;I.key.level!==y&&(y=I.key.level,S.setDataUniforms(h,f,o,y,g));const m=I.layerData.get(t);if(!m.fillIndexCount)continue;m.prepareForRendering(c);const V=m.fillVAO;if(V!=null){if(c.bindVAO(V),h.setUniformMatrix3fv(\"u_dvsMat3\",I.transforms.displayViewScreenMat3),c.setStencilFunction(B.EQUAL,I.stencilRef,255),n){const O=Math.max(2**(Math.round(f)-I.key.level),1),D=I.rangeX/(v*I.width*O);h.setUniform1f(\"u_patternFactor\",D)}if(u){const O=m.patternMap;if(!O)continue;for(const[D,L]of O){const q=g.getPageSize(D);q!=null&&(g.bind(c,w.LINEAR,D,N),h.setUniform2fv(\"u_mosaicSize\",q),h.setUniform1i(\"u_texture\",N),c.drawElements(C.TRIANGLES,L[1],A.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*L[0]))}}else c.drawElements(C.TRIANGLES,m.fillIndexCount,A.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*m.fillIndexStart);I.triangleCount+=m.fillIndexCount/3}}}_drawOutline(e,t,o,a,r,l){const{context:n,displayLevel:s,state:u,painter:c,pixelRatio:f,spriteMosaic:d,requestRender:_,allowDelayedRender:x}=e,g=o.outlineMaterial,b=c.vectorTilesMaterialManager,E=.75/f,S=this._outlineProgramOptions,T=b.getMaterialProgram(n,g,S);if(x&&_!=null&&!T.compiled)return void _();n.useProgram(T),T.setUniformMatrix3fv(\"u_displayMat3\",l===J.VIEWPORT?u.displayMat3:u.displayViewMat3),T.setUniform2fv(\"u_fillTranslation\",r),T.setUniform1f(\"u_depth\",o.z+lt),T.setUniform1f(\"u_outline_width\",E);let v=-1;for(const p of a){if(!p.layerData.has(t))continue;p.key.level!==v&&(v=p.key.level,g.setDataUniforms(T,s,o,v,d));const h=p.layerData.get(t);if(h.prepareForRendering(n),!h.outlineIndexCount)continue;const y=h.outlineVAO;y!=null&&(n.bindVAO(y),T.setUniformMatrix3fv(\"u_dvsMat3\",p.transforms.displayViewScreenMat3),n.setStencilFunction(B.EQUAL,p.stencilRef,255),n.drawElements(C.TRIANGLES,h.outlineIndexCount,A.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*h.outlineIndexStart),p.triangleCount+=h.outlineIndexCount/3)}}}class Ai extends k{constructor(){super(...arguments),this._programOptions={id:!1,pattern:!1,sdf:!1}}dispose(){}drawMany(e,t){const{context:o,displayLevel:a,state:r,painter:l,pixelRatio:n,spriteMosaic:s,styleLayerUID:u,requestRender:c,allowDelayedRender:f}=e;if(!t.some(O=>O.layerData.get(u)?.lineIndexCount??!1))return;const d=e.styleLayer,_=d.lineMaterial,x=l.vectorTilesMaterialManager,g=d.getPaintValue(\"line-translate\",a),b=d.getPaintValue(\"line-translate-anchor\",a),E=d.getPaintProperty(\"line-pattern\"),S=E!==void 0,T=S&&E.isDataDriven;let v,p;if(S&&!T){const O=E.getValue(a);v=s.getMosaicItemPosition(O)}let h=!1;if(!S){const O=d.getPaintProperty(\"line-dasharray\");if(p=O!==void 0,h=p&&O.isDataDriven,p&&!h){const D=O.getValue(a),L=d.getDashKey(D,d.getLayoutValue(\"line-cap\",a));v=s.getMosaicItemPosition(L)}}const y=1/n,I=this._programOptions;I.pattern=S,I.sdf=p;const m=x.getMaterialProgram(o,_,I);if(f&&c!=null&&!m.compiled)return void c();if(o.useProgram(m),m.setUniformMatrix3fv(\"u_displayViewMat3\",r.displayViewMat3),m.setUniformMatrix3fv(\"u_displayMat3\",b===J.VIEWPORT?r.displayMat3:r.displayViewMat3),m.setUniform2fv(\"u_lineTranslation\",g),m.setUniform1f(\"u_depth\",d.z),m.setUniform1f(\"u_antialiasing\",y),v&&v!=null){const{page:O}=v,D=s.getPageSize(O);D!=null&&(s.bind(o,w.LINEAR,O,N),m.setUniform2fv(\"u_mosaicSize\",D),m.setUniform1i(\"u_texture\",N))}let V=-1;for(const O of t){if(!O.layerData.has(u))continue;O.key.level!==V&&(V=O.key.level,_.setDataUniforms(m,a,d,V,s));const D=2**(a-V)/n;m.setUniform1f(\"u_zoomFactor\",D);const L=O.layerData.get(u);if(!L.lineIndexCount)continue;L.prepareForRendering(o);const q=L.vao;if(q!=null){if(o.bindVAO(q),m.setUniformMatrix3fv(\"u_dvsMat3\",O.transforms.displayViewScreenMat3),o.setStencilFunction(B.EQUAL,O.stencilRef,255),T||h){const le=L.patternMap;if(!le)continue;for(const[P,$]of le){const z=s.getPageSize(P);z!=null&&(s.bind(o,w.LINEAR,P,N),m.setUniform2fv(\"u_mosaicSize\",z),m.setUniform1i(\"u_texture\",N),o.drawElements(C.TRIANGLES,$[1],A.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*$[0]))}}else o.drawElements(C.TRIANGLES,L.lineIndexCount,A.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*L.lineIndexStart);O.triangleCount+=L.lineIndexCount/3}}}}const Ci=256/360,Pi=1/Math.LN2;function Di(i,e){return(i%=e)>=0?i:i+e}function nt(i){return Di(i*Ci,256)}function Ri(i){return Math.log(i)*Pi}const Li=1/65536;class Mi extends k{constructor(){super(...arguments),this._iconProgramOptions={id:!1,sdf:!1},this._sdfProgramOptions={id:!1},this._spritesTextureSize=Ut()}dispose(){}drawMany(e,t){const o=e.styleLayer;this._drawIcons(e,o,t),this._drawText(e,o,t)}_drawIcons(e,t,o){const{context:a,displayLevel:r,painter:l,spriteMosaic:n,state:s,styleLayerUID:u,requestRender:c,allowDelayedRender:f}=e,d=t.iconMaterial,_=l.vectorTilesMaterialManager;let x,g=!1;for(const m of o)if(m.layerData.has(u)&&(x=m.layerData.get(u),x.iconPerPageElementsMap.size>0)){g=!0;break}if(!g)return;const b=t.getPaintValue(\"icon-translate\",r),E=t.getPaintValue(\"icon-translate-anchor\",r);let S=t.getLayoutValue(\"icon-rotation-alignment\",r);S===Y.AUTO&&(S=t.getLayoutValue(\"symbol-placement\",r)===ze.POINT?Y.VIEWPORT:Y.MAP);const T=S===Y.MAP,v=t.getLayoutValue(\"icon-keep-upright\",r)&&T,p=x.isIconSDF,h=this._iconProgramOptions;h.sdf=p;const y=_.getMaterialProgram(a,d,h);if(f&&c!=null&&!y.compiled)return void c();a.useProgram(y),y.setUniformMatrix3fv(\"u_displayViewMat3\",S===Y.MAP?s.displayViewMat3:s.displayMat3),y.setUniformMatrix3fv(\"u_displayMat3\",E===J.VIEWPORT?s.displayMat3:s.displayViewMat3),y.setUniform2fv(\"u_iconTranslation\",b),y.setUniform1f(\"u_depth\",t.z),y.setUniform1f(\"u_mapRotation\",nt(s.rotation)),y.setUniform1f(\"u_keepUpright\",v?1:0),y.setUniform1f(\"u_level\",10*r),y.setUniform1i(\"u_texture\",N),y.setUniform1f(\"u_fadeDuration\",Ve/1e3);let I=-1;for(const m of o){if(!m.layerData.has(u)||(m.key.level!==I&&(I=m.key.level,d.setDataUniforms(y,r,t,I,n)),x=m.layerData.get(u),x.iconPerPageElementsMap.size===0))continue;x.prepareForRendering(a),x.updateOpacityInfo();const V=x.iconVAO;if(V!=null){a.bindVAO(V),y.setUniformMatrix3fv(\"u_dvsMat3\",m.transforms.displayViewScreenMat3),y.setUniform1f(\"u_time\",(performance.now()-x.lastOpacityUpdate)/1e3);for(const[O,D]of x.iconPerPageElementsMap)this._renderIconRange(e,y,D,O,m)}}}_renderIconRange(e,t,o,a,r){const{context:l,spriteMosaic:n}=e;this._spritesTextureSize[0]=n.getWidth(a)/4,this._spritesTextureSize[1]=n.getHeight(a)/4,t.setUniform2fv(\"u_mosaicSize\",this._spritesTextureSize),n.bind(l,w.LINEAR,a,N),this._setStencilState(e,r),l.drawElements(C.TRIANGLES,o[1],A.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*o[0]),r.triangleCount+=o[1]/3}_drawText(e,t,o){const{context:a,displayLevel:r,glyphMosaic:l,painter:n,pixelRatio:s,spriteMosaic:u,state:c,styleLayerUID:f,requestRender:d,allowDelayedRender:_}=e,x=t.textMaterial,g=n.vectorTilesMaterialManager;let b,E=!1;for(const z of o)if(z.layerData.has(f)&&(b=z.layerData.get(f),b.glyphPerPageElementsMap.size>0)){E=!0;break}if(!E)return;const S=t.getPaintProperty(\"text-opacity\");if(S&&!S.isDataDriven&&S.getValue(r)===0)return;const T=t.getPaintProperty(\"text-color\"),v=!T||T.isDataDriven||T.getValue(r)[3]>0,p=t.getPaintProperty(\"text-halo-width\"),h=t.getPaintProperty(\"text-halo-color\"),y=(!p||p.isDataDriven||p.getValue(r)>0)&&(!h||h.isDataDriven||h.getValue(r)[3]>0);if(!v&&!y)return;const I=24/8;let m=t.getLayoutValue(\"text-rotation-alignment\",r);m===Y.AUTO&&(m=t.getLayoutValue(\"symbol-placement\",r)===ze.POINT?Y.VIEWPORT:Y.MAP);const V=m===Y.MAP,O=t.getLayoutValue(\"text-keep-upright\",r)&&V,D=.8*I/s;this._glyphTextureSize||(this._glyphTextureSize=Gt(l.width/4,l.height/4));const L=t.getPaintValue(\"text-translate\",r),q=t.getPaintValue(\"text-translate-anchor\",r),le=this._sdfProgramOptions,P=g.getMaterialProgram(a,x,le);if(_&&d!=null&&!P.compiled)return void d();a.useProgram(P),P.setUniformMatrix3fv(\"u_displayViewMat3\",m===Y.MAP?c.displayViewMat3:c.displayMat3),P.setUniformMatrix3fv(\"u_displayMat3\",q===J.VIEWPORT?c.displayMat3:c.displayViewMat3),P.setUniform2fv(\"u_textTranslation\",L),P.setUniform1f(\"u_depth\",t.z+Li),P.setUniform2fv(\"u_mosaicSize\",this._glyphTextureSize),P.setUniform1f(\"u_mapRotation\",nt(c.rotation)),P.setUniform1f(\"u_keepUpright\",O?1:0),P.setUniform1f(\"u_level\",10*r),P.setUniform1i(\"u_texture\",Pe),P.setUniform1f(\"u_antialiasingWidth\",D),P.setUniform1f(\"u_fadeDuration\",Ve/1e3);let $=-1;for(const z of o){if(!z.layerData.has(f)||(z.key.level!==$&&($=z.key.level,x.setDataUniforms(P,r,t,$,u)),b=z.layerData.get(f),b.glyphPerPageElementsMap.size===0))continue;b.prepareForRendering(a),b.updateOpacityInfo();const Ie=b.textVAO;if(Ie==null)continue;a.bindVAO(Ie),P.setUniformMatrix3fv(\"u_dvsMat3\",z.transforms.displayViewScreenMat3),this._setStencilState(e,z);const mt=(performance.now()-b.lastOpacityUpdate)/1e3;P.setUniform1f(\"u_time\",mt),b.glyphPerPageElementsMap.forEach((vt,pt)=>{this._renderGlyphRange(a,vt,pt,l,P,y,v,z)})}}_renderGlyphRange(e,t,o,a,r,l,n,s){a.bind(e,w.LINEAR,o,Pe),l&&(r.setUniform1f(\"u_halo\",1),e.drawElements(C.TRIANGLES,t[1],A.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),s.triangleCount+=t[1]/3),n&&(r.setUniform1f(\"u_halo\",0),e.drawElements(C.TRIANGLES,t[1],A.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),s.triangleCount+=t[1]/3)}_setStencilState(e,t){const{context:o,is3D:a,stencilSymbols:r}=e;if(o.setStencilTestEnabled(!0),r)return o.setStencilWriteMask(255),void o.setStencilFunction(B.ALWAYS,t.stencilRef,255);o.setStencilWriteMask(0),a?o.setStencilFunction(B.EQUAL,t.stencilRef,255):o.setStencilFunction(B.GREATER,255,255)}}const st={clip:li,stencil:Ze,bitmap:Kt,tileDebugInfo:rt,vtlBackground:Ii,vtlFill:Ei,vtlLine:Ai,vtlCircle:Oi,vtlSymbol:Mi},zi=i=>{switch(i.BYTES_PER_ELEMENT){case 1:return A.UNSIGNED_BYTE;case 2:return A.UNSIGNED_SHORT;case 4:return A.UNSIGNED_INT;default:throw new me(\"Cannot get DataType of array\")}},Vi=(i,e,t,o)=>{let a=0;for(let r=1;r<t;r++){const l=i[2*(e+r-1)],n=i[2*(e+r-1)+1];a+=(i[2*(e+r)]-l)*(i[2*(e+r)+1]+n)}return o?a>0:a<0},ct=({coords:i,lengths:e},t)=>{const o=[];for(let a=0,r=0;a<e.length;r+=e[a],a+=1){const l=r,n=[];for(;a<e.length-1&&Vi(i,r+e[a],e[a+1],t);a+=1,r+=e[a])n.push(r+e[a]-l);const s=i.slice(2*l,2*(r+e[a])),u=Yt(s,n,2);for(const c of u)o.push(c+l)}return o};class U{constructor(e,t,o,a=!1){this._cache={},this.vertices=e,this.indices=t,this.primitiveType=o,this.isMapSpace=a}static fromPath(e){const t=Ht(new we,e.path,!1,!1),o=t.coords,a=new Uint32Array(ct(t,!0)),r=new Uint32Array(o.length/2);for(let l=0;l<r.length;l++)r[l]=R(Math.floor(o[2*l]),Math.floor(o[2*l+1]));return new U({geometry:r},a,C.TRIANGLES)}static fromGeometry(e,t){const o=t.geometry?.type;switch(o){case\"polygon\":return U.fromPolygon(e,t.geometry);case\"extent\":return U.fromMapExtent(e,t.geometry);default:return _e.getLogger(\"esri.views.2d.engine.webgl.Mesh2D\").error(new me(\"mapview-bad-type\",`Unable to create a mesh from type ${o}`,t)),U.fromScreenExtent({xmin:0,ymin:0,xmax:1,ymax:1})}}static fromPolygon(e,t){const o=Wt(new we,t,!1,!1),a=o.coords,r=new Uint32Array(ct(o,!1)),l=new Uint32Array(a.length/2),n=Ne(),s=Ne();for(let u=0;u<l.length;u++)kt(n,a[2*u],a[2*u+1]),e.toScreen(s,n),l[u]=R(Math.floor(s[0]),Math.floor(s[1]));return new U({geometry:l},r,C.TRIANGLES,!0)}static fromScreenExtent({xmin:e,xmax:t,ymin:o,ymax:a}){const r={geometry:new Uint32Array([R(e,o),R(t,o),R(e,a),R(e,a),R(t,o),R(t,a)])},l=new Uint32Array([0,1,2,3,4,5]);return new U(r,l,C.TRIANGLES)}static fromMapExtent(e,t){const[o,a]=e.toScreen([0,0],[t.xmin,t.ymin]),[r,l]=e.toScreen([0,0],[t.xmax,t.ymax]),n={geometry:new Uint32Array([R(o,a),R(r,a),R(o,l),R(o,l),R(r,a),R(r,l)])},s=new Uint32Array([0,1,2,3,4,5]);return new U(n,s,C.TRIANGLES)}destroy(){this._cache.indexBuffer!=null&&this._cache.indexBuffer.dispose(),this._cache.vertexBuffers?.forEach(e=>e?.dispose()),this._cache.indexBuffer=this._cache.vertexBuffers=null}get elementType(){return zi(this.indices)}getIndexBuffer(e,t=Z.STATIC_DRAW){return this._cache.indexBuffer??=G.createIndex(e,t,this.indices),this._cache.indexBuffer}getVertexBuffers(e,t=Z.STATIC_DRAW){return this._cache.vertexBuffers??=new Map(Object.keys(this.vertices).reduce((o,a)=>(o.push([a,G.createVertex(e,t,this.vertices[a])]),o),new Array)),this._cache.vertexBuffers}}class be extends Me{constructor(e,t){super(),this._clip=t,this._cache={},this.stage=e,this._handle=gt(()=>t.version,()=>this._invalidate()),this.ready()}static fromClipArea(e,t){return new be(e,t)}_destroyGL(){this._cache.mesh!=null&&(this._cache.mesh.destroy(),this._cache.mesh=null),this._cache.vao!=null&&(this._cache.vao.dispose(),this._cache.vao=null)}destroy(){this._destroyGL(),this._handle.remove()}getVAO(e,t,o,a){const[r,l]=t.size;if(this._clip.type!==\"geometry\"&&this._lastWidth===r&&this._lastHeight===l||(this._lastWidth=r,this._lastHeight=l,this._destroyGL()),this._cache.vao==null){const n=this._createMesh(t,this._clip),s=n.getIndexBuffer(e),u=n.getVertexBuffers(e);this._cache.mesh=n,this._cache.vao=new K(e,o,a,u,s)}return this._cache.vao}_createTransforms(){return{displayViewScreenMat3:te()}}_invalidate(){this._destroyGL(),this.requestRender()}_createMesh(e,t){switch(t.type){case\"rect\":return U.fromScreenExtent(Lt(t,e.size[0],e.size[1]));case\"path\":return U.fromPath(t);case\"geometry\":return U.fromGeometry(e,t);default:return _e.getLogger(\"esri.views.2d.engine.webgl.ClippingInfo\").error(new me(\"mapview-bad-type\",\"Unable to create ClippingInfo mesh from clip of type: ${clip.type}\")),U.fromScreenExtent({xmin:0,ymin:0,xmax:1,ymax:1})}}}class Ni extends Nt{set clips(e){super.clips=e,this._updateClippingInfo(e)}renderChildren(e){e.painter.setPipelineState(null),this._renderPasses==null&&(this._renderPasses=this.prepareRenderPasses(e.painter));for(const t of this._renderPasses)try{t.render(e)}catch{}}prepareRenderPasses(e){return[e.registerRenderPass({name:\"clip\",brushes:[st.clip],target:()=>this._clippingInfos,drawPhase:ie.MAP|ie.LABEL|ie.LABEL_ALPHA|ie.DEBUG|ie.HIGHLIGHT})]}_updateClippingInfo(e){this._clippingInfos!=null&&(this._clippingInfos.forEach(t=>t.destroy()),this._clippingInfos=null),e!=null&&e.length&&(this._clippingInfos=e.items.map(t=>be.fromClipArea(this.stage,t))),this.requestRender()}}export{Ze as _,Fe as a,si as b,it as c,oe as d,k as e,ni as f,Ri as g,mi as i,Ni as n,Ke as r,st as t,rt as y};\n","const o=!0,t=32,c=1.5,e=200;export{c,e,o,t};\n","function o(){return new Float32Array(3)}function u(r){const n=new Float32Array(3);return n[0]=r[0],n[1]=r[1],n[2]=r[2],n}function t(r,n,s){const e=new Float32Array(3);return e[0]=r,e[1]=n,e[2]=s,e}function _(r,n){return new Float32Array(r,n,3)}function c(){return o()}function a(){return t(1,1,1)}function i(){return t(1,0,0)}function f(){return t(0,1,0)}function l(){return t(0,0,1)}const y=c(),w=a(),A=i(),F=f(),N=l();Object.freeze(Object.defineProperty({__proto__:null,ONES:w,UNIT_X:A,UNIT_Y:F,UNIT_Z:N,ZEROS:y,clone:u,create:o,createView:_,fromValues:t,ones:a,unitX:i,unitY:f,unitZ:l,zeros:c},Symbol.toStringTag,{value:\"Module\"}));export{o as n,t as r,u as t};\n"],"names":["c","constructor","e","this","_readFile","resolveIncludes","_resolve","t","Map","has","get","r","_read","Error","l","s","exec","i","push","path","start","index","length","h","n","forEach","a","slice","set","d","shaders","vertexShader","fragmentShader","attributes","p","u","m","o","BACKGROUND","FILL","LINE","SYMBOL","CIRCLE","VISIBLE","NONE","POINT","LINE_CENTER","MAP","VIEWPORT","AUTO","LEFT","CENTER","RIGHT","TOP","BOTTOM","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","UPPERCASE","LOWERCASE","HORIZONTAL","VERTICAL","backgroundLayoutDefinition","visibility","type","values","default","fillLayoutDefinition","lineLayoutDefinition","BUTT","MITER","symbolLayoutDefinition","minimum","value","circleLayoutDefinition","backgroundPaintDefinition","maximum","fillPaintDefinition","linePaintDefinition","symbolPaintDefinition","rasterPaintDefinition","circlePaintDefinition","getLogger","_context","_locations","_layout","_buffers","_indexBuffer","_glName","_initialized","glName","context","vertexBuffers","indexBuffer","byteSize","Array","from","reduce","usedMemory","layout","locations","Object","keys","dispose","getBoundVAO","bindVAO","clear","disposeVAOOnly","getOwnPropertyNames","warn","gl","deleteVertexArray","instanceCounter","decrement","VertexArrayObject","initialize","createVertexArray","bindVertexArray","_bindLayout","increment","bind","error","bindBuffer","ELEMENT_ARRAY_BUFFER","unbind","Fe","_rctx","_attributes","name","offset","SHORT","count","hash","stride","_vertexBuffer","createVertex","STATIC_DRAW","Uint16Array","_vao","_count","draw","drawArrays","TRIANGLE_STRIP","k","brushEffect","prepareState","drawMany","visible","he","nearest","defines","samplingMode","NEAREST","mips","bilinear","LINEAR","bicubic","trilinear","LINEAR_MIPMAP_LINEAR","Zt","state","resolution","pixelRatio","Math","round","rotation","isSourceScaled","Kt","super","arguments","_desc","vsPath","fsPath","_quad","setBlendingEnabled","setColorMask","setStencilWriteMask","setStencilTestEnabled","renderingOptions","painter","requestRender","allowDelayedRender","source","isReady","materialManager","getProgram","compiled","timeline","begin","blendFunction","setBlendFunctionSeparate","ONE","ONE_MINUS_SRC_ALPHA","setStencilFunction","EQUAL","stencilRef","coordScale","computedOpacity","transforms","f","setSamplingProfile","useProgram","setUniformMatrix3fv","displayViewScreenMat3","setUniform1i","setUniform2fv","setUniform1f","end","Be","Float32Array","qt","H","jt","Ue","Ge","Ye","ke","He","We","Xt","$t","Qt","Jt","ei","ti","freeze","defineProperty","__proto__","ONES","UNIT_W","UNIT_X","UNIT_Y","UNIT_Z","ZEROS","clone","create","createView","fromValues","ones","unitW","unitX","unitY","unitZ","zeros","Symbol","toStringTag","ii","background","bitBlit","debug","overlay","dot","filtering","heatmap","heatmapResolve","highlight","materials","fill","hittest","icon","heatmapAccumulate","label","line","pie","shared","text","blit","bloom","composite","gaussianBlur","luminosityHighPass","blur","dra","sobel","filterEffect","pp","raster","bitmap","common","flow","imagery","particles","streamlines","hillshade","lut","magdir","reproject","rfx","aspect","bandarithmetic","colormap2rgb","compositeband","computechange","contrast","convolution","curvature","extractband","focalstatistics","grayscale","local","mask","ndvi","remap","slope","stretch","vs","scalar","stencil","test","tileInfo","util","oi","split","ai","oe","ae","ri","b","geometry","location","li","_color","_program","setFaceCullingEnabled","setStencilOp","KEEP","REPLACE","ALWAYS","getVAO","bufferLayouts","setUniform4fv","displayMat3","drawElements","TRIANGLES","size","UNSIGNED_INT","xe","BYTE","ni","si","UNSIGNED_SHORT","Ze","_solidProgram","_solidVertexArrayObject","setDepthWriteEnabled","setDepthTestEnabled","_initialize","setStencilFunctionSeparate","FRONT_AND_BACK","GREATER","rangeX","rangeY","Int8Array","Ke","tileDebugInfoTexture","debugInfo","display","minOrderedLength","minUnorderedLength","triangleCount","memory","bytesUsed","bytesReserved","_destroyed","key","x","y","width","height","destroy","debugSlot","parent","_stage","children","indexOf","setTransform","tileMat3","toScreenNoRotation","displayViewMat3","destroyed","qe","ye","ci","labelMat2d","viewMat2d","_createTransforms","containsScreenPoint","viewMat3","W","ut","next","isArray","data","last","je","_head","head","maxAvailableSpace","max","firstFit","free","ui","fi","re","instance","materialKey","target","textureKey","indexEnd","extend","render","techniqueRef","getStencilReference","getAttributePrecisionPackFactors","instanceId","getMesh","drawCompute","drawGeometry","getComputeVAO","Uint32Array","BYTES_PER_ELEMENT","POINTS","getGeometryVAO","di","ft","_length","_minOrderedLength","_materialKeys","Set","fromDisplayEntities","records","getInstance","addRecord","indexStart","indexCount","vertexStart","vertexCount","drawPhase","infos","g","_tail","STRICT_ORDER","_insert","_","symbologyPlane","STRICT_MARKERS_AND_TEXT","MARKER","TEXT","E","S","add","_insertAtHead","_insertAtEnd","_insertAtMiddle","_i","_indexOnly","vertex","operations","copyRecord","srcFrom","dstFrom","mutate","Xe","$e","dt","acquireUint32Array","_array","_pool","array","getUint32View","buffer","byteOffset","expand","byteLength","releaseUint32Array","Se","_t","_data","ArrayBuffer","BYTE_LENGTH","_freeList","mi","_pages","_pagesByBuffer","_bytesAllocated","_bytesTotal","console","log","_addPage","vi","Qe","pi","Je","strideInt","bufferType","dirty","memoryStats","_gpu","_cpu","elementSize","intSize","fillPointer","invalidated","bufferSize","invalidatedComputeBuffer","_gpuComputeTriangles","invalidate","_invalidateTriangleBuffer","freeList","ensure","min","getGPUBuffer","_createComputeBuffer","_createBuffer","getView","insert","copyFrom","upload","setSubData","reshuffle","DYNAMIC_DRAW","createIndex","et","gi","filter","map","divisor","normalized","hi","computeAttributeMap","xi","_bufferPool","_invalidatedGeometry","_invalidatedCompute","_position","find","_computeVAO","_geometryVAO","getDrawArgs","primitive","packPrecisionFactor","getDebugVertexInfo","DataView","vertices","_ensure","append","indices","vertexFrom","indexFrom","copyRecordFrom","overlaps","remove","fe","_pos","_buffer","_i32View","Int32Array","_f32View","readInt32","readF32","tt","entities","vertexData","yi","Si","Ti","it","_meshes","_entities","_invalidated","_nextUploadAllowed","tileAge","_metrics","_entityIds","_entityIdsFromBuffer","_attributeEpoch","_encounteredEnd","_objectIdMap","enableDeferredUploads","_displayList","beforeRender","_needsReshuffle","reshuffleManager","schedule","tryReady","_uploadAllowed","id","ready","labelMetrics","hasData","hasAnimations","needsUpload","getDisplayList","sort","sortKey","BATCHING","getSortKeys","onMessage","objectIdMap","_onAppendMessage","_onUpdateMessage","_aggregateMemoryStats","attributeEpoch","isPixelBuffer","modify","_removeByIdsFromBuffer","_removeByIds","info","copyPixelBufferedEntitesFrom","_ensureMesh","bufferPool","_removeDuplicatedBufferedEntites","_insertVertexData","updateBaseOffsets","_tryInsertBufferedEntity","_insertEntity","metrics","_removeRecordsFromMesh","_remove","delete","entityTexel","splice","entityIds","objectId","displayId","ot","at","Te","X","M","bi","rt","_outlineProgram","_tileInfoProgram","_outlineVertexArrayObject","_tileInfoVertexArrayObject","_ctx","_loadWGLResources","setUniform2f","LINE_STRIP","_getTexture","bindTexture","descriptor","document","createElement","getContext","wrapMode","CLAMP_TO_EDGE","isImmutable","clearRect","canvas","textAlign","textBaseline","font","lineWidth","fillStyle","strokeStyle","strokeText","fillText","setData","Ii","_patternMatrix","_programOptions","pattern","displayLevel","styleLayer","backgroundMaterial","vectorTilesMaterialManager","getPaintValue","window","devicePixelRatio","spriteMosaic","T","v","getMaterialProgram","getMosaicItemPosition","tl","br","page","I","getPageSize","setUniform4f","z","level","getAttributeLocations","getLayoutInfo","Oi","requiredLevel","styleLayerUID","some","layerData","circleIndexCount","circleMaterial","setDataUniforms","prepareForRendering","vao","circleIndexStart","lt","Ei","_fillProgramOptions","_outlineProgramOptions","renderPass","fillIndexCount","outlineIndexCount","getPaintProperty","isDataDriven","getValue","_drawFill","hasDataDrivenOutlineColor","outlineUsesFillColor","_drawOutline","fillMaterial","V","fillVAO","O","D","patternMap","L","q","fillIndexStart","outlineMaterial","outlineVAO","outlineIndexStart","Ai","sdf","lineIndexCount","lineMaterial","getDashKey","getLayoutValue","le","P","$","lineIndexStart","Ci","Pi","LN2","Di","nt","Ri","Li","Mi","_iconProgramOptions","_sdfProgramOptions","_spritesTextureSize","_drawIcons","_drawText","iconMaterial","iconPerPageElementsMap","isIconSDF","updateOpacityInfo","iconVAO","performance","now","lastOpacityUpdate","_renderIconRange","getWidth","getHeight","_setStencilState","glyphMosaic","textMaterial","glyphPerPageElementsMap","_glyphTextureSize","Ie","textVAO","mt","vt","pt","_renderGlyphRange","is3D","stencilSymbols","st","clip","tileDebugInfo","vtlBackground","vtlFill","vtlLine","vtlCircle","vtlSymbol","zi","UNSIGNED_BYTE","Vi","ct","coords","lengths","U","_cache","primitiveType","isMapSpace","fromPath","floor","fromGeometry","fromPolygon","fromMapExtent","fromScreenExtent","xmin","ymin","xmax","ymax","toScreen","elementType","getIndexBuffer","getVertexBuffers","be","_clip","stage","_handle","version","_invalidate","fromClipArea","_destroyGL","mesh","_lastWidth","_lastHeight","_createMesh","Ni","clips","_updateClippingInfo","renderChildren","setPipelineState","_renderPasses","prepareRenderPasses","registerRenderPass","brushes","_clippingInfos","LABEL","LABEL_ALPHA","DEBUG","HIGHLIGHT","items","w","A","F","N"],"sourceRoot":""}